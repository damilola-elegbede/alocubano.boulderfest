#!/usr/bin/env node

/**
 * Embeds documentation content into a JavaScript module for Vercel deployment
 * This ensures docs are available at runtime without file system access
 */

const fs = require('fs');
const path = require('path');

// Documentation files to embed
const docsToEmbed = [
  'docs/ADMIN_DESIGN_SYSTEM.md',
  'docs/CONNECTION_MANAGER.md',
  'docs/ENTERPRISE_DATABASE_DEPLOYMENT.md',
  'docs/GOOGLE_DRIVE_INTEGRATION.md',
  'docs/SECRET_VALIDATION.md',
  'docs/THEME_SYSTEM.md',
  'docs/architecture/ENTERPRISE_DATABASE_SYSTEM.md',
  'docs/architecture/MULTI_EVENT_ARCHITECTURE.md',
  'docs/architecture/MULTI_EVENT_IMPLEMENTATION_PLAN.md',
  'docs/architecture/TEST_ISOLATION_ARCHITECTURE.md'
];

// Read all documentation files
const docsContent = {};
const docsList = [];

for (const docPath of docsToEmbed) {
  try {
    const fullPath = path.join(process.cwd(), docPath);
    const content = fs.readFileSync(fullPath, 'utf-8');
    const key = docPath.replace('docs/', '');
    docsContent[key] = content;
    docsList.push(key);
    console.log(`‚úÖ Embedded: ${key}`);
  } catch (error) {
    console.error(`‚ùå Failed to read ${docPath}:`, error.message);
  }
}

// Generate the embedded docs module
const moduleContent = `// Auto-generated file - DO NOT EDIT
// Generated by scripts/embed-docs.js

export const embeddedDocs = ${JSON.stringify(docsContent, null, 2)};

export const availableDocs = ${JSON.stringify(docsList, null, 2)};

console.log('üìö Embedded docs loaded:', Object.keys(embeddedDocs).length, 'files');
`;

// Write to api directory
const outputPath = path.join(process.cwd(), 'api', 'embedded-docs.js');
fs.writeFileSync(outputPath, moduleContent);

console.log(`\n‚úÖ Generated ${outputPath}`);
console.log(`üìö Embedded ${Object.keys(docsContent).length} documentation files`);