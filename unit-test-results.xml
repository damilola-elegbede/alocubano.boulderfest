<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="1028" failures="0" errors="0" time="3.858">
    <testsuite name="tests/unit/cache-placeholder-logic.test.js" timestamp="2025-09-12T18:06:46.982Z" hostname="Damilolas-MacBook-Air.local" tests="5" failures="0" errors="0" skipped="0" time="0.001962333">
        <testcase classname="tests/unit/cache-placeholder-logic.test.js" name="Cache Placeholder Logic &gt; Placeholder Detection and Fail-Fast Behavior &gt; should fail fast when placeholder cache data has isPlaceholder: true" time="0.001052583">
            <system-out>
Gallery cache cleared
Gallery: Rejecting placeholder cache data - failing fast
Gallery cache cleared

            </system-out>
            <system-err>
Gallery Service Error: Error: FATAL: Google Drive secret not configured. Build-time cache contains only placeholder data.
    at GalleryService.getGalleryData [90m(/Users/damilola/Documents/Projects/alocubano.boulderfest/[39mlib/gallery-service.js:43:19[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/unit/cache-placeholder-logic.test.js" name="Cache Placeholder Logic &gt; Placeholder Detection and Fail-Fast Behavior &gt; should accept cache data without isPlaceholder flag (real data)" time="0.000319333">
            <system-out>
Gallery cache cleared
Gallery: Serving from build-time cache
Gallery cache cleared

            </system-out>
        </testcase>
        <testcase classname="tests/unit/cache-placeholder-logic.test.js" name="Cache Placeholder Logic &gt; Placeholder Detection and Fail-Fast Behavior &gt; should accept empty cache data without isPlaceholder flag (empty but valid)" time="0.000128458">
            <system-out>
Gallery cache cleared
Gallery: Serving from build-time cache
Gallery cache cleared

            </system-out>
        </testcase>
        <testcase classname="tests/unit/cache-placeholder-logic.test.js" name="Cache Placeholder Logic &gt; Placeholder Detection and Fail-Fast Behavior &gt; should fail fast when runtime cache has isPlaceholder: true" time="0.000244417">
            <system-out>
Gallery cache cleared
Gallery: Rejecting placeholder runtime cache data - failing fast
Gallery cache cleared

            </system-out>
            <system-err>
Gallery Service Error: Error: FATAL: Google Drive secret not configured. Runtime cache contains only placeholder data.
    at GalleryService.getGalleryData [90m(/Users/damilola/Documents/Projects/alocubano.boulderfest/[39mlib/gallery-service.js:62:17[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/unit/cache-placeholder-logic.test.js" name="Cache Placeholder Logic &gt; Cache Generation Logic &gt; should correctly identify placeholder vs real data" time="0.000083916">
            <system-out>
Gallery cache cleared
Gallery cache cleared

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/dark-mode-verification.test.js" timestamp="2025-09-12T18:06:46.983Z" hostname="Damilolas-MacBook-Air.local" tests="34" failures="0" errors="0" skipped="0" time="0.006257042">
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Dark Mode Verification Tests &gt; 1. Muted Text Contrast (--color-gray-400) &gt; should use --color-gray-400 (#999999) for muted text" time="0.001545917">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Dark Mode Verification Tests &gt; 1. Muted Text Contrast (--color-gray-400) &gt; should meet WCAG AA contrast ratio for muted text on dark backgrounds" time="0.000147209">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Dark Mode Verification Tests &gt; 1. Muted Text Contrast (--color-gray-400) &gt; should have proper contrast for muted text in dark mode" time="0.000111791">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Dark Mode Verification Tests &gt; 2. Form Border Contrast (--color-gray-600) &gt; should use --color-gray-600 (#666666) for form borders" time="0.000072625">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Dark Mode Verification Tests &gt; 2. Form Border Contrast (--color-gray-600) &gt; should meet WCAG AA contrast ratio for form borders" time="0.000064708">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Dark Mode Verification Tests &gt; 2. Form Border Contrast (--color-gray-600) &gt; should have sufficient contrast for form elements in dark mode" time="0.000068958">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Dark Mode Verification Tests &gt; 3. Navigation Hamburger Menu Visibility &gt; should have visible hamburger menu styles in dark mode" time="0.000063833">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Dark Mode Verification Tests &gt; 3. Navigation Hamburger Menu Visibility &gt; should have proper contrast for hamburger menu lines" time="0.000059209">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Dark Mode Verification Tests &gt; 3. Navigation Hamburger Menu Visibility &gt; should have hover states for hamburger menu" time="0.000075">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Dark Mode Verification Tests &gt; 4. Disabled Form States &gt; should have proper disabled form styling" time="0.000086667">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Dark Mode Verification Tests &gt; 4. Disabled Form States &gt; should have disabled button styles" time="0.000075792">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Dark Mode Verification Tests &gt; 4. Disabled Form States &gt; should meet contrast requirements for disabled states" time="0.000062666">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Dark Mode Verification Tests &gt; 5. Placeholder Text Contrast &gt; should use --color-text-secondary for placeholders" time="0.000065459">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Dark Mode Verification Tests &gt; 5. Placeholder Text Contrast &gt; should have dark mode specific placeholder styles" time="0.000059834">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Dark Mode Verification Tests &gt; 5. Placeholder Text Contrast &gt; should meet contrast requirements for placeholder text" time="0.000052834">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Dark Mode Verification Tests &gt; 6. Mobile Login Screen Colors &gt; should use CSS variables instead of hardcoded colors" time="0.000390542">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Dark Mode Verification Tests &gt; 6. Mobile Login Screen Colors &gt; should have proper dark theme enforcement" time="0.000079167">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Dark Mode Verification Tests &gt; 7. Chart.js Theme Integration &gt; should have theme-aware color management functions" time="0.000666209">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Dark Mode Verification Tests &gt; 7. Chart.js Theme Integration &gt; should listen for theme changes" time="0.000104042">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Dark Mode Verification Tests &gt; 7. Chart.js Theme Integration &gt; should use CSS variables for chart colors" time="0.000107417">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Dark Mode Verification Tests &gt; 8. Comprehensive Color Usage Validation &gt; should have consistent dark mode color mappings" time="0.000080792">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Dark Mode Verification Tests &gt; 8. Comprehensive Color Usage Validation &gt; should have system preference support" time="0.000054625">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Dark Mode Verification Tests &gt; 9. Admin Page Specific Tests &gt; should enforce dark theme on all admin pages" time="0.000824958">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Dark Mode Verification Tests &gt; 9. Admin Page Specific Tests &gt; should include theme manager on all admin pages" time="0.000153375">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Dark Mode Verification Tests &gt; 9. Admin Page Specific Tests &gt; should use consistent CSS imports" time="0.000149125">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Dark Mode Verification Tests &gt; 10. Actual Contrast Ratio Calculations &gt; should calculate exact contrast ratios for critical combinations" time="0.000143792">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Dark Mode Verification Tests &gt; 11. Navigation Dark Mode Fixes &gt; should have dark mode mobile menu backdrop opacity" time="0.000069167">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Dark Mode Verification Tests &gt; 11. Navigation Dark Mode Fixes &gt; should have dark mode dropdown link contrast" time="0.000075958">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Dark Mode Verification Tests &gt; 11. Navigation Dark Mode Fixes &gt; should have proper hover states for dark mode" time="0.000081167">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Form Validation - Disabled State Tests &gt; should have comprehensive disabled form element coverage" time="0.00011075">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Form Validation - Disabled State Tests &gt; should have disabled state styling properties" time="0.000066583">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="Form Validation - Disabled State Tests &gt; should prevent hover effects on disabled elements" time="0.000050417">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="CSS Variable Consistency Tests &gt; should have all required gray scale variables" time="0.000082042">
        </testcase>
        <testcase classname="tests/unit/dark-mode-verification.test.js" name="CSS Variable Consistency Tests &gt; should have proper semantic color mappings" time="0.000060584">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/theme-manager.test.js" timestamp="2025-09-12T18:06:46.984Z" hostname="Damilolas-MacBook-Air.local" tests="38" failures="0" errors="0" skipped="0" time="0.371451167">
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; THEMES constants &gt; should define all theme constants" time="0.000511459">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; THEMES constants &gt; should have all expected theme values" time="0.000396916">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; isAdminPage &gt; should detect admin pages correctly" time="0.000213042">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; isAdminPage &gt; should not detect non-admin pages as admin" time="0.00016175">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; isAdminPage &gt; should be case-insensitive" time="0.000154208">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; isAdminPage &gt; should handle edge cases" time="0.000236333">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; hybrid theme behavior &gt; should return dark theme for admin pages" time="0.000144458">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; hybrid theme behavior &gt; should return system/light theme for main site pages by default" time="0.000212167">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; hybrid theme behavior &gt; should not use localStorage for admin pages" time="0.000182792">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; hybrid theme behavior &gt; should use localStorage for main site pages" time="0.000202625">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; theme determination &gt; should determine theme correctly for admin vs main site" time="0.00024625">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; theme determination &gt; should be affected by system preferences on main site" time="0.000181834">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; theme determination &gt; should handle missing matchMedia gracefully" time="0.000259875">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; theme application to DOM &gt; should apply dark theme for admin pages" time="0.023306">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; theme application to DOM &gt; should apply light theme for main site pages" time="0.022127459">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; theme application to DOM &gt; should handle missing document gracefully" time="0.000439334">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; theme application to DOM &gt; should dispatch themechange event on initialization" time="0.023241208">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; getCurrentTheme &gt; should return theme based on page type for admin pages" time="0.000262334">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; getCurrentTheme &gt; should return light theme for main site pages" time="0.000273791">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; getCurrentTheme &gt; should handle missing document gracefully" time="0.000297625">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; initializeTheme &gt; should apply theme based on page type for admin pages" time="0.023321625">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; initializeTheme &gt; should apply theme based on page type for main site pages" time="0.02248225">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; initializeTheme &gt; should set up system theme listeners for main site pages" time="0.000441042">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; initializeTheme &gt; should not set up system theme listeners for admin pages" time="0.000399167">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; admin page theme handling &gt; should always use dark theme on admin pages" time="0.000323292">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; admin page theme handling &gt; should always use dark theme on admin dashboard" time="0.000339458">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; admin page theme handling &gt; should use system/light theme on non-admin pages by default" time="0.000465">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; CSS custom property integration &gt; should apply theme attribute for admin pages" time="0.021411916">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; CSS custom property integration &gt; should apply theme attribute for main site pages" time="0.022024583">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; CSS custom property integration &gt; should allow CSS selectors to target admin dark theme" time="0.084975917">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; edge cases and error handling &gt; should work correctly with different admin paths" time="0.000679459">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; edge cases and error handling &gt; should work correctly with main site paths" time="0.000902167">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; edge cases and error handling &gt; should handle missing localStorage gracefully" time="0.000547584">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; edge cases and error handling &gt; should handle document without documentElement correctly" time="0.000520666">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; integration scenarios &gt; should work correctly for page navigation scenarios" time="0.070332459">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; integration scenarios &gt; should handle theme events correctly" time="0.024496291">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; integration scenarios &gt; should be consistent across multiple initializations" time="0.000834875">
        </testcase>
        <testcase classname="tests/unit/theme-manager.test.js" name="ThemeManager &gt; integration scenarios &gt; should not be affected by external DOM changes" time="0.022681458">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/theme-system.test.js" timestamp="2025-09-12T18:06:46.986Z" hostname="Damilolas-MacBook-Air.local" tests="35" failures="0" errors="0" skipped="2" time="0.706598042">
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Theme Manager Core Tests &gt; Constants and Admin Page Detection &gt; should define all theme constants correctly" time="0.002646458">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Theme Manager Core Tests &gt; Constants and Admin Page Detection &gt; should detect admin pages correctly" time="0.000649959">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Theme Manager Core Tests &gt; Constants and Admin Page Detection &gt; should not detect non-admin pages as admin" time="0.00049525">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Theme Manager Core Tests &gt; System Preference Detection &gt; should detect dark system preference" time="0.000368792">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Theme Manager Core Tests &gt; System Preference Detection &gt; should detect light system preference" time="0.00040875">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Theme Manager Core Tests &gt; System Preference Detection &gt; should handle missing matchMedia gracefully" time="0.000293958">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Theme Manager Core Tests &gt; LocalStorage Handling &gt; should store and retrieve theme preferences on non-admin pages" time="0.000872875">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Theme Manager Core Tests &gt; LocalStorage Handling &gt; should not store preferences on admin pages" time="0.00038125">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Theme Manager Core Tests &gt; LocalStorage Handling &gt; should handle invalid stored values" time="0.000282958">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Theme Manager Core Tests &gt; LocalStorage Handling &gt; should validate theme values before setting" time="0.000330292">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Theme Manager Core Tests &gt; Theme Determination Logic &gt; should always return dark theme for admin pages" time="0.000272667">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Theme Manager Core Tests &gt; Theme Determination Logic &gt; should respect user preferences on main site" time="0.000307958">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Theme Manager Core Tests &gt; Theme Determination Logic &gt; should get user preferences correctly" time="0.00026225">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Theme Manager Core Tests &gt; DOM Theme Application &gt; should apply theme attribute correctly" time="0.053802667">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Theme Manager Core Tests &gt; DOM Theme Application &gt; should dispatch themechange events on initialization" time="0.02114075">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Theme Manager Core Tests &gt; DOM Theme Application &gt; should dispatch events when theme is set on main site" time="0.1257365">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Theme Manager Core Tests &gt; System Preference Change Listeners &gt; should set up listeners on main site" time="0.002778875">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Theme Manager Core Tests &gt; System Preference Change Listeners &gt; should not set up listeners on admin pages" time="0.001215042">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Theme Manager Core Tests &gt; System Preference Change Listeners &gt; should handle legacy addListener for older browsers" time="0.001055083">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Theme Toggle Component Tests &gt; Component Initialization &gt; should initialize toggle component on main site" time="0.015083125">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Theme Toggle Component Tests &gt; Component Initialization &gt; should not initialize toggle on admin pages" time="0.000594542">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Theme Toggle Component Tests &gt; Component Initialization &gt; should add CSS styles to document head" time="0">
            <skipped/>
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Theme Toggle Component Tests &gt; Component Initialization &gt; should not add styles twice" time="0">
            <skipped/>
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Theme Toggle Component Tests &gt; Component Initialization &gt; should handle missing container gracefully" time="0.000872458">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Theme Toggle Component Tests &gt; Toggle State and Interactions &gt; should initialize with correct structure and default states" time="0.0038115">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Theme Toggle Component Tests &gt; Toggle State and Interactions &gt; should handle click events and update state" time="0.105466958">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Theme Toggle Component Tests &gt; Toggle State and Interactions &gt; should dispatch custom events on preference change" time="0.105947292">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Theme Toggle Component Tests &gt; Accessibility Features &gt; should have proper ARIA attributes" time="0.007473416">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Theme Toggle Component Tests &gt; Accessibility Features &gt; should have proper button titles" time="0.0036865">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Theme Toggle Component Tests &gt; Component Lifecycle &gt; should clean up correctly when destroyed" time="0.001575917">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Integration Scenarios &gt; should work correctly across page navigations" time="0.064023167">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Integration Scenarios &gt; should handle complete theme system workflow" time="0.155568125">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Integration Scenarios &gt; should handle edge cases and error conditions" time="0.003252834">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Performance and FOUC Prevention &gt; should initialize theme immediately to prevent FOUC" time="0.021679458">
        </testcase>
        <testcase classname="tests/unit/theme-system.test.js" name="Theme System Comprehensive Tests &gt; Performance and FOUC Prevention &gt; should handle rapid theme changes efficiently" time="0.001598875">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/frontend/theme-isolation-unit.test.js" timestamp="2025-09-12T18:06:46.987Z" hostname="Damilolas-MacBook-Air.local" tests="12" failures="0" errors="0" skipped="0" time="0.012631125">
        <testcase classname="tests/unit/frontend/theme-isolation-unit.test.js" name="Theme Isolation &gt; Dark Theme Application &gt; should apply dark styles when data-theme=&quot;dark&quot; is present" time="0.004167875">
        </testcase>
        <testcase classname="tests/unit/frontend/theme-isolation-unit.test.js" name="Theme Isolation &gt; Dark Theme Application &gt; should isolate admin components when in dark theme" time="0.001878625">
        </testcase>
        <testcase classname="tests/unit/frontend/theme-isolation-unit.test.js" name="Theme Isolation &gt; Light Theme Application &gt; should apply light styles when data-theme=&quot;light&quot; is explicitly set" time="0.000685167">
        </testcase>
        <testcase classname="tests/unit/frontend/theme-isolation-unit.test.js" name="Theme Isolation &gt; Light Theme Application &gt; should apply light styles when data-theme is absent" time="0.000553209">
        </testcase>
        <testcase classname="tests/unit/frontend/theme-isolation-unit.test.js" name="Theme Isolation &gt; Style Leakage Prevention &gt; should not apply dark theme styles without data-theme=&quot;dark&quot;" time="0.001130125">
        </testcase>
        <testcase classname="tests/unit/frontend/theme-isolation-unit.test.js" name="Theme Isolation &gt; Style Leakage Prevention &gt; should not allow admin styles to leak to main site" time="0.000325">
        </testcase>
        <testcase classname="tests/unit/frontend/theme-isolation-unit.test.js" name="Theme Isolation &gt; Style Leakage Prevention &gt; should not allow main site styles to leak to admin" time="0.000309584">
        </testcase>
        <testcase classname="tests/unit/frontend/theme-isolation-unit.test.js" name="Theme Isolation &gt; System Preference Handling &gt; should handle :root:not([data-theme=&quot;light&quot;]) selector correctly" time="0.000769292">
        </testcase>
        <testcase classname="tests/unit/frontend/theme-isolation-unit.test.js" name="Theme Isolation &gt; Theme Switching &gt; should properly switch styles when changing themes" time="0.000740375">
        </testcase>
        <testcase classname="tests/unit/frontend/theme-isolation-unit.test.js" name="Theme Isolation &gt; Theme Switching &gt; should handle rapid theme switching without style corruption" time="0.000936125">
        </testcase>
        <testcase classname="tests/unit/frontend/theme-isolation-unit.test.js" name="Theme Isolation &gt; CSS Specificity and Cascade &gt; should respect CSS specificity rules" time="0.000317292">
        </testcase>
        <testcase classname="tests/unit/frontend/theme-isolation-unit.test.js" name="Theme Isolation &gt; CSS Specificity and Cascade &gt; should maintain proper cascade order" time="0.000460875">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/api/brevo-service.test.js" timestamp="2025-09-12T18:06:46.988Z" hostname="Damilolas-MacBook-Air.local" tests="5" failures="0" errors="0" skipped="0" time="0.000475542">
        <testcase classname="tests/unit/api/brevo-service.test.js" name="Brevo Service &gt; Initialization &gt; should fail immediately when BREVO_API_KEY is missing" time="0.000121709">
            <system-err>
❌ FATAL: BREVO_API_KEY secret not configured

            </system-err>
        </testcase>
        <testcase classname="tests/unit/api/brevo-service.test.js" name="Brevo Service &gt; Initialization &gt; should fail immediately when BREVO_API_KEY is empty string" time="0.000065708">
            <system-err>
❌ FATAL: BREVO_API_KEY secret not configured

            </system-err>
        </testcase>
        <testcase classname="tests/unit/api/brevo-service.test.js" name="Brevo Service &gt; Initialization &gt; should initialize successfully when BREVO_API_KEY is provided" time="0.000068209">
        </testcase>
        <testcase classname="tests/unit/api/brevo-service.test.js" name="Brevo Service &gt; Initialization &gt; should log fatal error message when API key is missing" time="0.000096084">
        </testcase>
        <testcase classname="tests/unit/api/brevo-service.test.js" name="Brevo Service &gt; Initialization &gt; should have no test mode or fallback behavior" time="0.000047666">
            <system-err>
❌ FATAL: BREVO_API_KEY secret not configured

            </system-err>
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/api/gallery-fallback.test.js" timestamp="2025-09-12T18:06:46.988Z" hostname="Damilolas-MacBook-Air.local" tests="9" failures="0" errors="0" skipped="0" time="0.004414833">
        <testcase classname="tests/unit/api/gallery-fallback.test.js" name="Gallery Fallback Mechanism &gt; should have valid API endpoint as fallback when static JSON fails" time="0.000878917">
        </testcase>
        <testcase classname="tests/unit/api/gallery-fallback.test.js" name="Gallery Fallback Mechanism &gt; should handle API fallback with event-specific parameters" time="0.000562042">
        </testcase>
        <testcase classname="tests/unit/api/gallery-fallback.test.js" name="Gallery Fallback Mechanism &gt; should provide valid JSON structure for fallback consumption" time="0.000321833">
        </testcase>
        <testcase classname="tests/unit/api/gallery-fallback.test.js" name="Gallery Fallback Mechanism &gt; should validate gallery data structure for frontend compatibility" time="0.000456834">
        </testcase>
        <testcase classname="tests/unit/api/gallery-fallback.test.js" name="Gallery Fallback Mechanism &gt; should handle empty gallery data gracefully in fallback" time="0.000335542">
        </testcase>
        <testcase classname="tests/unit/api/gallery-fallback.test.js" name="Gallery Fallback Mechanism &gt; should handle network errors gracefully in fallback chain" time="0.000279959">
        </testcase>
        <testcase classname="tests/unit/api/gallery-fallback.test.js" name="Gallery Fallback Mechanism &gt; should support event-specific gallery data in fallback" time="0.000558">
        </testcase>
        <testcase classname="tests/unit/api/gallery-fallback.test.js" name="Gallery Fallback Mechanism &gt; should maintain consistent data format across static and API sources" time="0.000337209">
        </testcase>
        <testcase classname="tests/unit/api/gallery-fallback.test.js" name="Gallery Fallback Mechanism &gt; should validate mock data structure matches expected format" time="0.000508458">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/domain/email/EmailValidator.test.js" timestamp="2025-09-12T18:06:46.988Z" hostname="Damilolas-MacBook-Air.local" tests="58" failures="0" errors="0" skipped="0" time="0.00789225">
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateEmail() &gt; validates correct email addresses" time="0.000793167">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateEmail() &gt; rejects missing or empty emails" time="0.000201458">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateEmail() &gt; rejects non-string emails" time="0.0000825">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateEmail() &gt; rejects invalid email formats" time="0.000323291">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateEmail() &gt; rejects emails with consecutive dots" time="0.000086416">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateEmail() &gt; rejects emails starting or ending with dots" time="0.000118041">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateEmail() &gt; rejects emails with invalid @ symbol placement" time="0.000109292">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateEmail() &gt; rejects emails that are too long" time="0.000089125">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateEmail() &gt; sanitizes email by converting to lowercase and trimming" time="0.0000925">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateEmail() &gt; detects common email typos" time="0.000075542">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; checkCommonEmailTypos() &gt; detects Gmail typos" time="0.000216125">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; checkCommonEmailTypos() &gt; detects Yahoo typos" time="0.000077125">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; checkCommonEmailTypos() &gt; detects Hotmail typos" time="0.000072625">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; checkCommonEmailTypos() &gt; returns empty array for correct domains" time="0.000064708">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; checkCommonEmailTypos() &gt; handles emails without @ symbol" time="0.000064917">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateMarketingConsent() &gt; validates true consent" time="0.000095458">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateMarketingConsent() &gt; rejects false consent" time="0.000072083">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateMarketingConsent() &gt; rejects missing consent" time="0.000096208">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateMarketingConsent() &gt; rejects non-boolean consent" time="0.00008075">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateName() &gt; validates correct names" time="0.000519458">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateName() &gt; handles optional names when not required" time="0.000082209">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateName() &gt; rejects missing required names" time="0.00007425">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateName() &gt; rejects non-string names" time="0.000071084">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateName() &gt; rejects names that are too short" time="0.000075292">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateName() &gt; rejects names that are too long" time="0.0000765">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateName() &gt; rejects names with invalid characters" time="0.000206042">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateName() &gt; sanitizes names by trimming whitespace" time="0.000056417">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validatePhone() &gt; validates correct phone numbers" time="0.000459625">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validatePhone() &gt; handles optional phone when not required" time="0.000076625">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validatePhone() &gt; rejects missing required phone" time="0.000065167">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validatePhone() &gt; rejects non-string phone" time="0.00006575">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validatePhone() &gt; rejects phone that is too long" time="0.000068125">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validatePhone() &gt; rejects invalid phone formats" time="0.000169417">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validatePhone() &gt; sanitizes phone by trimming whitespace" time="0.000052333">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateSource() &gt; handles valid sources" time="0.000063917">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateSource() &gt; provides default for missing source" time="0.000068291">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateSource() &gt; truncates long sources" time="0.000072625">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateSource() &gt; handles non-string sources" time="0.000047708">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateAttributes() &gt; validates valid attributes" time="0.000185291">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateAttributes() &gt; handles missing attributes" time="0.000054625">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateAttributes() &gt; rejects non-object attributes" time="0.000090292">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateAttributes() &gt; rejects too many attributes" time="0.000110709">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateAttributes() &gt; sanitizes string attribute values" time="0.000092042">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateAttributes() &gt; rejects invalid attribute keys and values" time="0.00009125">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateListIds() &gt; validates valid list IDs" time="0.00013275">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateListIds() &gt; provides default for missing list IDs" time="0.000080917">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateListIds() &gt; rejects non-array list IDs" time="0.000077458">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateListIds() &gt; rejects too many list IDs" time="0.000076875">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateListIds() &gt; validates individual list ID values" time="0.000071583">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateListIds() &gt; filters out invalid IDs and keeps valid ones" time="0.000048417">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateSubscriptionRequest() &gt; validates complete valid subscription request" time="0.00020425">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateSubscriptionRequest() &gt; validates minimal valid subscription request" time="0.000085">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateSubscriptionRequest() &gt; rejects non-object subscription data" time="0.000072167">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateSubscriptionRequest() &gt; accumulates validation errors from all fields" time="0.000070833">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; validateSubscriptionRequest() &gt; sanitizes all valid fields" time="0.000093666">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; utility methods &gt; detects disposable email addresses" time="0.000126041">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; utility methods &gt; handles invalid emails in disposable check" time="0.000062125">
        </testcase>
        <testcase classname="tests/unit/domain/email/EmailValidator.test.js" name="EmailValidator Domain Service &gt; utility methods &gt; validates unsubscribe tokens" time="0.000176458">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/domain/email/RateLimiter.test.js" timestamp="2025-09-12T18:06:46.990Z" hostname="Damilolas-MacBook-Air.local" tests="47" failures="0" errors="0" skipped="0" time="0.916924084">
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; constructor &gt; creates instance with provided storage" time="0.000104625">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; constructor &gt; creates instance with default storage" time="0.000096542">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; checkRateLimit() &gt; allows first request within limit" time="0.000147792">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; checkRateLimit() &gt; tracks multiple requests within window" time="0.000063709">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; checkRateLimit() &gt; blocks requests when limit exceeded" time="0.000078208">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; checkRateLimit() &gt; resets window when expired" time="0.150830959">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; checkRateLimit() &gt; uses custom options" time="0.000118125">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; checkRateLimit() &gt; throws error for invalid identifier" time="0.00025875">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; checkRateLimit() &gt; handles concurrent requests for different identifiers" time="0.000128208">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; incrementCounter() &gt; increments counter and updates remaining" time="0.000084333">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; incrementCounter() &gt; does not increment when limit exceeded" time="0.000087958">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; incrementCounter() &gt; updates storage correctly" time="0.000079541">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; resetRateLimit() &gt; removes rate limit data for identifier" time="0.000081375">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; resetRateLimit() &gt; uses custom key prefix" time="0.000069208">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; getRateLimitStatus() &gt; returns current status without modifying counter" time="0.000071625">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; cleanExpiredEntries() &gt; removes expired entries" time="0.151633917">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; cleanExpiredEntries() &gt; keeps non-expired entries" time="0.000322417">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; cleanExpiredEntries() &gt; filters by key prefix" time="0.000243542">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; getActiveRateLimits() &gt; returns active rate limits" time="0.00067875">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; getActiveRateLimits() &gt; excludes expired entries" time="0.150953875">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; getActiveRateLimits() &gt; filters by key prefix" time="0.000361625">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; checkSlidingWindowRateLimit() &gt; allows requests within sliding window" time="0.000278083">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; checkSlidingWindowRateLimit() &gt; blocks when sliding window limit exceeded" time="0.000191833">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; checkSlidingWindowRateLimit() &gt; allows requests after oldest timestamp expires" time="0.151051375">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; checkSlidingWindowRateLimit() &gt; calculates retry after correctly" time="0.000434167">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; incrementSlidingWindow() &gt; adds timestamp when allowed" time="0.000272709">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; incrementSlidingWindow() &gt; does not add timestamp when blocked" time="0.00015775">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; checkTokenBucket() &gt; allows requests when tokens available" time="0.000389083">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; checkTokenBucket() &gt; blocks requests when insufficient tokens" time="0.000202416">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; checkTokenBucket() &gt; refills tokens over time" time="0.201517708">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; checkTokenBucket() &gt; does not exceed bucket capacity" time="0.10094">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; checkTokenBucket() &gt; deducts tokens when request allowed" time="0.000146208">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; static extractIdentifier() &gt; extracts IP from x-forwarded-for header" time="0.000152167">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; static extractIdentifier() &gt; extracts IP from connection.remoteAddress" time="0.000077458">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; static extractIdentifier() &gt; extracts IP from socket.remoteAddress" time="0.000068917">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; static extractIdentifier() &gt; uses fallback IP when no IP found" time="0.000068125">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; static extractIdentifier() &gt; includes user agent when option enabled" time="0.000165625">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; static extractIdentifier() &gt; prioritizes x-forwarded-for over connection" time="0.000076833">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; static extractIdentifier() &gt; handles x-forwarded-for disabled" time="0.000072125">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; static createMiddleware() &gt; creates middleware function" time="0.000161208">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; static createMiddleware() &gt; allows request within limits" time="0.000546042">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; static createMiddleware() &gt; blocks request when limit exceeded" time="0.000728709">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; static createMiddleware() &gt; calls custom onLimitReached handler" time="0.000581084">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; static createMiddleware() &gt; handles errors gracefully" time="0.00015475">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; static createMiddleware() &gt; supports different algorithms" time="0.000147834">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; getMemoryStats() &gt; returns memory usage statistics" time="0.00014">
        </testcase>
        <testcase classname="tests/unit/domain/email/RateLimiter.test.js" name="RateLimiter Domain Service &gt; getMemoryStats() &gt; returns zero stats for empty storage" time="0.00013125">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/domain/email/SubscriberBuilder.test.js" timestamp="2025-09-12T18:06:46.992Z" hostname="Damilolas-MacBook-Air.local" tests="61" failures="0" errors="0" skipped="0" time="0.006305542">
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; buildSubscriberData() &gt; builds complete subscriber data with all fields" time="0.000856583">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; buildSubscriberData() &gt; builds minimal subscriber data with defaults" time="0.000152">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; buildSubscriberData() &gt; sets pending status when verification required" time="0.00017525">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; buildSubscriberData() &gt; throws error for missing request data" time="0.00017275">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; buildSubscriberData() &gt; throws error for missing email" time="0.00007125">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; buildSubscriberData() &gt; builds comprehensive attributes" time="0.0002285">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeEmail() &gt; normalizes email to lowercase and trims" time="0.000064667">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeEmail() &gt; throws error for invalid email" time="0.000166125">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeName() &gt; normalizes names to proper case" time="0.000083209">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeName() &gt; trims whitespace from names" time="0.00005775">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeName() &gt; returns null for invalid names" time="0.000060375">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeName() &gt; truncates long names" time="0.000076291">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizePhone() &gt; normalizes phone numbers" time="0.000049833">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizePhone() &gt; returns null for invalid phones" time="0.000069">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizePhone() &gt; truncates long phone numbers" time="0.000057833">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; determineInitialStatus() &gt; returns pending when verification required" time="0.000035584">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; determineInitialStatus() &gt; returns default status when no verification" time="0.000046917">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; determineInitialStatus() &gt; returns active for invalid default status" time="0.000044375">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeListIds() &gt; normalizes valid list ID arrays" time="0.000064584">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeListIds() &gt; returns default for empty or invalid arrays" time="0.000067542">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeListIds() &gt; filters out invalid IDs" time="0.000047958">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeListIds() &gt; limits to maximum 10 lists" time="0.000070958">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeListIds() &gt; uses custom default list ID" time="0.000065791">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; buildAttributes() &gt; builds basic attributes" time="0.000071791">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; buildAttributes() &gt; includes optional system attributes" time="0.000066083">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; buildAttributes() &gt; includes user-provided attributes" time="0.000118292">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; buildAttributes() &gt; normalizes source attribute" time="0.000061833">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeSource() &gt; normalizes valid sources" time="0.00005175">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeSource() &gt; maps common source aliases" time="0.000068792">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeSource() &gt; returns default for invalid sources" time="0.000050625">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeSource() &gt; truncates long sources" time="0.000063083">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeUserAgent() &gt; detects common browsers" time="0.000062792">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeUserAgent() &gt; handles Chrome vs Safari detection correctly" time="0.000053583">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeUserAgent() &gt; returns truncated user agent for unknown browsers" time="0.000058709">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeUserAgent() &gt; returns default for invalid user agents" time="0.000060375">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeLanguage() &gt; normalizes valid language codes" time="0.000055584">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeLanguage() &gt; validates against known language codes" time="0.000067583">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeLanguage() &gt; returns default for invalid inputs" time="0.000059375">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeTimezone() &gt; validates and normalizes valid timezones" time="0.000061375">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeTimezone() &gt; returns UTC for invalid timezones" time="0.00007025">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeTimezone() &gt; truncates very long timezone strings" time="0.000059167">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeInterests() &gt; normalizes valid interest arrays" time="0.000042542">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeInterests() &gt; filters out invalid interests" time="0.00004025">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeInterests() &gt; limits to 10 interests" time="0.000074292">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeInterests() &gt; truncates long individual interests" time="0.000071583">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeInterests() &gt; returns empty string for non-array input" time="0.000045042">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeCustomAttributes() &gt; normalizes valid custom attributes" time="0.000073833">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeCustomAttributes() &gt; filters out invalid keys and values" time="0.000082333">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeCustomAttributes() &gt; truncates long string values" time="0.00006075">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; normalizeCustomAttributes() &gt; returns empty object for invalid input" time="0.00006675">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; buildBrevoContactData() &gt; builds complete Brevo contact data" time="0.000127375">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; buildBrevoContactData() &gt; handles minimal subscriber data" time="0.000063416">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; generateVerificationToken() &gt; generates 64-character verification token" time="0.000108875">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; generateVerificationToken() &gt; generates unique tokens" time="0.00010875">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; buildSubscriberResponse() &gt; builds public subscriber response" time="0.000139584">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; buildSubscriberResponse() &gt; builds private subscriber response" time="0.000104333">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; buildSubscriberResponse() &gt; returns null for missing subscriber data" time="0.000041459">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; validateBuiltSubscriber() &gt; validates complete valid subscriber" time="0.000088375">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; validateBuiltSubscriber() &gt; rejects invalid subscriber data" time="0.000269458">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; validateBuiltSubscriber() &gt; validates status values" time="0.000056584">
        </testcase>
        <testcase classname="tests/unit/domain/email/SubscriberBuilder.test.js" name="SubscriberBuilder Domain Service &gt; validateBuiltSubscriber() &gt; validates list IDs array" time="0.000054417">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/domain/payment/PaymentCalculator.test.js" timestamp="2025-09-12T18:06:46.995Z" hostname="Damilolas-MacBook-Air.local" tests="41" failures="0" errors="0" skipped="0" time="0.002262625">
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; calculateCartTotal() &gt; calculates total for single item cart" time="0.000189375">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; calculateCartTotal() &gt; calculates total for multiple item cart" time="0.000073792">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; calculateCartTotal() &gt; handles empty cart" time="0.000050375">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; calculateCartTotal() &gt; handles null/undefined cart items" time="0.000035542">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; calculateCartTotal() &gt; handles cart with decimal precision" time="0.000044292">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; calculateCartTotal() &gt; provides detailed breakdown for each item" time="0.00006675">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; calculateItemTotal() &gt; calculates item total correctly" time="0.000048042">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; calculateItemTotal() &gt; handles invalid item data" time="0.000033166">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; calculateItemTotal() &gt; rejects negative prices" time="0.000034709">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; calculateItemTotal() &gt; rejects zero or negative quantities" time="0.000036167">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; calculateItemTotal() &gt; handles zero price items" time="0.00003325">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; determineOrderType() &gt; identifies ticket-only order" time="0.000090625">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; determineOrderType() &gt; identifies donation-only order" time="0.000051208">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; determineOrderType() &gt; identifies merchandise-only order" time="0.000050709">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; determineOrderType() &gt; identifies mixed order type" time="0.00006375">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; determineOrderType() &gt; handles empty cart" time="0.000045583">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; calculateTax() &gt; applies Colorado tax rate (currently 0%)" time="0.00005075">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; calculateTax() &gt; applies default tax rate for unknown zones" time="0.000032417">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; calculateTax() &gt; handles zero subtotal" time="0.000029083">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; calculateProcessingFees() &gt; calculates card processing fees (currently 0%)" time="0.000047334">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; calculateProcessingFees() &gt; handles Stripe Link payment method" time="0.000031208">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; calculateProcessingFees() &gt; falls back to card rate for unknown payment methods" time="0.000029792">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; applyDiscount() &gt; applies percentage discount" time="0.000065292">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; applyDiscount() &gt; applies fixed dollar discount" time="0.000035292">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; applyDiscount() &gt; caps fixed discount at subtotal amount" time="0.000028584">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; applyDiscount() &gt; enforces minimum order requirements" time="0.000035667">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; applyDiscount() &gt; handles inactive discount" time="0.000031625">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; applyDiscount() &gt; handles missing discount" time="0.000033375">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; convertToStripeCents() &gt; converts dollars to cents correctly" time="0.000044875">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; convertToStripeCents() &gt; rounds fractional cents" time="0.0000265">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; convertToStripeCents() &gt; handles invalid inputs" time="0.000040417">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; convertToStripeCents() &gt; handles zero amount" time="0.000024833">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; convertFromStripeCents() &gt; converts cents to dollars correctly" time="0.0000405">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; convertFromStripeCents() &gt; handles invalid inputs" time="0.000038917">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; convertFromStripeCents() &gt; handles zero amount" time="0.000019625">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; validateCartForCheckout() &gt; validates valid cart successfully" time="0.000108875">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; validateCartForCheckout() &gt; rejects empty cart" time="0.000044542">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; validateCartForCheckout() &gt; rejects non-array cart items" time="0.000034083">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; validateCartForCheckout() &gt; validates individual item errors" time="0.000057584">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; validateCartForCheckout() &gt; rejects invalid item types" time="0.000037042">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentCalculator.test.js" name="PaymentCalculator Domain Service &gt; validateCartForCheckout() &gt; rejects cart with zero total" time="0.000034708">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/domain/payment/PaymentValidator.test.js" timestamp="2025-09-12T18:06:46.997Z" hostname="Damilolas-MacBook-Air.local" tests="48" failures="0" errors="0" skipped="0" time="0.002847167">
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateCartItems() &gt; validates valid cart items" time="0.000158791">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateCartItems() &gt; rejects missing cart items" time="0.000046791">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateCartItems() &gt; rejects non-array cart items" time="0.000038625">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateCartItems() &gt; rejects empty cart" time="0.000050958">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateCartItems() &gt; rejects cart with too many items" time="0.000084958">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateCartItems() &gt; accumulates errors from multiple invalid items" time="0.000051667">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateCartItem() &gt; validates valid cart item" time="0.000040834">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateCartItem() &gt; validates item with null input" time="0.000029834">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateCartItem() &gt; validates item name requirements" time="0.000087875">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateCartItem() &gt; validates price requirements" time="0.000105584">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateCartItem() &gt; validates quantity requirements" time="0.000082125">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateCartItem() &gt; validates type requirements" time="0.000046125">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateCartItem() &gt; validates ticket-specific fields" time="0.000059792">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateCartItem() &gt; validates donation-specific fields" time="0.00003225">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateCartItem() &gt; validates optional description" time="0.000047875">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateCustomerInfo() &gt; allows missing customer info" time="0.000055583">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateCustomerInfo() &gt; validates valid customer info" time="0.000204959">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateCustomerInfo() &gt; rejects non-object customer info" time="0.0000355">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateCustomerInfo() &gt; validates individual fields when provided" time="0.000032708">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateEmail() &gt; validates correct email formats" time="0.000079584">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateEmail() &gt; rejects missing email" time="0.000027916">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateEmail() &gt; rejects invalid email formats" time="0.000062625">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateEmail() &gt; rejects email that is too long" time="0.000033292">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateEmail() &gt; rejects non-string emails" time="0.000028166">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateName() &gt; validates correct names" time="0.000089333">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateName() &gt; rejects names that are too short" time="0.000031292">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateName() &gt; rejects names that are too long" time="0.000032375">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateName() &gt; rejects names with invalid characters" time="0.000068">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateName() &gt; uses custom field names in error messages" time="0.000028834">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateAmount() &gt; validates positive amounts" time="0.000058375">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateAmount() &gt; allows zero amount" time="0.0000235">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateAmount() &gt; rejects missing amount" time="0.000033333">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateAmount() &gt; rejects non-numeric amounts" time="0.000035959">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateAmount() &gt; rejects negative amounts" time="0.000034">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateAmount() &gt; rejects amounts that are too high" time="0.000033459">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateAmount() &gt; rejects infinite amounts" time="0.000034042">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateAmount() &gt; uses custom field names" time="0.000028791">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateQuantity() &gt; validates positive quantities" time="0.000045875">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateQuantity() &gt; rejects missing quantity" time="0.000034375">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateQuantity() &gt; rejects non-integer quantities" time="0.000033916">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateQuantity() &gt; rejects zero and negative quantities" time="0.000041083">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validateQuantity() &gt; rejects quantities that are too high" time="0.000033958">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validatePaymentRequest() &gt; validates complete valid payment request" time="0.000062541">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validatePaymentRequest() &gt; rejects non-object payment request" time="0.000034375">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validatePaymentRequest() &gt; validates cart items and customer info separately" time="0.000050167">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; validatePaymentRequest() &gt; allows missing customer info" time="0.000029792">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; utility methods &gt; validates dates correctly" time="0.000040583">
        </testcase>
        <testcase classname="tests/unit/domain/payment/PaymentValidator.test.js" name="PaymentValidator Domain Service &gt; utility methods &gt; sanitizes strings correctly" time="0.000040292">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/domain/payment/StripeOrderMapper.test.js" timestamp="2025-09-12T18:06:46.999Z" hostname="Damilolas-MacBook-Air.local" tests="40" failures="0" errors="0" skipped="0" time="0.002521833">
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; mapCartItemToStripeLineItem() &gt; maps basic cart item to Stripe line item" time="0.00020275">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; mapCartItemToStripeLineItem() &gt; maps ticket with custom description and metadata" time="0.000073708">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; mapCartItemToStripeLineItem() &gt; maps donation item correctly" time="0.000049458">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; mapCartItemToStripeLineItem() &gt; maps merchandise item correctly" time="0.0000415">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; mapCartItemToStripeLineItem() &gt; includes custom attributes in metadata" time="0.00006075">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; mapCartItemToStripeLineItem() &gt; throws error for invalid item" time="0.000155917">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; mapCartItemToStripeLineItem() &gt; handles decimal prices correctly" time="0.000034209">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; mapCartItemToStripeLineItem() &gt; handles zero price items" time="0.000047">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; mapCartItemsToStripeLineItems() &gt; maps multiple cart items" time="0.00008875">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; mapCartItemsToStripeLineItems() &gt; throws error for non-array input" time="0.000043">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; mapCartItemsToStripeLineItems() &gt; provides context for item mapping errors" time="0.000057958">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; buildItemMetadata() &gt; builds metadata for unknown type" time="0.000033083">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; buildItemMetadata() &gt; builds complete ticket metadata" time="0.000037459">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; buildItemMetadata() &gt; builds complete donation metadata" time="0.000035292">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; buildItemMetadata() &gt; builds complete merchandise metadata" time="0.000031209">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; mapCustomerInfoToStripeOptions() &gt; returns empty options for missing customer info" time="0.000039958">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; mapCustomerInfoToStripeOptions() &gt; maps email to customer_email" time="0.000028125">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; mapCustomerInfoToStripeOptions() &gt; maps name fields to metadata" time="0.00004675">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; mapCustomerInfoToStripeOptions() &gt; handles partial customer info" time="0.00003625">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; buildSessionMetadata() &gt; builds complete session metadata" time="0.000088083">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; buildSessionMetadata() &gt; handles minimal order data" time="0.000051542">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; buildCustomerName() &gt; builds full name from first and last" time="0.000025625">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; buildCustomerName() &gt; handles first name only" time="0.000024375">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; buildCustomerName() &gt; handles last name only" time="0.000024459">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; buildCustomerName() &gt; handles whitespace trimming" time="0.000028083">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; buildCustomerName() &gt; returns null for missing names" time="0.000028416">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; generateOrderId() &gt; generates order ID with default prefix" time="0.00006">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; generateOrderId() &gt; generates order ID with custom prefix" time="0.000035041">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; generateOrderId() &gt; generates unique order IDs" time="0.000035666">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; buildRedirectUrls() &gt; builds redirect URLs correctly" time="0.000052042">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; buildRedirectUrls() &gt; handles origin with trailing slash" time="0.000051584">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; buildRedirectUrls() &gt; throws error for missing origin" time="0.00004325">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; mapOrderToStripeSession() &gt; maps complete order to Stripe session config" time="0.000149708">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; mapOrderToStripeSession() &gt; throws error for missing cart items" time="0.00004525">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; mapOrderToStripeSession() &gt; throws error for missing origin" time="0.000045625">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; mapOrderToStripeSession() &gt; handles line item mapping errors" time="0.000056041">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; validateStripeLineItem() &gt; validates correct line item" time="0.000062041">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; validateStripeLineItem() &gt; validates line item structure requirements" time="0.000059541">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; validateStripeLineItem() &gt; validates price_data requirements" time="0.000060916">
        </testcase>
        <testcase classname="tests/unit/domain/payment/StripeOrderMapper.test.js" name="StripeOrderMapper Domain Service &gt; validateStripeLineItem() &gt; validates quantity requirements" time="0.000037459">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/domain/registration/validation.test.js" timestamp="2025-09-12T18:06:47.000Z" hostname="Damilolas-MacBook-Air.local" tests="5" failures="0" errors="0" skipped="0" time="0.000518541">
        <testcase classname="tests/unit/domain/registration/validation.test.js" name="Registration API &gt; validates JWT tokens" time="0.000275292">
        </testcase>
        <testcase classname="tests/unit/domain/registration/validation.test.js" name="Registration API &gt; validates input formats" time="0.000091291">
        </testcase>
        <testcase classname="tests/unit/domain/registration/validation.test.js" name="Registration API &gt; sanitizes XSS attempts" time="0.000035">
        </testcase>
        <testcase classname="tests/unit/domain/registration/validation.test.js" name="Registration API &gt; enforces batch limits" time="0.000032333">
        </testcase>
        <testcase classname="tests/unit/domain/registration/validation.test.js" name="Registration API &gt; validates security requirements" time="0.000024125">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/utils/IDGenerator.test.js" timestamp="2025-09-12T18:06:47.001Z" hostname="Damilolas-MacBook-Air.local" tests="65" failures="0" errors="0" skipped="0" time="0.006086458">
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; Format Constants &gt; defines correct ID formats" time="0.000115208">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; Format Constants &gt; defines character sets" time="0.000112834">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateRandomString &gt; generates string of correct length" time="0.000114417">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateRandomString &gt; uses correct character set" time="0.000076125">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateRandomString &gt; generates unique strings" time="0.000209167">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateRandomString &gt; throws error for invalid length" time="0.000110792">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateRandomString &gt; throws error for empty character set" time="0.000069666">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateRandomString &gt; handles different character sets correctly" time="0.00005225">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateTimestamp &gt; generates timestamp of correct length" time="0.000707542">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateTimestamp &gt; generates consistent timestamp for same time" time="0.000108583">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateTimestamp &gt; pads short timestamps" time="0.000106541">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateTimestamp &gt; truncates long timestamps" time="0.000083333">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateTimestamp &gt; uses correct base" time="0.000090834">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateSecureId &gt; generates ID with correct structure" time="0.000085875">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateSecureId &gt; works without prefix" time="0.000066542">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateSecureId &gt; generates unique IDs" time="0.00022425">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateSecureId &gt; uses hex characters for random part" time="0.000028333">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateTicketId &gt; generates ticket ID with default prefix" time="0.000100833">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateTicketId &gt; uses custom prefix" time="0.00004625">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateTicketId &gt; uses environment prefix" time="0.00004375">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateTicketId &gt; custom prefix overrides environment" time="0.000030292">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateTransactionId &gt; generates transaction ID with correct format" time="0.000056584">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateTransactionId &gt; uses custom prefix" time="0.00003825">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateSessionId &gt; generates session ID with correct format" time="0.000056667">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateEmailId &gt; generates email ID with correct format" time="0.000055084">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; validateIdFormat &gt; validates correct ticket ID format" time="0.000090667">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; validateIdFormat &gt; rejects invalid length" time="0.000040292">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; validateIdFormat &gt; rejects wrong prefix" time="0.000032875">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; validateIdFormat &gt; rejects invalid structure" time="0.000032125">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; validateIdFormat &gt; validates timestamp part" time="0.000033083">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; validateIdFormat &gt; validates random part" time="0.000033083">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; validateIdFormat &gt; rejects invalid characters in timestamp" time="0.000033">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; validateIdFormat &gt; rejects invalid characters in random part" time="0.000032792">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; validateIdFormat &gt; handles all ID formats" time="0.000079">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; validateIdFormat &gt; handles invalid input" time="0.000036959">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; extractTimestamp &gt; extracts timestamp from valid ID" time="0.000124125">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; extractTimestamp &gt; throws error for invalid ID format" time="0.000103333">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; extractTimestamp &gt; handles different ID types" time="0.000079958">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateBatchIds &gt; generates correct number of unique IDs" time="0.000097291">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateBatchIds &gt; throws error for invalid count" time="0.000071084">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateBatchIds &gt; generates different ID types" time="0.000141583">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateBatchIds &gt; uses custom prefix" time="0.000073625">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateBatchIds &gt; throws error for unknown type" time="0.000044292">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateBatchIds &gt; handles large batches efficiently" time="0.00024975">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; calculateCollisionProbability &gt; calculates collision probability for ticket IDs" time="0.000080959">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; calculateCollisionProbability &gt; shows higher probability for larger counts" time="0.000030416">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; calculateCollisionProbability &gt; calculates for different ID types" time="0.000030792">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; calculateCollisionProbability &gt; throws error for unknown format" time="0.000041458">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; calculateCollisionProbability &gt; provides birthday paradox approximation" time="0.000028458">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateUUID &gt; generates valid UUID v4 format" time="0.000071583">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateUUID &gt; generates unique UUIDs" time="0.000214667">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateUUID &gt; has correct version and variant bits" time="0.000057208">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateShortId &gt; generates ID of correct length" time="0.000060542">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateShortId &gt; uses Base58 characters" time="0.000037958">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateShortId &gt; excludes confusing characters" time="0.000050709">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateShortId &gt; generates unique short IDs" time="0.000159333">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateNumericId &gt; generates numeric ID of correct length" time="0.00005075">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateNumericId &gt; generates unique numeric IDs" time="0.000154958">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateNumericId &gt; handles different lengths" time="0.000048666">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateHashId &gt; generates consistent hash for same input" time="0.0000495">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateHashId &gt; generates different hashes for different inputs" time="0.000038">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateHashId &gt; generates hash of correct length" time="0.000048791">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateHashId &gt; uses uppercase hex characters" time="0.000024792">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateHashId &gt; throws error for invalid input" time="0.000084792">
        </testcase>
        <testcase classname="tests/unit/utils/IDGenerator.test.js" name="IDGenerator &gt; generateHashId &gt; handles long inputs consistently" time="0.00004825">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/utils/QRTokenService.test.js" timestamp="2025-09-12T18:06:47.004Z" hostname="Damilolas-MacBook-Air.local" tests="63" failures="0" errors="0" skipped="0" time="0.007049959">
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; Token Constants &gt; defines correct token expiry times" time="0.000093334">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; Token Constants &gt; defines token actions" time="0.000061666">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; generateSecureId &gt; generates ID with correct format" time="0.000269">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; generateSecureId &gt; generates unique IDs" time="0.0000685">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; generateSecureId &gt; works without prefix" time="0.00005225">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; generateSecureId &gt; handles different lengths" time="0.0000765">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; generateTicketId &gt; generates ticket ID with TKT prefix" time="0.000068041">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; generateTicketId &gt; accepts custom prefix" time="0.000049334">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; generateTicketId &gt; generates unique ticket IDs" time="0.000326542">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; hashToken &gt; generates consistent hashes" time="0.000208958">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; hashToken &gt; generates different hashes for different tokens" time="0.000045417">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; hashToken &gt; throws error for invalid input" time="0.000142709">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; hashToken &gt; generates hex string" time="0.000045166">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; generateRegistrationToken &gt; generates valid JWT token" time="0.001417">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; generateRegistrationToken &gt; includes required payload fields" time="0.000701292">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; generateRegistrationToken &gt; throws error for missing transactionId" time="0.00005775">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; generateRegistrationToken &gt; throws error for short secret" time="0.000060583">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; generateRegistrationToken &gt; throws error for invalid payload" time="0.00007475">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; verifyJWTToken &gt; verifies valid tokens" time="0.000192208">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; verifyJWTToken &gt; rejects invalid tokens" time="0.000062459">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; verifyJWTToken &gt; rejects tokens with wrong secret" time="0.000162708">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; verifyJWTToken &gt; detects expired tokens" time="0.000085875">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; verifyJWTToken &gt; validates token format" time="0.000120959">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; verifyJWTToken &gt; handles empty inputs" time="0.000040834">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; generateAccessToken &gt; generates access token with correct structure" time="0.000104166">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; generateAccessToken &gt; generates unique tokens" time="0.000056958">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; generateAccessToken &gt; sets correct expiration" time="0.000058792">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; generateActionToken &gt; generates action token for valid actions" time="0.000105583">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; generateActionToken &gt; throws error for invalid action" time="0.000048334">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; generateActionToken &gt; sets correct expiration" time="0.00004075">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; generateActionToken &gt; accepts all valid actions" time="0.000088333">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; generateValidationToken &gt; generates QR validation token" time="0.000094375">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; generateValidationToken &gt; throws error for missing parameters" time="0.000073875">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; generateValidationToken &gt; throws error for short secret" time="0.000042625">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; generateValidationToken &gt; generates valid base64 QR data" time="0.000054958">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; validateQRCode &gt; validates correct QR codes" time="0.000123667">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; validateQRCode &gt; validates with expected ticket ID" time="0.000044333">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; validateQRCode &gt; rejects wrong ticket ID" time="0.000049875">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; validateQRCode &gt; rejects invalid signatures" time="0.000045458">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; validateQRCode &gt; rejects malformed QR data" time="0.000042041">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; validateQRCode &gt; handles empty input" time="0.00003975">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; validateQRCode &gt; rejects expired QR codes" time="0.000047666">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; validateActionToken &gt; validates correct action tokens" time="0.000073083">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; validateActionToken &gt; rejects used tokens" time="0.000039042">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; validateActionToken &gt; rejects expired tokens" time="0.000038791">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; validateActionToken &gt; rejects invalid token hashes" time="0.000038458">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; validateActionToken &gt; validates required parameters" time="0.000031167">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; isTokenExpired &gt; detects expired tokens" time="0.000034584">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; isTokenExpired &gt; detects valid tokens" time="0.000025583">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; isTokenExpired &gt; handles no expiration" time="0.000028583">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; calculateTokenExpiry &gt; calculates access token expiry" time="0.000044666">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; calculateTokenExpiry &gt; calculates action token expiry" time="0.000032833">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; calculateTokenExpiry &gt; calculates QR token expiry" time="0.000027584">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; calculateTokenExpiry &gt; throws error for unknown type" time="0.000044459">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; generateUnsubscribeToken &gt; generates unsubscribe token" time="0.000065875">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; generateUnsubscribeToken &gt; generates different tokens for different emails" time="0.000047583">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; generateUnsubscribeToken &gt; throws error for missing parameters" time="0.0000705">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; validateUnsubscribeToken &gt; validates correct unsubscribe tokens" time="0.000081041">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; validateUnsubscribeToken &gt; rejects tokens with wrong email" time="0.000040792">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; validateUnsubscribeToken &gt; rejects tokens with wrong secret" time="0.000042583">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; validateUnsubscribeToken &gt; rejects expired tokens" time="0.000048833">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; validateUnsubscribeToken &gt; rejects malformed tokens" time="0.000033542">
        </testcase>
        <testcase classname="tests/unit/utils/QRTokenService.test.js" name="QRTokenService &gt; validateUnsubscribeToken &gt; handles missing parameters" time="0.000031458">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/utils/SecurityUtils.test.js" timestamp="2025-09-12T18:06:47.006Z" hostname="Damilolas-MacBook-Air.local" tests="62" failures="0" errors="0" skipped="0" time="0.003038584">
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; sanitizeHtml &gt; escapes basic HTML entities" time="0.000115125">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; sanitizeHtml &gt; handles all dangerous characters" time="0.000039458">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; sanitizeHtml &gt; returns empty string for null/undefined" time="0.000037792">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; sanitizeHtml &gt; handles non-string input" time="0.000044167">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; sanitizeHtml &gt; preserves safe content" time="0.000031708">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; sanitizeInput &gt; performs basic XSS sanitization" time="0.000040375">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; sanitizeInput &gt; trims whitespace" time="0.000023334">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; sanitizeInput &gt; handles empty input" time="0.000031583">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; sanitizeInput &gt; prevents basic XSS vectors" time="0.000109375">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; detectXSS &gt; detects script tags" time="0.000235083">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; detectXSS &gt; detects javascript: URLs" time="0.000056125">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; detectXSS &gt; detects event handlers" time="0.000047583">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; detectXSS &gt; detects multiple threats" time="0.000038291">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; detectXSS &gt; returns false for safe content" time="0.000037417">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; detectXSS &gt; handles empty input" time="0.000036625">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; detectXSS &gt; detects iframe injection" time="0.000023834">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; detectXSS &gt; detects form injection" time="0.000025708">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; detectSQLInjection &gt; detects SQL keywords" time="0.000165541">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; detectSQLInjection &gt; detects UNION attacks" time="0.000025125">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; detectSQLInjection &gt; detects comment injection" time="0.000024917">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; detectSQLInjection &gt; detects stored procedure calls" time="0.000024625">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; detectSQLInjection &gt; returns false for safe content" time="0.000037458">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; detectSQLInjection &gt; handles empty input" time="0.000020708">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; escapeHtml &gt; escapes HTML entities" time="0.000031125">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; escapeHtml &gt; handles quotes and ampersands" time="0.00002075">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; escapeHtml &gt; handles empty input" time="0.000036084">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; stripHtml &gt; removes HTML tags completely" time="0.000027083">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; stripHtml &gt; handles nested tags" time="0.000019875">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; stripHtml &gt; handles self-closing tags" time="0.000019083">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; stripHtml &gt; trims whitespace" time="0.000019">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; stripHtml &gt; handles empty input" time="0.0000225">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; sanitizeFilename &gt; replaces unsafe characters" time="0.000062459">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; sanitizeFilename &gt; removes leading/trailing underscores" time="0.000021458">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; sanitizeFilename &gt; collapses multiple underscores" time="0.000020792">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; sanitizeFilename &gt; limits length" time="0.000024875">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; sanitizeFilename &gt; preserves safe filenames" time="0.000020375">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; sanitizeFilename &gt; handles empty input" time="0.000025708">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; sanitizeUrl &gt; accepts valid HTTP URLs" time="0.000067125">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; sanitizeUrl &gt; accepts relative URLs" time="0.000054041">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; sanitizeUrl &gt; accepts mailto URLs" time="0.0000245">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; sanitizeUrl &gt; rejects javascript: URLs" time="0.000029708">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; sanitizeUrl &gt; rejects data: URLs" time="0.000028125">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; sanitizeUrl &gt; rejects invalid schemes" time="0.000028375">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; sanitizeUrl &gt; handles empty input" time="0.000026375">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; sanitizeApiInput &gt; sanitizes string input" time="0.000034916">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; sanitizeApiInput &gt; converts numbers to strings" time="0.000019458">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; sanitizeApiInput &gt; converts booleans to strings" time="0.000024083">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; sanitizeApiInput &gt; handles null and undefined" time="0.000074792">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; sanitizeApiInput &gt; limits length" time="0.000025125">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; sanitizeApiInput &gt; uses default length limit" time="0.000023584">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; validateSecurityHeaders &gt; identifies missing security headers" time="0.000094959">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; validateSecurityHeaders &gt; passes with all security headers" time="0.000048666">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; validateSecurityHeaders &gt; identifies partial security headers" time="0.000040042">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; validatePasswordStrength &gt; validates strong passwords" time="0.000080292">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; validatePasswordStrength &gt; rejects weak passwords" time="0.000064">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; validatePasswordStrength &gt; requires minimum length" time="0.000029791">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; validatePasswordStrength &gt; requires lowercase letters" time="0.000030666">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; validatePasswordStrength &gt; requires uppercase letters" time="0.000029959">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; validatePasswordStrength &gt; requires numbers" time="0.000034625">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; validatePasswordStrength &gt; requires special characters" time="0.000028833">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; validatePasswordStrength &gt; handles empty input" time="0.000041625">
        </testcase>
        <testcase classname="tests/unit/utils/SecurityUtils.test.js" name="SecurityUtils &gt; validatePasswordStrength &gt; calculates correct scores" time="0.00004825">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/utils/ValidationRules.test.js" timestamp="2025-09-12T18:06:47.009Z" hostname="Damilolas-MacBook-Air.local" tests="48" failures="0" errors="0" skipped="0" time="0.002104125">
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; Regex Patterns &gt; NAME_REGEX &gt; accepts valid names" time="0.0000825">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; Regex Patterns &gt; NAME_REGEX &gt; rejects invalid names" time="0.000070042">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; Regex Patterns &gt; NAME_REGEX &gt; handles edge cases" time="0.000040625">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; Regex Patterns &gt; EMAIL_REGEX &gt; accepts valid emails" time="0.000041083">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; Regex Patterns &gt; EMAIL_REGEX &gt; rejects invalid emails" time="0.000052625">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; Regex Patterns &gt; PHONE_REGEX &gt; accepts valid phone numbers" time="0.000091917">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; Regex Patterns &gt; PHONE_REGEX &gt; rejects invalid phone numbers" time="0.000041333">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateName &gt; validates correct names" time="0.000057208">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateName &gt; trims whitespace" time="0.000028333">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateName &gt; rejects empty names" time="0.000033333">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateName &gt; rejects null/undefined" time="0.00002575">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateName &gt; rejects non-string types" time="0.000025208">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateName &gt; respects custom field names" time="0.000021541">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateName &gt; enforces minimum length" time="0.000025875">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateName &gt; enforces maximum length" time="0.000026584">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateName &gt; rejects invalid characters" time="0.000024875">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateEmail &gt; validates correct emails" time="0.000041125">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateEmail &gt; converts to lowercase" time="0.000023958">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateEmail &gt; trims whitespace" time="0.000025042">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateEmail &gt; rejects empty emails" time="0.000023084">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateEmail &gt; rejects invalid format" time="0.000023834">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateEmail &gt; enforces maximum length" time="0.000028166">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validatePhone &gt; validates correct phone numbers" time="0.000060958">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validatePhone &gt; cleans formatting" time="0.0000255">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validatePhone &gt; removes spaces and dashes" time="0.000024708">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validatePhone &gt; rejects empty phone" time="0.000023291">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validatePhone &gt; rejects invalid format" time="0.000023416">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validatePhone &gt; enforces maximum length" time="0.000026125">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateBatchSize &gt; validates correct batch size" time="0.000041708">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateBatchSize &gt; rejects non-arrays" time="0.000035625">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateBatchSize &gt; rejects empty arrays" time="0.000024333">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateBatchSize &gt; enforces maximum batch size" time="0.000030333">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateBatchSize &gt; accepts maximum allowed size" time="0.000025041">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateTicketId &gt; validates correct ticket ID format" time="0.000048334">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateTicketId &gt; trims whitespace" time="0.000043375">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateTicketId &gt; rejects empty ticket ID" time="0.00002325">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateTicketId &gt; rejects invalid format" time="0.000023333">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateTicketId &gt; rejects lowercase prefix" time="0.000023125">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateRegistration &gt; validates complete registration" time="0.00006175">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateRegistration &gt; rejects non-object input" time="0.0000475">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateRegistration &gt; collects multiple errors" time="0.000048375">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateRegistration &gt; sanitizes valid inputs" time="0.00003825">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateSubscription &gt; validates email-only subscription" time="0.000055625">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateSubscription &gt; validates complete subscription" time="0.000051334">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateSubscription &gt; handles optional fields gracefully" time="0.000038417">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateSubscription &gt; truncates long source field" time="0.0000275">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; validateSubscription &gt; rejects non-string source" time="0.000030084">
        </testcase>
        <testcase classname="tests/unit/utils/ValidationRules.test.js" name="ValidationRules &gt; Input Limits &gt; defines correct constants" time="0.000049417">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/frontend/cart/CartCalculator.test.js" timestamp="2025-09-12T18:06:47.011Z" hostname="Damilolas-MacBook-Air.local" tests="46" failures="0" errors="0" skipped="0" time="0.002255417">
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; calculateCartTotals &gt; should calculate totals for empty cart" time="0.000106417">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; calculateCartTotals &gt; should calculate totals with only tickets" time="0.000046458">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; calculateCartTotals &gt; should calculate totals with only donations" time="0.000038792">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; calculateCartTotals &gt; should calculate totals with tickets and donations" time="0.000028125">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; calculateCartTotals &gt; should handle invalid ticket data gracefully" time="0.00003075">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; calculateCartTotals &gt; should handle invalid donation data gracefully" time="0.0000285">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; calculateCartTotals &gt; should round totals to 2 decimal places" time="0.000043125">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; calculateCartTotals &gt; should handle missing cart state properties" time="0.000058333">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; calculateLineTotal &gt; should calculate line total correctly" time="0.000041041">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; calculateLineTotal &gt; should handle invalid inputs" time="0.000044083">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; calculateLineTotal &gt; should round to 2 decimal places" time="0.000025042">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; calculateNewQuantity &gt; should increase quantity correctly" time="0.000049042">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; calculateNewQuantity &gt; should decrease quantity correctly" time="0.00003775">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; calculateNewQuantity &gt; should enforce maximum quantity limit" time="0.0000215">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; calculateNewQuantity &gt; should enforce minimum quantity limit" time="0.000031083">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; calculateNewQuantity &gt; should handle invalid actions" time="0.000030417">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; calculateNewQuantity &gt; should handle invalid current quantity" time="0.000033">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; isCartEmpty &gt; should return true for empty cart" time="0.000041">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; isCartEmpty &gt; should return false when cart has tickets" time="0.000029834">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; isCartEmpty &gt; should return false when cart has donations" time="0.00002925">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; isCartEmpty &gt; should handle zero quantities correctly" time="0.000030875">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; isCartEmpty &gt; should handle invalid ticket data" time="0.0000285">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; isCartEmpty &gt; should handle invalid donation data" time="0.000025542">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; validateTicketData &gt; should validate correct ticket data" time="0.000085916">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; validateTicketData &gt; should require ticketType" time="0.000045708">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; validateTicketData &gt; should require valid price" time="0.000034958">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; validateTicketData &gt; should require name" time="0.000033083">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; validateTicketData &gt; should validate quantity if provided" time="0.000040333">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; validateTicketData &gt; should handle null/undefined input" time="0.000032">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; validateDonationData &gt; should validate correct donation amount" time="0.000053875">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; validateDonationData &gt; should reject non-number amounts" time="0.000048083">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; validateDonationData &gt; should reject zero and negative amounts" time="0.000031583">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; validateDonationData &gt; should reject excessive amounts" time="0.000039875">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; validateDonationData &gt; should accept maximum valid amount" time="0.00002225">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; generateDonationId &gt; should generate unique IDs" time="0.000105333">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; generateDonationId &gt; should include timestamp" time="0.000049375">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; createDonation &gt; should create valid donation object" time="0.000107959">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; createDonation &gt; should round amount to 2 decimal places" time="0.000032417">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; createDonation &gt; should throw error for invalid amounts" time="0.000101791">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; applyQuantityConstraints &gt; should enforce minimum constraint" time="0.000034542">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; applyQuantityConstraints &gt; should enforce maximum constraint" time="0.000026333">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; applyQuantityConstraints &gt; should allow valid quantities" time="0.000029791">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; applyQuantityConstraints &gt; should handle invalid inputs" time="0.000033208">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; calculateItemCount &gt; should calculate total item count" time="0.000038041">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; calculateItemCount &gt; should return 0 for empty cart" time="0.000021209">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartCalculator.test.js" name="CartCalculator &gt; calculateItemCount &gt; should handle partial cart data" time="0.000027917">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/frontend/cart/CartPersistence.test.js" timestamp="2025-09-12T18:06:47.013Z" hostname="Damilolas-MacBook-Air.local" tests="56" failures="0" errors="0" skipped="0" time="0.004149667">
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; DEFAULT_CART_STATE &gt; should have required structure" time="0.000182916">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; generateSessionId &gt; should generate unique session IDs" time="0.000077">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; generateSessionId &gt; should include timestamp in session ID" time="0.000041958">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; generateSessionId &gt; should include random component" time="0.00006775">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; createInitialCartState &gt; should create valid initial state" time="0.000073083">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; createInitialCartState &gt; should create unique session IDs" time="0.000051125">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; serializeCartState &gt; should serialize valid cart state" time="0.000197875">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; serializeCartState &gt; should update timestamp during serialization" time="0.000055125">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; serializeCartState &gt; should handle null/undefined input" time="0.000078833">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; serializeCartState &gt; should handle serialization errors gracefully" time="0.000073959">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; serializeCartState &gt; should serialize complex cart state" time="0.000093583">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; deserializeCartState &gt; should deserialize valid cart state" time="0.000087125">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; deserializeCartState &gt; should handle invalid JSON gracefully" time="0.000121291">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; deserializeCartState &gt; should handle null/undefined input" time="0.000070791">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; deserializeCartState &gt; should migrate old donation format" time="0.000096167">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; deserializeCartState &gt; should handle old donation format with zero amount" time="0.000047791">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; deserializeCartState &gt; should return initial state for invalid structure" time="0.0000805">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; isValidCartState &gt; should validate correct cart state" time="0.000035208">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; isValidCartState &gt; should reject null/undefined" time="0.000037708">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; isValidCartState &gt; should reject non-objects" time="0.000049583">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; isValidCartState &gt; should reject missing metadata" time="0.000035">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; isValidCartState &gt; should reject missing tickets" time="0.000035708">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; isValidCartState &gt; should reject missing donations" time="0.000035458">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; isValidCartState &gt; should reject invalid metadata timestamps" time="0.000043041">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; isValidCartState &gt; should reject non-array donations" time="0.000034875">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; migrateDonationFormat &gt; should migrate old single donation format" time="0.00007725">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; migrateDonationFormat &gt; should handle old format with no amount" time="0.000044291">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; migrateDonationFormat &gt; should preserve already migrated donations" time="0.000041667">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; migrateDonationFormat &gt; should handle invalid input" time="0.00004625">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; migrateDonationFormat &gt; should fix non-array donations" time="0.000046959">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; cleanCartState &gt; should remove invalid tickets" time="0.00012975">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; cleanCartState &gt; should remove invalid donations" time="0.000082959">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; cleanCartState &gt; should update timestamp" time="0.000043958">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; cleanCartState &gt; should handle invalid cart state" time="0.00005">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; isValidTicket &gt; should validate correct ticket" time="0.0000465">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; isValidTicket &gt; should reject tickets with missing properties" time="0.000072166">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; isValidTicket &gt; should reject tickets with invalid property types" time="0.000063584">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; isValidTicket &gt; should reject tickets with invalid values" time="0.000058833">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; isValidTicket &gt; should reject null/undefined" time="0.000043">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; isValidDonation &gt; should validate correct donation" time="0.000041834">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; isValidDonation &gt; should reject donations with missing properties" time="0.000052125">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; isValidDonation &gt; should reject donations with invalid property types" time="0.000053792">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; isValidDonation &gt; should reject donations with invalid values" time="0.000051417">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; isValidDonation &gt; should reject null/undefined" time="0.000044375">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; calculateCartStateSize &gt; should calculate size for cart state" time="0.000062541">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; calculateCartStateSize &gt; should handle serialization errors" time="0.000060833">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; calculateCartStateSize &gt; should calculate different sizes for different states" time="0.000052875">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; isWithinStorageLimits &gt; should return true for small cart states" time="0.000050292">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; isWithinStorageLimits &gt; should use custom size limit" time="0.0000545">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; isWithinStorageLimits &gt; should handle edge case at exact limit" time="0.000046833">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; createCartStateDiff &gt; should detect added tickets" time="0.000138875">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; createCartStateDiff &gt; should detect removed tickets" time="0.000094625">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; createCartStateDiff &gt; should detect updated tickets" time="0.000078167">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; createCartStateDiff &gt; should detect donation changes" time="0.000073">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; createCartStateDiff &gt; should handle no changes" time="0.000127333">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartPersistence.test.js" name="CartPersistence &gt; createCartStateDiff &gt; should handle null/undefined states" time="0.000062834">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/frontend/cart/CartVisibility.test.js" timestamp="2025-09-12T18:06:47.015Z" hostname="Damilolas-MacBook-Air.local" tests="49" failures="0" errors="0" skipped="0" time="0.002456709">
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; PAGE_VISIBILITY_CONFIG &gt; should have required configuration properties" time="0.00009225">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; PAGE_VISIBILITY_CONFIG &gt; should include expected shopping pages in alwaysShow" time="0.000062334">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; PAGE_VISIBILITY_CONFIG &gt; should include expected error pages in neverShow" time="0.000044542">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; determineCartVisibility &gt; always show pages &gt; should always show cart on tickets page" time="0.000099375">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; determineCartVisibility &gt; always show pages &gt; should always show cart on donations page" time="0.000038458">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; determineCartVisibility &gt; always show pages &gt; should handle trailing slashes" time="0.000031417">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; determineCartVisibility &gt; always show pages &gt; should handle paths containing shopping pages" time="0.000030291">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; determineCartVisibility &gt; never show pages &gt; should never show cart on 404 page" time="0.000030209">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; determineCartVisibility &gt; never show pages &gt; should never show cart on index.html" time="0.000029292">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; determineCartVisibility &gt; never show pages &gt; should handle paths containing never-show pages" time="0.000031666">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; determineCartVisibility &gt; conditional show pages &gt; should show cart on /about only when hasItems is true" time="0.000029333">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; determineCartVisibility &gt; conditional show pages &gt; should show cart on /artists only when hasItems is true" time="0.000023333">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; determineCartVisibility &gt; conditional show pages &gt; should show cart on /schedule only when hasItems is true" time="0.000021959">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; determineCartVisibility &gt; conditional show pages &gt; should show cart on /gallery only when hasItems is true" time="0.000022916">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; determineCartVisibility &gt; conditional show pages &gt; should show cart on /home only when hasItems is true" time="0.000032959">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; determineCartVisibility &gt; conditional show pages &gt; should show cart on / only when hasItems is true" time="0.000030208">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; determineCartVisibility &gt; conditional show pages &gt; should handle root path specially" time="0.000031084">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; determineCartVisibility &gt; edge cases &gt; should handle invalid paths" time="0.0000425">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; determineCartVisibility &gt; edge cases &gt; should handle boolean coercion for hasItems" time="0.000045792">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; determineCartVisibility &gt; edge cases &gt; should handle unusual path formats" time="0.000038916">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; getPageVisibilityRule &gt; should return &quot;never&quot; for invalid paths" time="0.000049542">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; getPageVisibilityRule &gt; should return &quot;never&quot; for never-show pages" time="0.000047167">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; getPageVisibilityRule &gt; should return &quot;always&quot; for always-show pages" time="0.000035667">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; getPageVisibilityRule &gt; should return &quot;withItems&quot; for conditional pages" time="0.000067125">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; getPageVisibilityRule &gt; should handle trailing slashes" time="0.00003175">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; getPageVisibilityRule &gt; should return &quot;withItems&quot; for unknown pages" time="0.000028833">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; isShoppingPage &gt; should identify shopping pages correctly" time="0.000045208">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; isShoppingPage &gt; should not identify non-shopping pages as shopping pages" time="0.000030542">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; isShoppingPage &gt; should handle invalid inputs" time="0.000033375">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; isNonCartPage &gt; should identify non-cart pages correctly" time="0.000038083">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; isNonCartPage &gt; should not identify regular pages as non-cart pages" time="0.00003125">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; isNonCartPage &gt; should handle invalid inputs as non-cart pages" time="0.000069625">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; getCartVisibilityState &gt; should return complete visibility state" time="0.000055708">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; getCartVisibilityState &gt; should handle root path normalization" time="0.000034875">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; getCartVisibilityState &gt; should handle trailing slash normalization" time="0.000054084">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; getCartVisibilityState &gt; should handle boolean coercion for hasItems" time="0.000032458">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; isValidPagePath &gt; should validate absolute paths" time="0.000047667">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; isValidPagePath &gt; should validate relative paths" time="0.000029458">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; isValidPagePath &gt; should reject URL schemes" time="0.000041208">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; isValidPagePath &gt; should reject invalid inputs" time="0.000038958">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; isValidPagePath &gt; should handle edge cases" time="0.000034875">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; getPagesByRule &gt; should return pages for &quot;always&quot; rule" time="0.000071042">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; getPagesByRule &gt; should return pages for &quot;never&quot; rule" time="0.000055417">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; getPagesByRule &gt; should return pages for &quot;withItems&quot; rule" time="0.000043292">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; getPagesByRule &gt; should return empty array for invalid rules" time="0.000034333">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; getPagesByRule &gt; should return copies, not references" time="0.000033417">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; integration scenarios &gt; should handle complete shopping flow visibility" time="0.000049667">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; integration scenarios &gt; should maintain consistency across similar paths" time="0.000068667">
        </testcase>
        <testcase classname="tests/unit/frontend/cart/CartVisibility.test.js" name="CartVisibility &gt; integration scenarios &gt; should handle complex routing scenarios" time="0.000069459">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/security/csp-report-security.test.js" timestamp="2025-09-12T18:06:47.017Z" hostname="Damilolas-MacBook-Air.local" tests="15" failures="0" errors="0" skipped="0" time="0.452911584">
        <testcase classname="tests/unit/security/csp-report-security.test.js" name="CSP Report Security Validation &gt; Content-Type Validation &gt; should accept application/csp-report content-type" time="0.051158375">
            <system-err>
High-severity CSP violation: {
  level: [32m&apos;high&apos;[39m,
  message: [32m&quot;CSP Violation: script-src &apos;self&apos;&quot;[39m,
  details: {
    documentUri: [32m&apos;https://example.com&apos;[39m,
    referrer: [32m&apos;&apos;[39m,
    blockedUri: [32m&apos;https://malicious.com/script.js&apos;[39m,
    violatedDirective: [32m&quot;script-src &apos;self&apos;&quot;[39m,
    effectiveDirective: [32m&apos;&apos;[39m,
    originalPolicy: [32m&apos;&apos;[39m,
    disposition: [32m&apos;enforce&apos;[39m,
    statusCode: [33m200[39m,
    scriptSample: [32m&apos;&apos;[39m,
    timestamp: [32m&apos;2025-09-12T18:06:45.954Z&apos;[39m,
    severity: [32m&apos;high&apos;[39m,
    userAgent: [32m&apos;Unknown&apos;[39m,
    ip: [32m&apos;127.0.0.1&apos;[39m,
    requestId: [32m&apos;csp_1757700405954&apos;[39m
  },
  tags: { security: [33mtrue[39m, csp: [33mtrue[39m, severity: [32m&apos;high&apos;[39m }
}
HIGH SEVERITY CSP VIOLATION - Immediate attention required: {
  violationId: [32m&apos;csp_1757700405954_h7djxiqfu&apos;[39m,
  directive: [32m&quot;script-src &apos;self&apos;&quot;[39m,
  blockedUri: [32m&apos;https://malicious.com/script.js&apos;[39m,
  documentUri: [32m&apos;https://example.com&apos;[39m,
  ip: [32m&apos;127.0.0.1&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="tests/unit/security/csp-report-security.test.js" name="CSP Report Security Validation &gt; Content-Type Validation &gt; should accept application/json content-type" time="0.000198208">
            <system-err>
High-severity CSP violation: {
  level: [32m&apos;high&apos;[39m,
  message: [32m&quot;CSP Violation: script-src &apos;self&apos;&quot;[39m,
  details: {
    documentUri: [32m&apos;https://example.com&apos;[39m,
    referrer: [32m&apos;&apos;[39m,
    blockedUri: [32m&apos;https://malicious.com/script.js&apos;[39m,
    violatedDirective: [32m&quot;script-src &apos;self&apos;&quot;[39m,
    effectiveDirective: [32m&apos;&apos;[39m,
    originalPolicy: [32m&apos;&apos;[39m,
    disposition: [32m&apos;enforce&apos;[39m,
    statusCode: [33m200[39m,
    scriptSample: [32m&apos;&apos;[39m,
    timestamp: [32m&apos;2025-09-12T18:06:45.954Z&apos;[39m,
    severity: [32m&apos;high&apos;[39m,
    userAgent: [32m&apos;Unknown&apos;[39m,
    ip: [32m&apos;127.0.0.1&apos;[39m,
    requestId: [32m&apos;csp_1757700405954&apos;[39m
  },
  tags: { security: [33mtrue[39m, csp: [33mtrue[39m, severity: [32m&apos;high&apos;[39m }
}
HIGH SEVERITY CSP VIOLATION - Immediate attention required: {
  violationId: [32m&apos;csp_1757700405954_411qyrnsy&apos;[39m,
  directive: [32m&quot;script-src &apos;self&apos;&quot;[39m,
  blockedUri: [32m&apos;https://malicious.com/script.js&apos;[39m,
  documentUri: [32m&apos;https://example.com&apos;[39m,
  ip: [32m&apos;127.0.0.1&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="tests/unit/security/csp-report-security.test.js" name="CSP Report Security Validation &gt; Content-Type Validation &gt; should reject invalid content-type with 415" time="0.000130125">
        </testcase>
        <testcase classname="tests/unit/security/csp-report-security.test.js" name="CSP Report Security Validation &gt; Content-Type Validation &gt; should reject missing content-type with 415" time="0.000096916">
        </testcase>
        <testcase classname="tests/unit/security/csp-report-security.test.js" name="CSP Report Security Validation &gt; Content-Type Validation &gt; should handle content-type with charset parameter" time="0.000137667">
            <system-err>
High-severity CSP violation: {
  level: [32m&apos;high&apos;[39m,
  message: [32m&quot;CSP Violation: script-src &apos;self&apos;&quot;[39m,
  details: {
    documentUri: [32m&apos;https://example.com&apos;[39m,
    referrer: [32m&apos;&apos;[39m,
    blockedUri: [32m&apos;https://malicious.com/script.js&apos;[39m,
    violatedDirective: [32m&quot;script-src &apos;self&apos;&quot;[39m,
    effectiveDirective: [32m&apos;&apos;[39m,
    originalPolicy: [32m&apos;&apos;[39m,
    disposition: [32m&apos;enforce&apos;[39m,
    statusCode: [33m200[39m,
    scriptSample: [32m&apos;&apos;[39m,
    timestamp: [32m&apos;2025-09-12T18:06:45.954Z&apos;[39m,
    severity: [32m&apos;high&apos;[39m,
    userAgent: [32m&apos;Unknown&apos;[39m,
    ip: [32m&apos;127.0.0.1&apos;[39m,
    requestId: [32m&apos;csp_1757700405954&apos;[39m
  },
  tags: { security: [33mtrue[39m, csp: [33mtrue[39m, severity: [32m&apos;high&apos;[39m }
}
HIGH SEVERITY CSP VIOLATION - Immediate attention required: {
  violationId: [32m&apos;csp_1757700405954_4wkmjz6mu&apos;[39m,
  directive: [32m&quot;script-src &apos;self&apos;&quot;[39m,
  blockedUri: [32m&apos;https://malicious.com/script.js&apos;[39m,
  documentUri: [32m&apos;https://example.com&apos;[39m,
  ip: [32m&apos;127.0.0.1&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="tests/unit/security/csp-report-security.test.js" name="CSP Report Security Validation &gt; Size Limit Validation &gt; should accept requests under 10KB limit" time="0.000179792">
            <system-err>
High-severity CSP violation: {
  level: [32m&apos;high&apos;[39m,
  message: [32m&quot;CSP Violation: script-src &apos;self&apos;&quot;[39m,
  details: {
    documentUri: [32m&apos;https://example.com&apos;[39m,
    referrer: [32m&apos;&apos;[39m,
    blockedUri: [32m&apos;https://malicious.com/script.js&apos;[39m,
    violatedDirective: [32m&quot;script-src &apos;self&apos;&quot;[39m,
    effectiveDirective: [32m&apos;&apos;[39m,
    originalPolicy: [32m&apos;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&apos;[39m,
    disposition: [32m&apos;enforce&apos;[39m,
    statusCode: [33m200[39m,
    scriptSample: [32m&apos;&apos;[39m,
    timestamp: [32m&apos;2025-09-12T18:06:45.955Z&apos;[39m,
    severity: [32m&apos;high&apos;[39m,
    userAgent: [32m&apos;Unknown&apos;[39m,
    ip: [32m&apos;127.0.0.1&apos;[39m,
    requestId: [32m&apos;csp_1757700405955&apos;[39m
  },
  tags: { security: [33mtrue[39m, csp: [33mtrue[39m, severity: [32m&apos;high&apos;[39m }
}
HIGH SEVERITY CSP VIOLATION - Immediate attention required: {
  violationId: [32m&apos;csp_1757700405955_yx6trk593&apos;[39m,
  directive: [32m&quot;script-src &apos;self&apos;&quot;[39m,
  blockedUri: [32m&apos;https://malicious.com/script.js&apos;[39m,
  documentUri: [32m&apos;https://example.com&apos;[39m,
  ip: [32m&apos;127.0.0.1&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="tests/unit/security/csp-report-security.test.js" name="CSP Report Security Validation &gt; Size Limit Validation &gt; should reject requests over 10KB limit with 413" time="0.101018667">
        </testcase>
        <testcase classname="tests/unit/security/csp-report-security.test.js" name="CSP Report Security Validation &gt; Size Limit Validation &gt; should destroy request immediately when size limit exceeded" time="0.112018875">
        </testcase>
        <testcase classname="tests/unit/security/csp-report-security.test.js" name="CSP Report Security Validation &gt; Size Limit Validation &gt; should handle incremental data chunks correctly" time="0.000998958">
            <system-err>
High-severity CSP violation: {
  level: [32m&apos;high&apos;[39m,
  message: [32m&quot;CSP Violation: script-src &apos;self&apos;&quot;[39m,
  details: {
    documentUri: [32m&apos;https://example.com&apos;[39m,
    referrer: [32m&apos;&apos;[39m,
    blockedUri: [32m&apos;https://malicious.com/script.js&apos;[39m,
    violatedDirective: [32m&quot;script-src &apos;self&apos;&quot;[39m,
    effectiveDirective: [32m&apos;&apos;[39m,
    originalPolicy: [32m&apos;&apos;[39m,
    disposition: [32m&apos;enforce&apos;[39m,
    statusCode: [33m200[39m,
    scriptSample: [32m&apos;&apos;[39m,
    timestamp: [32m&apos;2025-09-12T18:06:46.168Z&apos;[39m,
    severity: [32m&apos;high&apos;[39m,
    userAgent: [32m&apos;Unknown&apos;[39m,
    ip: [32m&apos;127.0.0.1&apos;[39m,
    requestId: [32m&apos;csp_1757700406168&apos;[39m
  },
  tags: { security: [33mtrue[39m, csp: [33mtrue[39m, severity: [32m&apos;high&apos;[39m }
}
HIGH SEVERITY CSP VIOLATION - Immediate attention required: {
  violationId: [32m&apos;csp_1757700406168_69l59gstf&apos;[39m,
  directive: [32m&quot;script-src &apos;self&apos;&quot;[39m,
  blockedUri: [32m&apos;https://malicious.com/script.js&apos;[39m,
  documentUri: [32m&apos;https://example.com&apos;[39m,
  ip: [32m&apos;127.0.0.1&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="tests/unit/security/csp-report-security.test.js" name="CSP Report Security Validation &gt; Request Stream Handling &gt; should handle request close event properly" time="0.011082208">
        </testcase>
        <testcase classname="tests/unit/security/csp-report-security.test.js" name="CSP Report Security Validation &gt; Request Stream Handling &gt; should handle request error gracefully" time="0.005442334">
            <system-err>
Error processing CSP report: Error: Connection reset
    at [90m/Users/damilola/Documents/Projects/alocubano.boulderfest/[39mtests/unit/security/csp-report-security.test.js:340:34
    at [90mfile:///Users/damilola/Documents/Projects/alocubano.boulderfest/[39mnode_modules/[4m@vitest[24m/runner/dist/index.js:533:5
    at runTest [90m(file:///Users/damilola/Documents/Projects/alocubano.boulderfest/[39mnode_modules/[4m@vitest[24m/runner/dist/index.js:1056:11[90m)[39m
    at runSuite [90m(file:///Users/damilola/Documents/Projects/alocubano.boulderfest/[39mnode_modules/[4m@vitest[24m/runner/dist/index.js:1205:15[90m)[39m
    at runSuite [90m(file:///Users/damilola/Documents/Projects/alocubano.boulderfest/[39mnode_modules/[4m@vitest[24m/runner/dist/index.js:1205:15[90m)[39m
    at runSuite [90m(file:///Users/damilola/Documents/Projects/alocubano.boulderfest/[39mnode_modules/[4m@vitest[24m/runner/dist/index.js:1205:15[90m)[39m
    at runFiles [90m(file:///Users/damilola/Documents/Projects/alocubano.boulderfest/[39mnode_modules/[4m@vitest[24m/runner/dist/index.js:1262:5[90m)[39m
    at startTests [90m(file:///Users/damilola/Documents/Projects/alocubano.boulderfest/[39mnode_modules/[4m@vitest[24m/runner/dist/index.js:1271:3[90m)[39m
    at [90mfile:///Users/damilola/Documents/Projects/alocubano.boulderfest/[39mnode_modules/[4mvitest[24m/dist/chunks/runBaseTests.3qpJUEJM.js:126:11
    at withEnv [90m(file:///Users/damilola/Documents/Projects/alocubano.boulderfest/[39mnode_modules/[4mvitest[24m/dist/chunks/runBaseTests.3qpJUEJM.js:90:5[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/unit/security/csp-report-security.test.js" name="CSP Report Security Validation &gt; Request Stream Handling &gt; should prevent race conditions in request handling" time="0.006456416">
        </testcase>
        <testcase classname="tests/unit/security/csp-report-security.test.js" name="CSP Report Security Validation &gt; Security Edge Cases &gt; should handle malformed content-type headers" time="0.000403625">
        </testcase>
        <testcase classname="tests/unit/security/csp-report-security.test.js" name="CSP Report Security Validation &gt; Security Edge Cases &gt; should handle case-insensitive content-type matching" time="0.000544375">
            <system-err>
High-severity CSP violation: {
  level: [32m&apos;high&apos;[39m,
  message: [32m&quot;CSP Violation: script-src &apos;self&apos;&quot;[39m,
  details: {
    documentUri: [32m&apos;https://example.com&apos;[39m,
    referrer: [32m&apos;&apos;[39m,
    blockedUri: [32m&apos;https://malicious.com/script.js&apos;[39m,
    violatedDirective: [32m&quot;script-src &apos;self&apos;&quot;[39m,
    effectiveDirective: [32m&apos;&apos;[39m,
    originalPolicy: [32m&apos;&apos;[39m,
    disposition: [32m&apos;enforce&apos;[39m,
    statusCode: [33m200[39m,
    scriptSample: [32m&apos;&apos;[39m,
    timestamp: [32m&apos;2025-09-12T18:06:46.193Z&apos;[39m,
    severity: [32m&apos;high&apos;[39m,
    userAgent: [32m&apos;Unknown&apos;[39m,
    ip: [32m&apos;127.0.0.1&apos;[39m,
    requestId: [32m&apos;csp_1757700406193&apos;[39m
  },
  tags: { security: [33mtrue[39m, csp: [33mtrue[39m, severity: [32m&apos;high&apos;[39m }
}
HIGH SEVERITY CSP VIOLATION - Immediate attention required: {
  violationId: [32m&apos;csp_1757700406193_c1nl6myne&apos;[39m,
  directive: [32m&quot;script-src &apos;self&apos;&quot;[39m,
  blockedUri: [32m&apos;https://malicious.com/script.js&apos;[39m,
  documentUri: [32m&apos;https://example.com&apos;[39m,
  ip: [32m&apos;127.0.0.1&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="tests/unit/security/csp-report-security.test.js" name="CSP Report Security Validation &gt; Security Edge Cases &gt; should prevent memory exhaustion attacks" time="0.162336417">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/frontend/utils/Analytics.test.js" timestamp="2025-09-12T18:06:47.019Z" hostname="Damilolas-MacBook-Air.local" tests="69" failures="0" errors="0" skipped="0" time="0.008487375">
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; generateSessionId &gt; should generate unique session IDs" time="0.000744208">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; generateSessionId &gt; should include timestamp in session ID" time="0.000088917">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; generateSessionId &gt; should include random component" time="0.000102084">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; createEventData &gt; should create basic event data structure" time="0.000259375">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; createEventData &gt; should include provided properties" time="0.000074167">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; createEventData &gt; should include context data" time="0.000082167">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; createEventData &gt; should use defaults when context not provided" time="0.000091459">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; createEventData &gt; should throw error for invalid event name" time="0.00036775">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; createEventData &gt; should merge properties correctly" time="0.000099167">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; validateEventData &gt; should validate correct event data" time="0.000308041">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; validateEventData &gt; should reject null/undefined" time="0.000066167">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; validateEventData &gt; should require event name" time="0.00015625">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; validateEventData &gt; should require timestamp" time="0.00008125">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; validateEventData &gt; should require session ID" time="0.000066167">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; validateEventData &gt; should validate type requirements" time="0.0000995">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; formatCartEvent &gt; should map known event types" time="0.000150375">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; formatCartEvent &gt; should handle unknown event types" time="0.000058917">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; formatCartEvent &gt; should include provided details" time="0.000091708">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; formatCartEvent &gt; should handle empty details" time="0.0000725">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; formatEcommerceEvent &gt; should format basic e-commerce event" time="0.000141125">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; formatEcommerceEvent &gt; should handle multiple items" time="0.000635791">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; formatEcommerceEvent &gt; should use fallback values for missing properties" time="0.000092">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; formatEcommerceEvent &gt; should handle empty items array" time="0.000070708">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; formatEcommerceEvent &gt; should round value to 2 decimal places" time="0.0000565">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; formatEcommerceEvent &gt; should allow custom currency" time="0.00004725">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; formatFacebookPixelEvent &gt; should map known events to Facebook events" time="0.000106916">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; formatFacebookPixelEvent &gt; should use event name as-is for unknown events" time="0.000079792">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; formatFacebookPixelEvent &gt; should format event data correctly" time="0.0001">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; formatFacebookPixelEvent &gt; should handle missing properties gracefully" time="0.000077791">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; formatGA4Event &gt; should format basic GA4 event data" time="0.000076708">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; formatGA4Event &gt; should include items data when available" time="0.000104083">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; formatGA4Event &gt; should handle missing optional properties" time="0.000068584">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; formatGA4Event &gt; should handle empty items array" time="0.000078917">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; createConversionFunnel &gt; should create funnel with counts" time="0.000207209">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; createConversionFunnel &gt; should calculate conversion rates" time="0.000053792">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; createConversionFunnel &gt; should handle empty events array" time="0.000128875">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; createConversionFunnel &gt; should include all funnel steps even if not present" time="0.000093541">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; createConversionFunnel &gt; should calculate rates with partial funnel data" time="0.000045584">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; isDevelopmentEnvironment &gt; should detect localhost" time="0.000052917">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; isDevelopmentEnvironment &gt; should detect 127.0.0.1" time="0.00003375">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; isDevelopmentEnvironment &gt; should detect development ports" time="0.00004325">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; isDevelopmentEnvironment &gt; should detect debug parameter" time="0.000034333">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; isDevelopmentEnvironment &gt; should detect dev_mode in localStorage" time="0.000044792">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; isDevelopmentEnvironment &gt; should return false for production environment" time="0.000039375">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; isDevelopmentEnvironment &gt; should handle missing location" time="0.000035041">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; sanitizeEventProperties &gt; should include safe property types" time="0.000372042">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; sanitizeEventProperties &gt; should truncate long strings" time="0.000066584">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; sanitizeEventProperties &gt; should handle large arrays" time="0.000039125">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; sanitizeEventProperties &gt; should preserve small arrays" time="0.000048916">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; sanitizeEventProperties &gt; should handle empty input" time="0.000044083">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; createPerformanceEvent &gt; should create valid performance event" time="0.000062208">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; createPerformanceEvent &gt; should allow custom unit" time="0.000039625">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; createPerformanceEvent &gt; should round value to 2 decimal places" time="0.000039583">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; createPerformanceEvent &gt; should require valid metric name" time="0.000089791">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; createPerformanceEvent &gt; should require valid value" time="0.000077417">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; createErrorEvent &gt; should create valid error event" time="0.000064125">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; createErrorEvent &gt; should include sanitized context" time="0.000071208">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; createErrorEvent &gt; should truncate long error messages" time="0.0000515">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; createErrorEvent &gt; should require valid error type" time="0.000079208">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; createErrorEvent &gt; should require valid error message" time="0.000096625">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; calculateSessionDuration &gt; should calculate duration correctly" time="0.000055458">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; calculateSessionDuration &gt; should use current time as default end time" time="0.000039792">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; calculateSessionDuration &gt; should return 0 for invalid start time" time="0.000050125">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; calculateSessionDuration &gt; should use current time for invalid end time" time="0.000037583">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; calculateSessionDuration &gt; should not return negative duration" time="0.00007175">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; calculateSessionDuration &gt; should handle same start and end time" time="0.000039542">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; integration scenarios &gt; should create complete analytics event flow" time="0.00008225">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; integration scenarios &gt; should handle complete e-commerce tracking" time="0.000091542">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/Analytics.test.js" name="Analytics Utils &gt; integration scenarios &gt; should create comprehensive conversion funnel analysis" time="0.000069208">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/frontend/utils/DOMSanitizer.test.js" timestamp="2025-09-12T18:06:47.022Z" hostname="Damilolas-MacBook-Air.local" tests="38" failures="0" errors="0" skipped="0" time="0.01032625">
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; escapeHtml &gt; should escape HTML special characters" time="0.000402375">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; escapeHtml &gt; should escape quotes and ampersands" time="0.000091417">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; escapeHtml &gt; should handle empty and null strings" time="0.000066125">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; escapeHtml &gt; should preserve safe text" time="0.000074542">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; escapeHtml &gt; should handle special Unicode characters" time="0.000074333">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; escapeHtml &gt; should escape nested HTML structures" time="0.000058833">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; createSafeHTML &gt; should create safe document fragment from HTML" time="0.001368166">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; createSafeHTML &gt; should remove script tags" time="0.000716958">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; createSafeHTML &gt; should remove inline event handlers" time="0.000534959">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; createSafeHTML &gt; should remove javascript: URLs from href" time="0.000467375">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; createSafeHTML &gt; should remove javascript: URLs from src" time="0.000178042">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; createSafeHTML &gt; should handle complex nested structures" time="0.000876292">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; createSafeHTML &gt; should preserve safe attributes" time="0.000162083">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; createSafeHTML &gt; should handle empty HTML" time="0.000068958">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; createSafeHTML &gt; should remove all event handler attributes" time="0.000289292">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; setSafeHTML &gt; should set safe HTML content" time="0.000283167">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; setSafeHTML &gt; should clear existing content" time="0.000226292">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; setSafeHTML &gt; should sanitize malicious content" time="0.000291667">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; setSafeHTML &gt; should handle multiple child nodes" time="0.000283666">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; setSafeHTML &gt; should handle empty content" time="0.0001345">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; sanitizeInput &gt; should remove HTML tags from input" time="0.000098417">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; sanitizeInput &gt; should escape remaining special characters" time="0.000041166">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; sanitizeInput &gt; should handle complex HTML structures" time="0.000043375">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; sanitizeInput &gt; should handle non-string inputs" time="0.000035666">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; sanitizeInput &gt; should preserve safe text content" time="0.000029708">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; sanitizeInput &gt; should handle mixed content" time="0.000030708">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; sanitizeInput &gt; should handle malformed HTML" time="0.000029375">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; sanitizeInput &gt; should handle empty strings" time="0.000028667">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; createSafeText &gt; should create text node from string" time="0.00006425">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; createSafeText &gt; should handle special characters safely" time="0.000024833">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; createSafeText &gt; should handle empty strings" time="0.000024208">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; createSafeText &gt; should handle null and undefined" time="0.000030833">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; createSafeText &gt; should handle numbers" time="0.000024">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; createSafeText &gt; should be safe to append to DOM" time="0.000075625">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; integration scenarios &gt; should prevent XSS through multiple attack vectors" time="0.000824666">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; integration scenarios &gt; should preserve legitimate content while removing threats" time="0.000523084">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; integration scenarios &gt; should handle deeply nested malicious content" time="0.000502583">
        </testcase>
        <testcase classname="tests/unit/frontend/utils/DOMSanitizer.test.js" name="DOMSanitizer &gt; integration scenarios &gt; should work with real festival content" time="0.000887791">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/services/auth-service-concurrency.test.js" timestamp="2025-09-12T18:06:47.023Z" hostname="Damilolas-MacBook-Air.local" tests="12" failures="0" errors="0" skipped="0" time="0.004071708">
        <testcase classname="tests/unit/services/auth-service-concurrency.test.js" name="Auth Service Concurrency Tests &gt; Concurrent Initialization - Promise Caching &gt; should cache initialization promise for concurrent calls" time="0.000454083">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;ADMIN_SESSION_DURATION&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m32[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-concurrency.test.js" name="Auth Service Concurrency Tests &gt; Concurrent Initialization - Promise Caching &gt; should handle 15+ concurrent initialization requests correctly" time="0.000364042">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;ADMIN_SESSION_DURATION&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m32[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-concurrency.test.js" name="Auth Service Concurrency Tests &gt; Race Condition Prevention &gt; should prevent race conditions by ensuring only one initialization occurs" time="0.000237042">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;ADMIN_SESSION_DURATION&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m32[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-concurrency.test.js" name="Auth Service Concurrency Tests &gt; Race Condition Prevention &gt; should handle initialization failure and allow retry" time="0.000455541">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SESSION_DURATION&apos;[39m
]
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SESSION_DURATION&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m32[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
            <system-err>
[Auth] ADMIN_SECRET not found in environment variables
[Auth] All env var keys: [
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SESSION_DURATION&apos;[39m,
  [32m&apos;APPLE_PASS_KEY&apos;[39m,
  [32m&apos;BASE_URL&apos;[39m,
  [32m&apos;CI&apos;[39m,
  [32m&apos;CI_ENVIRONMENT&apos;[39m,
  [32m&apos;CLAUDECODE&apos;[39m,
  [32m&apos;CLAUDE_CODE_ENTRYPOINT&apos;[39m,
  [32m&apos;CLICOLOR&apos;[39m,
  [32m&apos;COLOR&apos;[39m,
  [32m&apos;CONTEXT7_API_KEY&apos;[39m,
  [32m&apos;COREPACK_ENABLE_AUTO_PIN&apos;[39m,
  [32m&apos;DATABASE_URL&apos;[39m,
  [32m&apos;DEV&apos;[39m,
  [32m&apos;EDITOR&apos;[39m,
  [32m&apos;ELEVENLABS_API_KEY&apos;[39m,
  [32m&apos;GITHUB_TOKEN&apos;[39m,
  [32m&apos;GIT_EDITOR&apos;[39m,
  [32m&apos;HOME&apos;[39m,
  [32m&apos;HOMEBREW_CELLAR&apos;[39m,
  [32m&apos;HOMEBREW_PREFIX&apos;[39m,
  [32m&apos;HOMEBREW_REPOSITORY&apos;[39m,
  [32m&apos;INFOPATH&apos;[39m,
  [32m&apos;INIT_CWD&apos;[39m,
  [32m&apos;INTERNAL_API_KEY&apos;[39m,
  [32m&apos;LANG&apos;[39m,
  [32m&apos;LOGNAME&apos;[39m,
  [32m&apos;LSCOLORS&apos;[39m,
  [32m&apos;MODE&apos;[39m,
  [32m&apos;NODE&apos;[39m,
  [32m&apos;NODE_ENV&apos;[39m,
  [32m&apos;NODE_OPTIONS&apos;[39m,
  [32m&apos;NOTION_API_KEY&apos;[39m,
  [32m&apos;NoDefaultCurrentDirectoryInExePath&apos;[39m,
  [32m&apos;OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE&apos;[39m,
  [32m&apos;PATH&apos;[39m,
  [32m&apos;PROD&apos;[39m,
  [32m&apos;PWD&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;SHELL&apos;[39m,
  [32m&apos;SHLVL&apos;[39m,
  [32m&apos;SPOTIFY_CLIENT_ID&apos;[39m,
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;SPOTIFY_REDIRECT_URI&apos;[39m,
  [32m&apos;SSH_AUTH_SOCK&apos;[39m,
  [32m&apos;SSR&apos;[39m,
  [32m&apos;TERM&apos;[39m,
  [32m&apos;TERM_PROGRAM&apos;[39m,
  [32m&apos;TERM_PROGRAM_VERSION&apos;[39m,
  [32m&apos;TERM_SESSION_ID&apos;[39m,
  [32m&apos;TEST&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;TEST_BASE_URL&apos;[39m,
  [32m&apos;TEST_PORT&apos;[39m,
  [32m&apos;TEST_TYPE&apos;[39m,
  [32m&apos;TINYPOOL_WORKER_ID&apos;[39m,
  [32m&apos;TMPDIR&apos;[39m,
  [32m&apos;TURSO_DATABASE_URL&apos;[39m,
  [32m&apos;UNIT_ONLY_MODE&apos;[39m,
  [32m&apos;USER&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;VIPSHOME&apos;[39m,
  [32m&apos;VITEST&apos;[39m,
  [32m&apos;VITEST_CLEANUP_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_HOOK_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_MODE&apos;[39m,
  [32m&apos;VITEST_POOL_ID&apos;[39m,
  [32m&apos;VITEST_SETUP_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_TEST_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_WORKER_ID&apos;[39m,
  [32m&apos;VITE_USER_NODE_ENV&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;XPC_FLAGS&apos;[39m,
  [32m&apos;XPC_SERVICE_NAME&apos;[39m,
  [32m&apos;_&apos;[39m,
  [32m&apos;__CFBundleIdentifier&apos;[39m,
  [32m&apos;__CF_USER_TEXT_ENCODING&apos;[39m,
  [32m&apos;npm_command&apos;[39m,
  [32m&apos;npm_config_cache&apos;[39m,
  [32m&apos;npm_config_global_prefix&apos;[39m,
  [32m&apos;npm_config_globalconfig&apos;[39m,
  [32m&apos;npm_config_init_module&apos;[39m,
  [32m&apos;npm_config_local_prefix&apos;[39m,
  [32m&apos;npm_config_node_gyp&apos;[39m,
  [32m&apos;npm_config_noproxy&apos;[39m,
  [32m&apos;npm_config_npm_version&apos;[39m,
  [32m&apos;npm_config_prefix&apos;[39m,
  [32m&apos;npm_config_user_agent&apos;[39m,
  [32m&apos;npm_config_userconfig&apos;[39m,
  [32m&apos;npm_execpath&apos;[39m,
  [32m&apos;npm_lifecycle_event&apos;[39m,
  [32m&apos;npm_lifecycle_script&apos;[39m,
  [32m&apos;npm_node_execpath&apos;[39m,
  [32m&apos;npm_package_engines_node&apos;[39m,
  [32m&apos;npm_package_json&apos;[39m,
  [32m&apos;npm_package_name&apos;[39m,
  [32m&apos;npm_package_version&apos;[39m
]
[Auth] Initialization failed: ❌ FATAL: ADMIN_SECRET not configured

            </system-err>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-concurrency.test.js" name="Auth Service Concurrency Tests &gt; Fast Path Optimization &gt; should use fast path for subsequent calls after initialization" time="0.000184542">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;ADMIN_SESSION_DURATION&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m32[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-concurrency.test.js" name="Auth Service Concurrency Tests &gt; Fast Path Optimization &gt; should return same instance synchronously when already initialized" time="0.000104">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;ADMIN_SESSION_DURATION&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m32[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-concurrency.test.js" name="Auth Service Concurrency Tests &gt; Concurrent Access to Service Methods &gt; should handle concurrent method calls that trigger ensureInitialized()" time="0.000512">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;ADMIN_SESSION_DURATION&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m32[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [32m&apos;test&apos;[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m23[39m,
  adminPasswordHashPrefix: [32m&apos;$2b$10$&apos;[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m15[39m,
  expectedLength: [33m23[39m,
  firstCharMatch: [33mfalse[39m,
  lastCharMatch: [33mfalse[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mfalse[39m
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [32m&apos;test&apos;[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m23[39m,
  adminPasswordHashPrefix: [32m&apos;$2b$10$&apos;[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m12[39m,
  expectedLength: [33m23[39m,
  firstCharMatch: [33mtrue[39m,
  lastCharMatch: [33mfalse[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mfalse[39m

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-concurrency.test.js" name="Auth Service Concurrency Tests &gt; Concurrent Access to Service Methods &gt; should maintain consistency during concurrent password verification" time="0.000316667">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;ADMIN_SESSION_DURATION&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m32[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [32m&apos;test&apos;[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m11[39m,
  adminPasswordHashPrefix: [32m&apos;$2b$10$&apos;[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m11[39m,
  expectedLength: [33m11[39m,
  firstCharMatch: [33mtrue[39m,
  lastCharMatch: [33mtrue[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mtrue[39m
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [32m&apos;test&apos;[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m11[39m,
  adminPasswordHashPrefix: [32m&apos;$2b$10$&apos;[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m11[39m,
  expectedLength: [33m11[39m,
  firstCharMatch: [33mtrue[39m,
  lastCharMatch: [33mtrue[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mtrue[39m
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [32m&apos;test&apos;[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m11[39m,
  adminPasswordHashPrefix: [32m&apos;$2b$10$&apos;[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m11[39m,
  expectedLength: [33m11[39m,
  firstCharMatch: [33mtrue[39m,
  lastCharMatch: [33mtrue[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mtrue[39m
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [32m&apos;test&apos;[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m11[39m,
  adminPasswordHashPrefix: [32m&apos;$2b$10$&apos;[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m11[39m,
  expectedLength: [33m11[39m,
  firstCharMatch: [33mtrue[39m,
  lastCharMatch: [33mtrue[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mtrue[39m
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [32m&apos;test&apos;[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m11[39m,
  adminPasswordHashPrefix: [32m&apos;$2b$10$&apos;[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m11[39m,
  expectedLength: [33m11[39m,
  firstCharMatch: [33mtrue[39m,
  lastCharMatch: [33mtrue[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mtrue[39m
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [32m&apos;test&apos;[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m11[39m,
  adminPasswordHashPrefix: [32m&apos;$2b$10$&apos;[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m11[39m,
  expectedLength: [33m11[39m,
  firstCharMatch: [33mtrue[39m,
  lastCharMatch: [33mtrue[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mtrue[39m
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [32m&apos;test&apos;[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m11[39m,
  adminPasswordHashPrefix: [32m&apos;$2b$10$&apos;[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m11[39m,
  expectedLength: [33m11[39m,
  firstCharMatch: [33mtrue[39m,
  lastCharMatch: [33mtrue[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mtrue[39m
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [32m&apos;test&apos;[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m11[39m,
  adminPasswordHashPrefix: [32m&apos;$2b$10$&apos;[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m11[39m,
  expectedLength: [33m11[39m,
  firstCharMatch: [33mtrue[39m,
  lastCharMatch: [33mtrue[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mtrue[39m
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [32m&apos;test&apos;[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m11[39m,
  adminPasswordHashPrefix: [32m&apos;$2b$10$&apos;[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m11[39m,
  expectedLength: [33m11[39m,
  firstCharMatch: [33mtrue[39m,
  lastCharMatch: [33mtrue[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mtrue[39m
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [32m&apos;test&apos;[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m11[39m,
  adminPasswordHashPrefix: [32m&apos;$2b$10$&apos;[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m11[39m,
  expectedLength: [33m11[39m,
  firstCharMatch: [33mtrue[39m,
  lastCharMatch: [33mtrue[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mtrue[39m
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [32m&apos;test&apos;[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m11[39m,
  adminPasswordHashPrefix: [32m&apos;$2b$10$&apos;[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m11[39m,
  expectedLength: [33m11[39m,
  firstCharMatch: [33mtrue[39m,
  lastCharMatch: [33mtrue[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mtrue[39m
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [32m&apos;test&apos;[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m11[39m,
  adminPasswordHashPrefix: [32m&apos;$2b$10$&apos;[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m11[39m,
  expectedLength: [33m11[39m,
  firstCharMatch: [33mtrue[39m,
  lastCharMatch: [33mtrue[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mtrue[39m

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-concurrency.test.js" name="Auth Service Concurrency Tests &gt; Stress Testing - High Concurrency &gt; should handle 25+ concurrent initialization requests without issues" time="0.000324541">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;ADMIN_SESSION_DURATION&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m32[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully
✅ Handled 25 concurrent requests in 0ms

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-concurrency.test.js" name="Auth Service Concurrency Tests &gt; Stress Testing - High Concurrency &gt; should handle mixed concurrent operations during initialization" time="0.000423959">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;ADMIN_SESSION_DURATION&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m32[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [32m&apos;test&apos;[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m23[39m,
  adminPasswordHashPrefix: [32m&apos;$2b$10$&apos;[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m4[39m,
  expectedLength: [33m23[39m,
  firstCharMatch: [33mtrue[39m,
  lastCharMatch: [33mfalse[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mfalse[39m
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [32m&apos;test&apos;[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m23[39m,
  adminPasswordHashPrefix: [32m&apos;$2b$10$&apos;[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m4[39m,
  expectedLength: [33m23[39m,
  firstCharMatch: [33mtrue[39m,
  lastCharMatch: [33mfalse[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mfalse[39m
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [32m&apos;test&apos;[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m23[39m,
  adminPasswordHashPrefix: [32m&apos;$2b$10$&apos;[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m4[39m,
  expectedLength: [33m23[39m,
  firstCharMatch: [33mtrue[39m,
  lastCharMatch: [33mfalse[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mfalse[39m
✅ Successfully handled mixed concurrent operations

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-concurrency.test.js" name="Auth Service Concurrency Tests &gt; Error Handling in Concurrent Scenarios &gt; should handle concurrent calls when environment is misconfigured" time="0.0002905">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;ADMIN_SESSION_DURATION&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m5[39m
[Auth] Session duration set to: [33m3600000[39m ms

            </system-out>
            <system-err>
[Auth] ADMIN_SECRET too short: [33m5[39m &lt; 32
[Auth] Initialization failed: ADMIN_SECRET must be at least 32 characters long

            </system-err>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-concurrency.test.js" name="Auth Service Concurrency Tests &gt; Error Handling in Concurrent Scenarios &gt; should clear initialization promise on error to allow retry" time="0.000218334">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;ADMIN_SESSION_DURATION&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m3[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;ADMIN_SESSION_DURATION&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m32[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
            <system-err>
[Auth] ADMIN_SECRET too short: [33m3[39m &lt; 32
[Auth] Initialization failed: ADMIN_SECRET must be at least 32 characters long

            </system-err>
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/services/auth-service-env.test.js" timestamp="2025-09-12T18:06:47.024Z" hostname="Damilolas-MacBook-Air.local" tests="19" failures="0" errors="0" skipped="0" time="0.002069833">
        <testcase classname="tests/unit/services/auth-service-env.test.js" name="AuthService Environment Variable Handling &gt; ADMIN_SECRET Validation &gt; should throw error when ADMIN_SECRET is missing" time="0.000308792">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m
]

            </system-out>
            <system-err>
[Auth] ADMIN_SECRET not found in environment variables
[Auth] All env var keys: [
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;APPLE_PASS_KEY&apos;[39m,
  [32m&apos;BASE_URL&apos;[39m,
  [32m&apos;CI&apos;[39m,
  [32m&apos;CI_ENVIRONMENT&apos;[39m,
  [32m&apos;CLAUDECODE&apos;[39m,
  [32m&apos;CLAUDE_CODE_ENTRYPOINT&apos;[39m,
  [32m&apos;CLICOLOR&apos;[39m,
  [32m&apos;COLOR&apos;[39m,
  [32m&apos;CONTEXT7_API_KEY&apos;[39m,
  [32m&apos;COREPACK_ENABLE_AUTO_PIN&apos;[39m,
  [32m&apos;DATABASE_URL&apos;[39m,
  [32m&apos;DEV&apos;[39m,
  [32m&apos;EDITOR&apos;[39m,
  [32m&apos;ELEVENLABS_API_KEY&apos;[39m,
  [32m&apos;GITHUB_TOKEN&apos;[39m,
  [32m&apos;GIT_EDITOR&apos;[39m,
  [32m&apos;HOME&apos;[39m,
  [32m&apos;HOMEBREW_CELLAR&apos;[39m,
  [32m&apos;HOMEBREW_PREFIX&apos;[39m,
  [32m&apos;HOMEBREW_REPOSITORY&apos;[39m,
  [32m&apos;INFOPATH&apos;[39m,
  [32m&apos;INIT_CWD&apos;[39m,
  [32m&apos;INTERNAL_API_KEY&apos;[39m,
  [32m&apos;LANG&apos;[39m,
  [32m&apos;LOGNAME&apos;[39m,
  [32m&apos;LSCOLORS&apos;[39m,
  [32m&apos;MODE&apos;[39m,
  [32m&apos;NODE&apos;[39m,
  [32m&apos;NODE_ENV&apos;[39m,
  [32m&apos;NODE_OPTIONS&apos;[39m,
  [32m&apos;NOTION_API_KEY&apos;[39m,
  [32m&apos;NoDefaultCurrentDirectoryInExePath&apos;[39m,
  [32m&apos;OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE&apos;[39m,
  [32m&apos;PATH&apos;[39m,
  [32m&apos;PROD&apos;[39m,
  [32m&apos;PWD&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;SHELL&apos;[39m,
  [32m&apos;SHLVL&apos;[39m,
  [32m&apos;SPOTIFY_CLIENT_ID&apos;[39m,
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;SPOTIFY_REDIRECT_URI&apos;[39m,
  [32m&apos;SSH_AUTH_SOCK&apos;[39m,
  [32m&apos;SSR&apos;[39m,
  [32m&apos;TERM&apos;[39m,
  [32m&apos;TERM_PROGRAM&apos;[39m,
  [32m&apos;TERM_PROGRAM_VERSION&apos;[39m,
  [32m&apos;TERM_SESSION_ID&apos;[39m,
  [32m&apos;TEST&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;TEST_BASE_URL&apos;[39m,
  [32m&apos;TEST_PORT&apos;[39m,
  [32m&apos;TEST_TYPE&apos;[39m,
  [32m&apos;TINYPOOL_WORKER_ID&apos;[39m,
  [32m&apos;TMPDIR&apos;[39m,
  [32m&apos;TURSO_DATABASE_URL&apos;[39m,
  [32m&apos;UNIT_ONLY_MODE&apos;[39m,
  [32m&apos;USER&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;VIPSHOME&apos;[39m,
  [32m&apos;VITEST&apos;[39m,
  [32m&apos;VITEST_CLEANUP_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_HOOK_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_MODE&apos;[39m,
  [32m&apos;VITEST_POOL_ID&apos;[39m,
  [32m&apos;VITEST_SETUP_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_TEST_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_WORKER_ID&apos;[39m,
  [32m&apos;VITE_USER_NODE_ENV&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;XPC_FLAGS&apos;[39m,
  [32m&apos;XPC_SERVICE_NAME&apos;[39m,
  [32m&apos;_&apos;[39m,
  [32m&apos;__CFBundleIdentifier&apos;[39m,
  [32m&apos;__CF_USER_TEXT_ENCODING&apos;[39m,
  [32m&apos;npm_command&apos;[39m,
  [32m&apos;npm_config_cache&apos;[39m,
  [32m&apos;npm_config_global_prefix&apos;[39m,
  [32m&apos;npm_config_globalconfig&apos;[39m,
  [32m&apos;npm_config_init_module&apos;[39m,
  [32m&apos;npm_config_local_prefix&apos;[39m,
  [32m&apos;npm_config_node_gyp&apos;[39m,
  [32m&apos;npm_config_noproxy&apos;[39m,
  [32m&apos;npm_config_npm_version&apos;[39m,
  [32m&apos;npm_config_prefix&apos;[39m,
  [32m&apos;npm_config_user_agent&apos;[39m,
  [32m&apos;npm_config_userconfig&apos;[39m,
  [32m&apos;npm_execpath&apos;[39m,
  [32m&apos;npm_lifecycle_event&apos;[39m,
  [32m&apos;npm_lifecycle_script&apos;[39m,
  [32m&apos;npm_node_execpath&apos;[39m,
  [32m&apos;npm_package_engines_node&apos;[39m,
  [32m&apos;npm_package_json&apos;[39m,
  [32m&apos;npm_package_name&apos;[39m,
  [32m&apos;npm_package_version&apos;[39m
]
[Auth] Initialization failed: ❌ FATAL: ADMIN_SECRET not configured

            </system-err>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-env.test.js" name="AuthService Environment Variable Handling &gt; ADMIN_SECRET Validation &gt; should throw error when ADMIN_SECRET is too short (&lt;32 chars)" time="0.000134958">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m31[39m
[Auth] Session duration set to: [33m3600000[39m ms

            </system-out>
            <system-err>
[Auth] ADMIN_SECRET too short: [33m31[39m &lt; 32
[Auth] Initialization failed: ADMIN_SECRET must be at least 32 characters long

            </system-err>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-env.test.js" name="AuthService Environment Variable Handling &gt; ADMIN_SECRET Validation &gt; should accept ADMIN_SECRET with exactly 32 characters" time="0.000182209">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m32[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-env.test.js" name="AuthService Environment Variable Handling &gt; ADMIN_SECRET Validation &gt; should accept ADMIN_SECRET longer than 32 characters" time="0.000074584">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m65[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-env.test.js" name="AuthService Environment Variable Handling &gt; ADMIN_SESSION_DURATION Parsing &gt; should parse ADMIN_SESSION_DURATION correctly when set" time="0.000101375">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;ADMIN_SESSION_DURATION&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m35[39m
[Auth] Session duration set to: [33m7200000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-env.test.js" name="AuthService Environment Variable Handling &gt; ADMIN_SESSION_DURATION Parsing &gt; should use default session duration when ADMIN_SESSION_DURATION is not set" time="0.000046791">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m35[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-env.test.js" name="AuthService Environment Variable Handling &gt; ADMIN_SESSION_DURATION Parsing &gt; should parse ADMIN_SESSION_DURATION from string to number" time="0.00006175">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;ADMIN_SESSION_DURATION&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m35[39m
[Auth] Session duration set to: [33m1800000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-env.test.js" name="AuthService Environment Variable Handling &gt; ADMIN_SESSION_DURATION Parsing &gt; should handle ADMIN_SESSION_DURATION with leading/trailing whitespace" time="0.000045416">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;ADMIN_SESSION_DURATION&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m35[39m
[Auth] Session duration set to: [33m900000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-env.test.js" name="AuthService Environment Variable Handling &gt; ADMIN_SESSION_DURATION Parsing &gt; should handle invalid ADMIN_SESSION_DURATION gracefully" time="0.000044292">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;ADMIN_SESSION_DURATION&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m35[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-env.test.js" name="AuthService Environment Variable Handling &gt; ADMIN_SESSION_DURATION Parsing &gt; should use empty string as fallback when ADMIN_SESSION_DURATION is undefined" time="0.000044916">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m35[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-env.test.js" name="AuthService Environment Variable Handling &gt; Promise-based Initialization Error Handling &gt; should clear promise on error to allow retry after fixing env vars" time="0.000208583">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m
]
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m35[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
            <system-err>
[Auth] ADMIN_SECRET not found in environment variables
[Auth] All env var keys: [
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;APPLE_PASS_KEY&apos;[39m,
  [32m&apos;BASE_URL&apos;[39m,
  [32m&apos;CI&apos;[39m,
  [32m&apos;CI_ENVIRONMENT&apos;[39m,
  [32m&apos;CLAUDECODE&apos;[39m,
  [32m&apos;CLAUDE_CODE_ENTRYPOINT&apos;[39m,
  [32m&apos;CLICOLOR&apos;[39m,
  [32m&apos;COLOR&apos;[39m,
  [32m&apos;CONTEXT7_API_KEY&apos;[39m,
  [32m&apos;COREPACK_ENABLE_AUTO_PIN&apos;[39m,
  [32m&apos;DATABASE_URL&apos;[39m,
  [32m&apos;DEV&apos;[39m,
  [32m&apos;EDITOR&apos;[39m,
  [32m&apos;ELEVENLABS_API_KEY&apos;[39m,
  [32m&apos;GITHUB_TOKEN&apos;[39m,
  [32m&apos;GIT_EDITOR&apos;[39m,
  [32m&apos;HOME&apos;[39m,
  [32m&apos;HOMEBREW_CELLAR&apos;[39m,
  [32m&apos;HOMEBREW_PREFIX&apos;[39m,
  [32m&apos;HOMEBREW_REPOSITORY&apos;[39m,
  [32m&apos;INFOPATH&apos;[39m,
  [32m&apos;INIT_CWD&apos;[39m,
  [32m&apos;INTERNAL_API_KEY&apos;[39m,
  [32m&apos;LANG&apos;[39m,
  [32m&apos;LOGNAME&apos;[39m,
  [32m&apos;LSCOLORS&apos;[39m,
  [32m&apos;MODE&apos;[39m,
  [32m&apos;NODE&apos;[39m,
  [32m&apos;NODE_ENV&apos;[39m,
  [32m&apos;NODE_OPTIONS&apos;[39m,
  [32m&apos;NOTION_API_KEY&apos;[39m,
  [32m&apos;NoDefaultCurrentDirectoryInExePath&apos;[39m,
  [32m&apos;OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE&apos;[39m,
  [32m&apos;PATH&apos;[39m,
  [32m&apos;PROD&apos;[39m,
  [32m&apos;PWD&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;SHELL&apos;[39m,
  [32m&apos;SHLVL&apos;[39m,
  [32m&apos;SPOTIFY_CLIENT_ID&apos;[39m,
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;SPOTIFY_REDIRECT_URI&apos;[39m,
  [32m&apos;SSH_AUTH_SOCK&apos;[39m,
  [32m&apos;SSR&apos;[39m,
  [32m&apos;TERM&apos;[39m,
  [32m&apos;TERM_PROGRAM&apos;[39m,
  [32m&apos;TERM_PROGRAM_VERSION&apos;[39m,
  [32m&apos;TERM_SESSION_ID&apos;[39m,
  [32m&apos;TEST&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;TEST_BASE_URL&apos;[39m,
  [32m&apos;TEST_PORT&apos;[39m,
  [32m&apos;TEST_TYPE&apos;[39m,
  [32m&apos;TINYPOOL_WORKER_ID&apos;[39m,
  [32m&apos;TMPDIR&apos;[39m,
  [32m&apos;TURSO_DATABASE_URL&apos;[39m,
  [32m&apos;UNIT_ONLY_MODE&apos;[39m,
  [32m&apos;USER&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;VIPSHOME&apos;[39m,
  [32m&apos;VITEST&apos;[39m,
  [32m&apos;VITEST_CLEANUP_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_HOOK_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_MODE&apos;[39m,
  [32m&apos;VITEST_POOL_ID&apos;[39m,
  [32m&apos;VITEST_SETUP_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_TEST_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_WORKER_ID&apos;[39m,
  [32m&apos;VITE_USER_NODE_ENV&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;XPC_FLAGS&apos;[39m,
  [32m&apos;XPC_SERVICE_NAME&apos;[39m,
  [32m&apos;_&apos;[39m,
  [32m&apos;__CFBundleIdentifier&apos;[39m,
  [32m&apos;__CF_USER_TEXT_ENCODING&apos;[39m,
  [32m&apos;npm_command&apos;[39m,
  [32m&apos;npm_config_cache&apos;[39m,
  [32m&apos;npm_config_global_prefix&apos;[39m,
  [32m&apos;npm_config_globalconfig&apos;[39m,
  [32m&apos;npm_config_init_module&apos;[39m,
  [32m&apos;npm_config_local_prefix&apos;[39m,
  [32m&apos;npm_config_node_gyp&apos;[39m,
  [32m&apos;npm_config_noproxy&apos;[39m,
  [32m&apos;npm_config_npm_version&apos;[39m,
  [32m&apos;npm_config_prefix&apos;[39m,
  [32m&apos;npm_config_user_agent&apos;[39m,
  [32m&apos;npm_config_userconfig&apos;[39m,
  [32m&apos;npm_execpath&apos;[39m,
  [32m&apos;npm_lifecycle_event&apos;[39m,
  [32m&apos;npm_lifecycle_script&apos;[39m,
  [32m&apos;npm_node_execpath&apos;[39m,
  [32m&apos;npm_package_engines_node&apos;[39m,
  [32m&apos;npm_package_json&apos;[39m,
  [32m&apos;npm_package_name&apos;[39m,
  [32m&apos;npm_package_version&apos;[39m
]
[Auth] Initialization failed: ❌ FATAL: ADMIN_SECRET not configured

            </system-err>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-env.test.js" name="AuthService Environment Variable Handling &gt; Promise-based Initialization Error Handling &gt; should clear promise on ADMIN_SECRET length error for retry" time="0.000125625">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m5[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m34[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
            <system-err>
[Auth] ADMIN_SECRET too short: [33m5[39m &lt; 32
[Auth] Initialization failed: ADMIN_SECRET must be at least 32 characters long

            </system-err>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-env.test.js" name="AuthService Environment Variable Handling &gt; Promise-based Initialization Error Handling &gt; should maintain promise during concurrent initialization attempts" time="0.000075917">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m36[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-env.test.js" name="AuthService Environment Variable Handling &gt; Promise-based Initialization Error Handling &gt; should return immediately on subsequent calls after successful initialization" time="0.0000675">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m35[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-env.test.js" name="AuthService Environment Variable Handling &gt; Environment Variable Integration &gt; should handle all valid environment configurations" time="0.000055167">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;ADMIN_SESSION_DURATION&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m33[39m
[Auth] Session duration set to: [33m5400000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-env.test.js" name="AuthService Environment Variable Handling &gt; Environment Variable Integration &gt; should preserve initialized state across multiple calls" time="0.000059209">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;ADMIN_SESSION_DURATION&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m33[39m
[Auth] Session duration set to: [33m2700000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-env.test.js" name="AuthService Environment Variable Handling &gt; Environment Variable Integration &gt; should handle edge case environment values" time="0.000052125">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;ADMIN_SESSION_DURATION&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m32[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-env.test.js" name="AuthService Environment Variable Handling &gt; Error Message Quality &gt; should provide clear error message for missing ADMIN_SECRET" time="0.000138667">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m
]

            </system-out>
            <system-err>
[Auth] ADMIN_SECRET not found in environment variables
[Auth] All env var keys: [
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;APPLE_PASS_KEY&apos;[39m,
  [32m&apos;BASE_URL&apos;[39m,
  [32m&apos;CI&apos;[39m,
  [32m&apos;CI_ENVIRONMENT&apos;[39m,
  [32m&apos;CLAUDECODE&apos;[39m,
  [32m&apos;CLAUDE_CODE_ENTRYPOINT&apos;[39m,
  [32m&apos;CLICOLOR&apos;[39m,
  [32m&apos;COLOR&apos;[39m,
  [32m&apos;CONTEXT7_API_KEY&apos;[39m,
  [32m&apos;COREPACK_ENABLE_AUTO_PIN&apos;[39m,
  [32m&apos;DATABASE_URL&apos;[39m,
  [32m&apos;DEV&apos;[39m,
  [32m&apos;EDITOR&apos;[39m,
  [32m&apos;ELEVENLABS_API_KEY&apos;[39m,
  [32m&apos;GITHUB_TOKEN&apos;[39m,
  [32m&apos;GIT_EDITOR&apos;[39m,
  [32m&apos;HOME&apos;[39m,
  [32m&apos;HOMEBREW_CELLAR&apos;[39m,
  [32m&apos;HOMEBREW_PREFIX&apos;[39m,
  [32m&apos;HOMEBREW_REPOSITORY&apos;[39m,
  [32m&apos;INFOPATH&apos;[39m,
  [32m&apos;INIT_CWD&apos;[39m,
  [32m&apos;INTERNAL_API_KEY&apos;[39m,
  [32m&apos;LANG&apos;[39m,
  [32m&apos;LOGNAME&apos;[39m,
  [32m&apos;LSCOLORS&apos;[39m,
  [32m&apos;MODE&apos;[39m,
  [32m&apos;NODE&apos;[39m,
  [32m&apos;NODE_ENV&apos;[39m,
  [32m&apos;NODE_OPTIONS&apos;[39m,
  [32m&apos;NOTION_API_KEY&apos;[39m,
  [32m&apos;NoDefaultCurrentDirectoryInExePath&apos;[39m,
  [32m&apos;OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE&apos;[39m,
  [32m&apos;PATH&apos;[39m,
  [32m&apos;PROD&apos;[39m,
  [32m&apos;PWD&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;SHELL&apos;[39m,
  [32m&apos;SHLVL&apos;[39m,
  [32m&apos;SPOTIFY_CLIENT_ID&apos;[39m,
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;SPOTIFY_REDIRECT_URI&apos;[39m,
  [32m&apos;SSH_AUTH_SOCK&apos;[39m,
  [32m&apos;SSR&apos;[39m,
  [32m&apos;TERM&apos;[39m,
  [32m&apos;TERM_PROGRAM&apos;[39m,
  [32m&apos;TERM_PROGRAM_VERSION&apos;[39m,
  [32m&apos;TERM_SESSION_ID&apos;[39m,
  [32m&apos;TEST&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;TEST_BASE_URL&apos;[39m,
  [32m&apos;TEST_PORT&apos;[39m,
  [32m&apos;TEST_TYPE&apos;[39m,
  [32m&apos;TINYPOOL_WORKER_ID&apos;[39m,
  [32m&apos;TMPDIR&apos;[39m,
  [32m&apos;TURSO_DATABASE_URL&apos;[39m,
  [32m&apos;UNIT_ONLY_MODE&apos;[39m,
  [32m&apos;USER&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;VIPSHOME&apos;[39m,
  [32m&apos;VITEST&apos;[39m,
  [32m&apos;VITEST_CLEANUP_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_HOOK_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_MODE&apos;[39m,
  [32m&apos;VITEST_POOL_ID&apos;[39m,
  [32m&apos;VITEST_SETUP_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_TEST_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_WORKER_ID&apos;[39m,
  [32m&apos;VITE_USER_NODE_ENV&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;XPC_FLAGS&apos;[39m,
  [32m&apos;XPC_SERVICE_NAME&apos;[39m,
  [32m&apos;_&apos;[39m,
  [32m&apos;__CFBundleIdentifier&apos;[39m,
  [32m&apos;__CF_USER_TEXT_ENCODING&apos;[39m,
  [32m&apos;npm_command&apos;[39m,
  [32m&apos;npm_config_cache&apos;[39m,
  [32m&apos;npm_config_global_prefix&apos;[39m,
  [32m&apos;npm_config_globalconfig&apos;[39m,
  [32m&apos;npm_config_init_module&apos;[39m,
  [32m&apos;npm_config_local_prefix&apos;[39m,
  [32m&apos;npm_config_node_gyp&apos;[39m,
  [32m&apos;npm_config_noproxy&apos;[39m,
  [32m&apos;npm_config_npm_version&apos;[39m,
  [32m&apos;npm_config_prefix&apos;[39m,
  [32m&apos;npm_config_user_agent&apos;[39m,
  [32m&apos;npm_config_userconfig&apos;[39m,
  [32m&apos;npm_execpath&apos;[39m,
  [32m&apos;npm_lifecycle_event&apos;[39m,
  [32m&apos;npm_lifecycle_script&apos;[39m,
  [32m&apos;npm_node_execpath&apos;[39m,
  [32m&apos;npm_package_engines_node&apos;[39m,
  [32m&apos;npm_package_json&apos;[39m,
  [32m&apos;npm_package_name&apos;[39m,
  [32m&apos;npm_package_version&apos;[39m
]
[Auth] Initialization failed: ❌ FATAL: ADMIN_SECRET not configured

            </system-err>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-env.test.js" name="AuthService Environment Variable Handling &gt; Error Message Quality &gt; should provide clear error message for short ADMIN_SECRET" time="0.000073833">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m16[39m
[Auth] Session duration set to: [33m3600000[39m ms

            </system-out>
            <system-err>
[Auth] ADMIN_SECRET too short: [33m16[39m &lt; 32
[Auth] Initialization failed: ADMIN_SECRET must be at least 32 characters long

            </system-err>
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/services/auth-service-initialization.test.js" timestamp="2025-09-12T18:06:47.026Z" hostname="Damilolas-MacBook-Air.local" tests="23" failures="0" errors="0" skipped="0" time="0.004295667">
        <testcase classname="tests/unit/services/auth-service-initialization.test.js" name="Auth Service - Lazy Initialization Pattern &gt; 1. Successful initialization with all required environment variables &gt; should initialize successfully with valid ADMIN_SECRET" time="0.000466917">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SESSION_DURATION&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m32[39m
[Auth] Session duration set to: [33m7200000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-initialization.test.js" name="Auth Service - Lazy Initialization Pattern &gt; 1. Successful initialization with all required environment variables &gt; should use default session duration when not provided" time="0.00016025">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m32[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-initialization.test.js" name="Auth Service - Lazy Initialization Pattern &gt; 1. Successful initialization with all required environment variables &gt; should handle numeric string session duration correctly" time="0.000120166">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SESSION_DURATION&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m32[39m
[Auth] Session duration set to: [33m5400000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-initialization.test.js" name="Auth Service - Lazy Initialization Pattern &gt; 1. Successful initialization with all required environment variables &gt; should handle edge case minimum length secret (32 chars)" time="0.000112125">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m32[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-initialization.test.js" name="Auth Service - Lazy Initialization Pattern &gt; 2. Promise-based singleton pattern - verify initializationPromise is cached &gt; should cache initializationPromise during initialization" time="0.000139208">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m32[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-initialization.test.js" name="Auth Service - Lazy Initialization Pattern &gt; 2. Promise-based singleton pattern - verify initializationPromise is cached &gt; should demonstrate promise caching behavior during concurrent initialization" time="0.000147041">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m32[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-initialization.test.js" name="Auth Service - Lazy Initialization Pattern &gt; 2. Promise-based singleton pattern - verify initializationPromise is cached &gt; should keep initializationPromise cached after successful initialization" time="0.000101">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m32[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-initialization.test.js" name="Auth Service - Lazy Initialization Pattern &gt; 2. Promise-based singleton pattern - verify initializationPromise is cached &gt; should clear initializationPromise on initialization error to allow retry" time="0.000376375">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m
]
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m32[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
            <system-err>
[Auth] ADMIN_SECRET not found in environment variables
[Auth] All env var keys: [
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;APPLE_PASS_KEY&apos;[39m,
  [32m&apos;BASE_URL&apos;[39m,
  [32m&apos;CI&apos;[39m,
  [32m&apos;CI_ENVIRONMENT&apos;[39m,
  [32m&apos;CLAUDECODE&apos;[39m,
  [32m&apos;CLAUDE_CODE_ENTRYPOINT&apos;[39m,
  [32m&apos;CLICOLOR&apos;[39m,
  [32m&apos;COLOR&apos;[39m,
  [32m&apos;CONTEXT7_API_KEY&apos;[39m,
  [32m&apos;COREPACK_ENABLE_AUTO_PIN&apos;[39m,
  [32m&apos;DATABASE_URL&apos;[39m,
  [32m&apos;DEV&apos;[39m,
  [32m&apos;EDITOR&apos;[39m,
  [32m&apos;ELEVENLABS_API_KEY&apos;[39m,
  [32m&apos;GITHUB_TOKEN&apos;[39m,
  [32m&apos;GIT_EDITOR&apos;[39m,
  [32m&apos;HOME&apos;[39m,
  [32m&apos;HOMEBREW_CELLAR&apos;[39m,
  [32m&apos;HOMEBREW_PREFIX&apos;[39m,
  [32m&apos;HOMEBREW_REPOSITORY&apos;[39m,
  [32m&apos;INFOPATH&apos;[39m,
  [32m&apos;INIT_CWD&apos;[39m,
  [32m&apos;INTERNAL_API_KEY&apos;[39m,
  [32m&apos;LANG&apos;[39m,
  [32m&apos;LOGNAME&apos;[39m,
  [32m&apos;LSCOLORS&apos;[39m,
  [32m&apos;MODE&apos;[39m,
  [32m&apos;NODE&apos;[39m,
  [32m&apos;NODE_ENV&apos;[39m,
  [32m&apos;NODE_OPTIONS&apos;[39m,
  [32m&apos;NOTION_API_KEY&apos;[39m,
  [32m&apos;NoDefaultCurrentDirectoryInExePath&apos;[39m,
  [32m&apos;OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE&apos;[39m,
  [32m&apos;PATH&apos;[39m,
  [32m&apos;PROD&apos;[39m,
  [32m&apos;PWD&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;SHELL&apos;[39m,
  [32m&apos;SHLVL&apos;[39m,
  [32m&apos;SPOTIFY_CLIENT_ID&apos;[39m,
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;SPOTIFY_REDIRECT_URI&apos;[39m,
  [32m&apos;SSH_AUTH_SOCK&apos;[39m,
  [32m&apos;SSR&apos;[39m,
  [32m&apos;TERM&apos;[39m,
  [32m&apos;TERM_PROGRAM&apos;[39m,
  [32m&apos;TERM_PROGRAM_VERSION&apos;[39m,
  [32m&apos;TERM_SESSION_ID&apos;[39m,
  [32m&apos;TEST&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;TEST_BASE_URL&apos;[39m,
  [32m&apos;TEST_PORT&apos;[39m,
  [32m&apos;TEST_TYPE&apos;[39m,
  [32m&apos;TINYPOOL_WORKER_ID&apos;[39m,
  [32m&apos;TMPDIR&apos;[39m,
  [32m&apos;TURSO_DATABASE_URL&apos;[39m,
  [32m&apos;UNIT_ONLY_MODE&apos;[39m,
  [32m&apos;USER&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;VIPSHOME&apos;[39m,
  [32m&apos;VITEST&apos;[39m,
  [32m&apos;VITEST_CLEANUP_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_HOOK_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_MODE&apos;[39m,
  [32m&apos;VITEST_POOL_ID&apos;[39m,
  [32m&apos;VITEST_SETUP_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_TEST_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_WORKER_ID&apos;[39m,
  [32m&apos;VITE_USER_NODE_ENV&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;XPC_FLAGS&apos;[39m,
  [32m&apos;XPC_SERVICE_NAME&apos;[39m,
  [32m&apos;_&apos;[39m,
  [32m&apos;__CFBundleIdentifier&apos;[39m,
  [32m&apos;__CF_USER_TEXT_ENCODING&apos;[39m,
  [32m&apos;npm_command&apos;[39m,
  [32m&apos;npm_config_cache&apos;[39m,
  [32m&apos;npm_config_global_prefix&apos;[39m,
  [32m&apos;npm_config_globalconfig&apos;[39m,
  [32m&apos;npm_config_init_module&apos;[39m,
  [32m&apos;npm_config_local_prefix&apos;[39m,
  [32m&apos;npm_config_node_gyp&apos;[39m,
  [32m&apos;npm_config_noproxy&apos;[39m,
  [32m&apos;npm_config_npm_version&apos;[39m,
  [32m&apos;npm_config_prefix&apos;[39m,
  [32m&apos;npm_config_user_agent&apos;[39m,
  [32m&apos;npm_config_userconfig&apos;[39m,
  [32m&apos;npm_execpath&apos;[39m,
  [32m&apos;npm_lifecycle_event&apos;[39m,
  [32m&apos;npm_lifecycle_script&apos;[39m,
  [32m&apos;npm_node_execpath&apos;[39m,
  [32m&apos;npm_package_engines_node&apos;[39m,
  [32m&apos;npm_package_json&apos;[39m,
  [32m&apos;npm_package_name&apos;[39m,
  [32m&apos;npm_package_version&apos;[39m
]
[Auth] Initialization failed: ❌ FATAL: ADMIN_SECRET not configured

            </system-err>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-initialization.test.js" name="Auth Service - Lazy Initialization Pattern &gt; 2. Promise-based singleton pattern - verify initializationPromise is cached &gt; should handle concurrent initialization attempts during error" time="0.000222625">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m
]

            </system-out>
            <system-err>
[Auth] ADMIN_SECRET not found in environment variables
[Auth] All env var keys: [
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;APPLE_PASS_KEY&apos;[39m,
  [32m&apos;BASE_URL&apos;[39m,
  [32m&apos;CI&apos;[39m,
  [32m&apos;CI_ENVIRONMENT&apos;[39m,
  [32m&apos;CLAUDECODE&apos;[39m,
  [32m&apos;CLAUDE_CODE_ENTRYPOINT&apos;[39m,
  [32m&apos;CLICOLOR&apos;[39m,
  [32m&apos;COLOR&apos;[39m,
  [32m&apos;CONTEXT7_API_KEY&apos;[39m,
  [32m&apos;COREPACK_ENABLE_AUTO_PIN&apos;[39m,
  [32m&apos;DATABASE_URL&apos;[39m,
  [32m&apos;DEV&apos;[39m,
  [32m&apos;EDITOR&apos;[39m,
  [32m&apos;ELEVENLABS_API_KEY&apos;[39m,
  [32m&apos;GITHUB_TOKEN&apos;[39m,
  [32m&apos;GIT_EDITOR&apos;[39m,
  [32m&apos;HOME&apos;[39m,
  [32m&apos;HOMEBREW_CELLAR&apos;[39m,
  [32m&apos;HOMEBREW_PREFIX&apos;[39m,
  [32m&apos;HOMEBREW_REPOSITORY&apos;[39m,
  [32m&apos;INFOPATH&apos;[39m,
  [32m&apos;INIT_CWD&apos;[39m,
  [32m&apos;INTERNAL_API_KEY&apos;[39m,
  [32m&apos;LANG&apos;[39m,
  [32m&apos;LOGNAME&apos;[39m,
  [32m&apos;LSCOLORS&apos;[39m,
  [32m&apos;MODE&apos;[39m,
  [32m&apos;NODE&apos;[39m,
  [32m&apos;NODE_ENV&apos;[39m,
  [32m&apos;NODE_OPTIONS&apos;[39m,
  [32m&apos;NOTION_API_KEY&apos;[39m,
  [32m&apos;NoDefaultCurrentDirectoryInExePath&apos;[39m,
  [32m&apos;OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE&apos;[39m,
  [32m&apos;PATH&apos;[39m,
  [32m&apos;PROD&apos;[39m,
  [32m&apos;PWD&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;SHELL&apos;[39m,
  [32m&apos;SHLVL&apos;[39m,
  [32m&apos;SPOTIFY_CLIENT_ID&apos;[39m,
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;SPOTIFY_REDIRECT_URI&apos;[39m,
  [32m&apos;SSH_AUTH_SOCK&apos;[39m,
  [32m&apos;SSR&apos;[39m,
  [32m&apos;TERM&apos;[39m,
  [32m&apos;TERM_PROGRAM&apos;[39m,
  [32m&apos;TERM_PROGRAM_VERSION&apos;[39m,
  [32m&apos;TERM_SESSION_ID&apos;[39m,
  [32m&apos;TEST&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;TEST_BASE_URL&apos;[39m,
  [32m&apos;TEST_PORT&apos;[39m,
  [32m&apos;TEST_TYPE&apos;[39m,
  [32m&apos;TINYPOOL_WORKER_ID&apos;[39m,
  [32m&apos;TMPDIR&apos;[39m,
  [32m&apos;TURSO_DATABASE_URL&apos;[39m,
  [32m&apos;UNIT_ONLY_MODE&apos;[39m,
  [32m&apos;USER&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;VIPSHOME&apos;[39m,
  [32m&apos;VITEST&apos;[39m,
  [32m&apos;VITEST_CLEANUP_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_HOOK_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_MODE&apos;[39m,
  [32m&apos;VITEST_POOL_ID&apos;[39m,
  [32m&apos;VITEST_SETUP_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_TEST_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_WORKER_ID&apos;[39m,
  [32m&apos;VITE_USER_NODE_ENV&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;XPC_FLAGS&apos;[39m,
  [32m&apos;XPC_SERVICE_NAME&apos;[39m,
  [32m&apos;_&apos;[39m,
  [32m&apos;__CFBundleIdentifier&apos;[39m,
  [32m&apos;__CF_USER_TEXT_ENCODING&apos;[39m,
  [32m&apos;npm_command&apos;[39m,
  [32m&apos;npm_config_cache&apos;[39m,
  [32m&apos;npm_config_global_prefix&apos;[39m,
  [32m&apos;npm_config_globalconfig&apos;[39m,
  [32m&apos;npm_config_init_module&apos;[39m,
  [32m&apos;npm_config_local_prefix&apos;[39m,
  [32m&apos;npm_config_node_gyp&apos;[39m,
  [32m&apos;npm_config_noproxy&apos;[39m,
  [32m&apos;npm_config_npm_version&apos;[39m,
  [32m&apos;npm_config_prefix&apos;[39m,
  [32m&apos;npm_config_user_agent&apos;[39m,
  [32m&apos;npm_config_userconfig&apos;[39m,
  [32m&apos;npm_execpath&apos;[39m,
  [32m&apos;npm_lifecycle_event&apos;[39m,
  [32m&apos;npm_lifecycle_script&apos;[39m,
  [32m&apos;npm_node_execpath&apos;[39m,
  [32m&apos;npm_package_engines_node&apos;[39m,
  [32m&apos;npm_package_json&apos;[39m,
  [32m&apos;npm_package_name&apos;[39m,
  [32m&apos;npm_package_version&apos;[39m
]
[Auth] Initialization failed: ❌ FATAL: ADMIN_SECRET not configured

            </system-err>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-initialization.test.js" name="Auth Service - Lazy Initialization Pattern &gt; 3. Initialized flag is set correctly after successful init &gt; should start with initialized flag as false" time="0.000027542">
        </testcase>
        <testcase classname="tests/unit/services/auth-service-initialization.test.js" name="Auth Service - Lazy Initialization Pattern &gt; 3. Initialized flag is set correctly after successful init &gt; should set initialized flag to true after successful initialization" time="0.000094417">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m32[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-initialization.test.js" name="Auth Service - Lazy Initialization Pattern &gt; 3. Initialized flag is set correctly after successful init &gt; should keep initialized flag as false after failed initialization" time="0.000187875">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m
]

            </system-out>
            <system-err>
[Auth] ADMIN_SECRET not found in environment variables
[Auth] All env var keys: [
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;APPLE_PASS_KEY&apos;[39m,
  [32m&apos;BASE_URL&apos;[39m,
  [32m&apos;CI&apos;[39m,
  [32m&apos;CI_ENVIRONMENT&apos;[39m,
  [32m&apos;CLAUDECODE&apos;[39m,
  [32m&apos;CLAUDE_CODE_ENTRYPOINT&apos;[39m,
  [32m&apos;CLICOLOR&apos;[39m,
  [32m&apos;COLOR&apos;[39m,
  [32m&apos;CONTEXT7_API_KEY&apos;[39m,
  [32m&apos;COREPACK_ENABLE_AUTO_PIN&apos;[39m,
  [32m&apos;DATABASE_URL&apos;[39m,
  [32m&apos;DEV&apos;[39m,
  [32m&apos;EDITOR&apos;[39m,
  [32m&apos;ELEVENLABS_API_KEY&apos;[39m,
  [32m&apos;GITHUB_TOKEN&apos;[39m,
  [32m&apos;GIT_EDITOR&apos;[39m,
  [32m&apos;HOME&apos;[39m,
  [32m&apos;HOMEBREW_CELLAR&apos;[39m,
  [32m&apos;HOMEBREW_PREFIX&apos;[39m,
  [32m&apos;HOMEBREW_REPOSITORY&apos;[39m,
  [32m&apos;INFOPATH&apos;[39m,
  [32m&apos;INIT_CWD&apos;[39m,
  [32m&apos;INTERNAL_API_KEY&apos;[39m,
  [32m&apos;LANG&apos;[39m,
  [32m&apos;LOGNAME&apos;[39m,
  [32m&apos;LSCOLORS&apos;[39m,
  [32m&apos;MODE&apos;[39m,
  [32m&apos;NODE&apos;[39m,
  [32m&apos;NODE_ENV&apos;[39m,
  [32m&apos;NODE_OPTIONS&apos;[39m,
  [32m&apos;NOTION_API_KEY&apos;[39m,
  [32m&apos;NoDefaultCurrentDirectoryInExePath&apos;[39m,
  [32m&apos;OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE&apos;[39m,
  [32m&apos;PATH&apos;[39m,
  [32m&apos;PROD&apos;[39m,
  [32m&apos;PWD&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;SHELL&apos;[39m,
  [32m&apos;SHLVL&apos;[39m,
  [32m&apos;SPOTIFY_CLIENT_ID&apos;[39m,
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;SPOTIFY_REDIRECT_URI&apos;[39m,
  [32m&apos;SSH_AUTH_SOCK&apos;[39m,
  [32m&apos;SSR&apos;[39m,
  [32m&apos;TERM&apos;[39m,
  [32m&apos;TERM_PROGRAM&apos;[39m,
  [32m&apos;TERM_PROGRAM_VERSION&apos;[39m,
  [32m&apos;TERM_SESSION_ID&apos;[39m,
  [32m&apos;TEST&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;TEST_BASE_URL&apos;[39m,
  [32m&apos;TEST_PORT&apos;[39m,
  [32m&apos;TEST_TYPE&apos;[39m,
  [32m&apos;TINYPOOL_WORKER_ID&apos;[39m,
  [32m&apos;TMPDIR&apos;[39m,
  [32m&apos;TURSO_DATABASE_URL&apos;[39m,
  [32m&apos;UNIT_ONLY_MODE&apos;[39m,
  [32m&apos;USER&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;VIPSHOME&apos;[39m,
  [32m&apos;VITEST&apos;[39m,
  [32m&apos;VITEST_CLEANUP_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_HOOK_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_MODE&apos;[39m,
  [32m&apos;VITEST_POOL_ID&apos;[39m,
  [32m&apos;VITEST_SETUP_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_TEST_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_WORKER_ID&apos;[39m,
  [32m&apos;VITE_USER_NODE_ENV&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;XPC_FLAGS&apos;[39m,
  [32m&apos;XPC_SERVICE_NAME&apos;[39m,
  [32m&apos;_&apos;[39m,
  [32m&apos;__CFBundleIdentifier&apos;[39m,
  [32m&apos;__CF_USER_TEXT_ENCODING&apos;[39m,
  [32m&apos;npm_command&apos;[39m,
  [32m&apos;npm_config_cache&apos;[39m,
  [32m&apos;npm_config_global_prefix&apos;[39m,
  [32m&apos;npm_config_globalconfig&apos;[39m,
  [32m&apos;npm_config_init_module&apos;[39m,
  [32m&apos;npm_config_local_prefix&apos;[39m,
  [32m&apos;npm_config_node_gyp&apos;[39m,
  [32m&apos;npm_config_noproxy&apos;[39m,
  [32m&apos;npm_config_npm_version&apos;[39m,
  [32m&apos;npm_config_prefix&apos;[39m,
  [32m&apos;npm_config_user_agent&apos;[39m,
  [32m&apos;npm_config_userconfig&apos;[39m,
  [32m&apos;npm_execpath&apos;[39m,
  [32m&apos;npm_lifecycle_event&apos;[39m,
  [32m&apos;npm_lifecycle_script&apos;[39m,
  [32m&apos;npm_node_execpath&apos;[39m,
  [32m&apos;npm_package_engines_node&apos;[39m,
  [32m&apos;npm_package_json&apos;[39m,
  [32m&apos;npm_package_name&apos;[39m,
  [32m&apos;npm_package_version&apos;[39m
]
[Auth] Initialization failed: ❌ FATAL: ADMIN_SECRET not configured

            </system-err>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-initialization.test.js" name="Auth Service - Lazy Initialization Pattern &gt; 3. Initialized flag is set correctly after successful init &gt; should reset initialized flag on initialization retry after error" time="0.000180625">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m32[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m5[39m
[Auth] Session duration set to: [33m3600000[39m ms

            </system-out>
            <system-err>
[Auth] ADMIN_SECRET too short: [33m5[39m &lt; 32
[Auth] Initialization failed: ADMIN_SECRET must be at least 32 characters long

            </system-err>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-initialization.test.js" name="Auth Service - Lazy Initialization Pattern &gt; 4. ensureInitialized returns the same instance when called multiple times &gt; should return same instance on multiple calls after initialization" time="0.000104375">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m32[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-initialization.test.js" name="Auth Service - Lazy Initialization Pattern &gt; 4. ensureInitialized returns the same instance when called multiple times &gt; should use fast path for subsequent calls (already initialized)" time="0.000144">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m32[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-initialization.test.js" name="Auth Service - Lazy Initialization Pattern &gt; 4. ensureInitialized returns the same instance when called multiple times &gt; should return consistent instance across different call patterns" time="0.000097">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m32[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-initialization.test.js" name="Auth Service - Lazy Initialization Pattern &gt; Error handling in lazy initialization &gt; should throw descriptive error when ADMIN_SECRET is missing" time="0.00042125">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m
]

            </system-out>
            <system-err>
[Auth] ADMIN_SECRET not found in environment variables
[Auth] All env var keys: [
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;APPLE_PASS_KEY&apos;[39m,
  [32m&apos;BASE_URL&apos;[39m,
  [32m&apos;CI&apos;[39m,
  [32m&apos;CI_ENVIRONMENT&apos;[39m,
  [32m&apos;CLAUDECODE&apos;[39m,
  [32m&apos;CLAUDE_CODE_ENTRYPOINT&apos;[39m,
  [32m&apos;CLICOLOR&apos;[39m,
  [32m&apos;COLOR&apos;[39m,
  [32m&apos;CONTEXT7_API_KEY&apos;[39m,
  [32m&apos;COREPACK_ENABLE_AUTO_PIN&apos;[39m,
  [32m&apos;DATABASE_URL&apos;[39m,
  [32m&apos;DEV&apos;[39m,
  [32m&apos;EDITOR&apos;[39m,
  [32m&apos;ELEVENLABS_API_KEY&apos;[39m,
  [32m&apos;GITHUB_TOKEN&apos;[39m,
  [32m&apos;GIT_EDITOR&apos;[39m,
  [32m&apos;HOME&apos;[39m,
  [32m&apos;HOMEBREW_CELLAR&apos;[39m,
  [32m&apos;HOMEBREW_PREFIX&apos;[39m,
  [32m&apos;HOMEBREW_REPOSITORY&apos;[39m,
  [32m&apos;INFOPATH&apos;[39m,
  [32m&apos;INIT_CWD&apos;[39m,
  [32m&apos;INTERNAL_API_KEY&apos;[39m,
  [32m&apos;LANG&apos;[39m,
  [32m&apos;LOGNAME&apos;[39m,
  [32m&apos;LSCOLORS&apos;[39m,
  [32m&apos;MODE&apos;[39m,
  [32m&apos;NODE&apos;[39m,
  [32m&apos;NODE_ENV&apos;[39m,
  [32m&apos;NODE_OPTIONS&apos;[39m,
  [32m&apos;NOTION_API_KEY&apos;[39m,
  [32m&apos;NoDefaultCurrentDirectoryInExePath&apos;[39m,
  [32m&apos;OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE&apos;[39m,
  [32m&apos;PATH&apos;[39m,
  [32m&apos;PROD&apos;[39m,
  [32m&apos;PWD&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;SHELL&apos;[39m,
  [32m&apos;SHLVL&apos;[39m,
  [32m&apos;SPOTIFY_CLIENT_ID&apos;[39m,
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;SPOTIFY_REDIRECT_URI&apos;[39m,
  [32m&apos;SSH_AUTH_SOCK&apos;[39m,
  [32m&apos;SSR&apos;[39m,
  [32m&apos;TERM&apos;[39m,
  [32m&apos;TERM_PROGRAM&apos;[39m,
  [32m&apos;TERM_PROGRAM_VERSION&apos;[39m,
  [32m&apos;TERM_SESSION_ID&apos;[39m,
  [32m&apos;TEST&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;TEST_BASE_URL&apos;[39m,
  [32m&apos;TEST_PORT&apos;[39m,
  [32m&apos;TEST_TYPE&apos;[39m,
  [32m&apos;TINYPOOL_WORKER_ID&apos;[39m,
  [32m&apos;TMPDIR&apos;[39m,
  [32m&apos;TURSO_DATABASE_URL&apos;[39m,
  [32m&apos;UNIT_ONLY_MODE&apos;[39m,
  [32m&apos;USER&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;VIPSHOME&apos;[39m,
  [32m&apos;VITEST&apos;[39m,
  [32m&apos;VITEST_CLEANUP_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_HOOK_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_MODE&apos;[39m,
  [32m&apos;VITEST_POOL_ID&apos;[39m,
  [32m&apos;VITEST_SETUP_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_TEST_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_WORKER_ID&apos;[39m,
  [32m&apos;VITE_USER_NODE_ENV&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;XPC_FLAGS&apos;[39m,
  [32m&apos;XPC_SERVICE_NAME&apos;[39m,
  [32m&apos;_&apos;[39m,
  [32m&apos;__CFBundleIdentifier&apos;[39m,
  [32m&apos;__CF_USER_TEXT_ENCODING&apos;[39m,
  [32m&apos;npm_command&apos;[39m,
  [32m&apos;npm_config_cache&apos;[39m,
  [32m&apos;npm_config_global_prefix&apos;[39m,
  [32m&apos;npm_config_globalconfig&apos;[39m,
  [32m&apos;npm_config_init_module&apos;[39m,
  [32m&apos;npm_config_local_prefix&apos;[39m,
  [32m&apos;npm_config_node_gyp&apos;[39m,
  [32m&apos;npm_config_noproxy&apos;[39m,
  [32m&apos;npm_config_npm_version&apos;[39m,
  [32m&apos;npm_config_prefix&apos;[39m,
  [32m&apos;npm_config_user_agent&apos;[39m,
  [32m&apos;npm_config_userconfig&apos;[39m,
  [32m&apos;npm_execpath&apos;[39m,
  [32m&apos;npm_lifecycle_event&apos;[39m,
  [32m&apos;npm_lifecycle_script&apos;[39m,
  [32m&apos;npm_node_execpath&apos;[39m,
  [32m&apos;npm_package_engines_node&apos;[39m,
  [32m&apos;npm_package_json&apos;[39m,
  [32m&apos;npm_package_name&apos;[39m,
  [32m&apos;npm_package_version&apos;[39m
]
[Auth] Initialization failed: ❌ FATAL: ADMIN_SECRET not configured

            </system-err>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-initialization.test.js" name="Auth Service - Lazy Initialization Pattern &gt; Error handling in lazy initialization &gt; should throw descriptive error when ADMIN_SECRET is too short" time="0.00016925">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m8[39m
[Auth] Session duration set to: [33m3600000[39m ms

            </system-out>
            <system-err>
[Auth] ADMIN_SECRET too short: [33m8[39m &lt; 32
[Auth] Initialization failed: ADMIN_SECRET must be at least 32 characters long

            </system-err>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-initialization.test.js" name="Auth Service - Lazy Initialization Pattern &gt; Error handling in lazy initialization &gt; should throw error when ADMIN_SECRET is empty string" time="0.0001935">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]

            </system-out>
            <system-err>
[Auth] ADMIN_SECRET not found in environment variables
[Auth] All env var keys: [
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;APPLE_PASS_KEY&apos;[39m,
  [32m&apos;BASE_URL&apos;[39m,
  [32m&apos;CI&apos;[39m,
  [32m&apos;CI_ENVIRONMENT&apos;[39m,
  [32m&apos;CLAUDECODE&apos;[39m,
  [32m&apos;CLAUDE_CODE_ENTRYPOINT&apos;[39m,
  [32m&apos;CLICOLOR&apos;[39m,
  [32m&apos;COLOR&apos;[39m,
  [32m&apos;CONTEXT7_API_KEY&apos;[39m,
  [32m&apos;COREPACK_ENABLE_AUTO_PIN&apos;[39m,
  [32m&apos;DATABASE_URL&apos;[39m,
  [32m&apos;DEV&apos;[39m,
  [32m&apos;EDITOR&apos;[39m,
  [32m&apos;ELEVENLABS_API_KEY&apos;[39m,
  [32m&apos;GITHUB_TOKEN&apos;[39m,
  [32m&apos;GIT_EDITOR&apos;[39m,
  [32m&apos;HOME&apos;[39m,
  [32m&apos;HOMEBREW_CELLAR&apos;[39m,
  [32m&apos;HOMEBREW_PREFIX&apos;[39m,
  [32m&apos;HOMEBREW_REPOSITORY&apos;[39m,
  [32m&apos;INFOPATH&apos;[39m,
  [32m&apos;INIT_CWD&apos;[39m,
  [32m&apos;INTERNAL_API_KEY&apos;[39m,
  [32m&apos;LANG&apos;[39m,
  [32m&apos;LOGNAME&apos;[39m,
  [32m&apos;LSCOLORS&apos;[39m,
  [32m&apos;MODE&apos;[39m,
  [32m&apos;NODE&apos;[39m,
  [32m&apos;NODE_ENV&apos;[39m,
  [32m&apos;NODE_OPTIONS&apos;[39m,
  [32m&apos;NOTION_API_KEY&apos;[39m,
  [32m&apos;NoDefaultCurrentDirectoryInExePath&apos;[39m,
  [32m&apos;OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE&apos;[39m,
  [32m&apos;PATH&apos;[39m,
  [32m&apos;PROD&apos;[39m,
  [32m&apos;PWD&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;SHELL&apos;[39m,
  [32m&apos;SHLVL&apos;[39m,
  [32m&apos;SPOTIFY_CLIENT_ID&apos;[39m,
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;SPOTIFY_REDIRECT_URI&apos;[39m,
  [32m&apos;SSH_AUTH_SOCK&apos;[39m,
  [32m&apos;SSR&apos;[39m,
  [32m&apos;TERM&apos;[39m,
  [32m&apos;TERM_PROGRAM&apos;[39m,
  [32m&apos;TERM_PROGRAM_VERSION&apos;[39m,
  [32m&apos;TERM_SESSION_ID&apos;[39m,
  [32m&apos;TEST&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;TEST_BASE_URL&apos;[39m,
  [32m&apos;TEST_PORT&apos;[39m,
  [32m&apos;TEST_TYPE&apos;[39m,
  [32m&apos;TINYPOOL_WORKER_ID&apos;[39m,
  [32m&apos;TMPDIR&apos;[39m,
  [32m&apos;TURSO_DATABASE_URL&apos;[39m,
  [32m&apos;UNIT_ONLY_MODE&apos;[39m,
  [32m&apos;USER&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;VIPSHOME&apos;[39m,
  [32m&apos;VITEST&apos;[39m,
  [32m&apos;VITEST_CLEANUP_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_HOOK_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_MODE&apos;[39m,
  [32m&apos;VITEST_POOL_ID&apos;[39m,
  [32m&apos;VITEST_SETUP_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_TEST_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_WORKER_ID&apos;[39m,
  [32m&apos;VITE_USER_NODE_ENV&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;XPC_FLAGS&apos;[39m,
  [32m&apos;XPC_SERVICE_NAME&apos;[39m,
  [32m&apos;_&apos;[39m,
  [32m&apos;__CFBundleIdentifier&apos;[39m,
  [32m&apos;__CF_USER_TEXT_ENCODING&apos;[39m,
  [32m&apos;npm_command&apos;[39m,
  [32m&apos;npm_config_cache&apos;[39m,
  [32m&apos;npm_config_global_prefix&apos;[39m,
  [32m&apos;npm_config_globalconfig&apos;[39m,
  [32m&apos;npm_config_init_module&apos;[39m,
  [32m&apos;npm_config_local_prefix&apos;[39m,
  [32m&apos;npm_config_node_gyp&apos;[39m,
  [32m&apos;npm_config_noproxy&apos;[39m,
  [32m&apos;npm_config_npm_version&apos;[39m,
  [32m&apos;npm_config_prefix&apos;[39m,
  [32m&apos;npm_config_user_agent&apos;[39m,
  [32m&apos;npm_config_userconfig&apos;[39m,
  [32m&apos;npm_execpath&apos;[39m,
  [32m&apos;npm_lifecycle_event&apos;[39m,
  [32m&apos;npm_lifecycle_script&apos;[39m,
  [32m&apos;npm_node_execpath&apos;[39m,
  [32m&apos;npm_package_engines_node&apos;[39m,
  [32m&apos;npm_package_json&apos;[39m,
  [32m&apos;npm_package_name&apos;[39m,
  [32m&apos;npm_package_version&apos;[39m
]
[Auth] Initialization failed: ❌ FATAL: ADMIN_SECRET not configured

            </system-err>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-initialization.test.js" name="Auth Service - Lazy Initialization Pattern &gt; Error handling in lazy initialization &gt; should handle invalid session duration gracefully" time="0.000150667">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;ADMIN_SESSION_DURATION&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m32[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-initialization.test.js" name="Auth Service - Lazy Initialization Pattern &gt; State consistency during initialization &gt; should maintain clean state before initialization" time="0.000052625">
        </testcase>
        <testcase classname="tests/unit/services/auth-service-initialization.test.js" name="Auth Service - Lazy Initialization Pattern &gt; State consistency during initialization &gt; should not mutate state during failed initialization" time="0.000238667">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m
]

            </system-out>
            <system-err>
[Auth] ADMIN_SECRET not found in environment variables
[Auth] All env var keys: [
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;APPLE_PASS_KEY&apos;[39m,
  [32m&apos;BASE_URL&apos;[39m,
  [32m&apos;CI&apos;[39m,
  [32m&apos;CI_ENVIRONMENT&apos;[39m,
  [32m&apos;CLAUDECODE&apos;[39m,
  [32m&apos;CLAUDE_CODE_ENTRYPOINT&apos;[39m,
  [32m&apos;CLICOLOR&apos;[39m,
  [32m&apos;COLOR&apos;[39m,
  [32m&apos;CONTEXT7_API_KEY&apos;[39m,
  [32m&apos;COREPACK_ENABLE_AUTO_PIN&apos;[39m,
  [32m&apos;DATABASE_URL&apos;[39m,
  [32m&apos;DEV&apos;[39m,
  [32m&apos;EDITOR&apos;[39m,
  [32m&apos;ELEVENLABS_API_KEY&apos;[39m,
  [32m&apos;GITHUB_TOKEN&apos;[39m,
  [32m&apos;GIT_EDITOR&apos;[39m,
  [32m&apos;HOME&apos;[39m,
  [32m&apos;HOMEBREW_CELLAR&apos;[39m,
  [32m&apos;HOMEBREW_PREFIX&apos;[39m,
  [32m&apos;HOMEBREW_REPOSITORY&apos;[39m,
  [32m&apos;INFOPATH&apos;[39m,
  [32m&apos;INIT_CWD&apos;[39m,
  [32m&apos;INTERNAL_API_KEY&apos;[39m,
  [32m&apos;LANG&apos;[39m,
  [32m&apos;LOGNAME&apos;[39m,
  [32m&apos;LSCOLORS&apos;[39m,
  [32m&apos;MODE&apos;[39m,
  [32m&apos;NODE&apos;[39m,
  [32m&apos;NODE_ENV&apos;[39m,
  [32m&apos;NODE_OPTIONS&apos;[39m,
  [32m&apos;NOTION_API_KEY&apos;[39m,
  [32m&apos;NoDefaultCurrentDirectoryInExePath&apos;[39m,
  [32m&apos;OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE&apos;[39m,
  [32m&apos;PATH&apos;[39m,
  [32m&apos;PROD&apos;[39m,
  [32m&apos;PWD&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;SHELL&apos;[39m,
  [32m&apos;SHLVL&apos;[39m,
  [32m&apos;SPOTIFY_CLIENT_ID&apos;[39m,
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;SPOTIFY_REDIRECT_URI&apos;[39m,
  [32m&apos;SSH_AUTH_SOCK&apos;[39m,
  [32m&apos;SSR&apos;[39m,
  [32m&apos;TERM&apos;[39m,
  [32m&apos;TERM_PROGRAM&apos;[39m,
  [32m&apos;TERM_PROGRAM_VERSION&apos;[39m,
  [32m&apos;TERM_SESSION_ID&apos;[39m,
  [32m&apos;TEST&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;TEST_BASE_URL&apos;[39m,
  [32m&apos;TEST_PORT&apos;[39m,
  [32m&apos;TEST_TYPE&apos;[39m,
  [32m&apos;TINYPOOL_WORKER_ID&apos;[39m,
  [32m&apos;TMPDIR&apos;[39m,
  [32m&apos;TURSO_DATABASE_URL&apos;[39m,
  [32m&apos;UNIT_ONLY_MODE&apos;[39m,
  [32m&apos;USER&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;VIPSHOME&apos;[39m,
  [32m&apos;VITEST&apos;[39m,
  [32m&apos;VITEST_CLEANUP_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_HOOK_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_MODE&apos;[39m,
  [32m&apos;VITEST_POOL_ID&apos;[39m,
  [32m&apos;VITEST_SETUP_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_TEST_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_WORKER_ID&apos;[39m,
  [32m&apos;VITE_USER_NODE_ENV&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;XPC_FLAGS&apos;[39m,
  [32m&apos;XPC_SERVICE_NAME&apos;[39m,
  [32m&apos;_&apos;[39m,
  [32m&apos;__CFBundleIdentifier&apos;[39m,
  [32m&apos;__CF_USER_TEXT_ENCODING&apos;[39m,
  [32m&apos;npm_command&apos;[39m,
  [32m&apos;npm_config_cache&apos;[39m,
  [32m&apos;npm_config_global_prefix&apos;[39m,
  [32m&apos;npm_config_globalconfig&apos;[39m,
  [32m&apos;npm_config_init_module&apos;[39m,
  [32m&apos;npm_config_local_prefix&apos;[39m,
  [32m&apos;npm_config_node_gyp&apos;[39m,
  [32m&apos;npm_config_noproxy&apos;[39m,
  [32m&apos;npm_config_npm_version&apos;[39m,
  [32m&apos;npm_config_prefix&apos;[39m,
  [32m&apos;npm_config_user_agent&apos;[39m,
  [32m&apos;npm_config_userconfig&apos;[39m,
  [32m&apos;npm_execpath&apos;[39m,
  [32m&apos;npm_lifecycle_event&apos;[39m,
  [32m&apos;npm_lifecycle_script&apos;[39m,
  [32m&apos;npm_node_execpath&apos;[39m,
  [32m&apos;npm_package_engines_node&apos;[39m,
  [32m&apos;npm_package_json&apos;[39m,
  [32m&apos;npm_package_name&apos;[39m,
  [32m&apos;npm_package_version&apos;[39m
]
[Auth] Initialization failed: ❌ FATAL: ADMIN_SECRET not configured

            </system-err>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-initialization.test.js" name="Auth Service - Lazy Initialization Pattern &gt; State consistency during initialization &gt; should maintain state consistency during concurrent operations" time="0.00014075">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m32[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/services/auth-service-password.test.js" timestamp="2025-09-12T18:06:47.028Z" hostname="Damilolas-MacBook-Air.local" tests="25" failures="0" errors="0" skipped="0" time="0.005473125">
        <testcase classname="tests/unit/services/auth-service-password.test.js" name="AuthService Password Verification &gt; Environment Detection &gt; should detect non-production when VERCEL_ENV is preview" time="0.000837583">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [90mundefined[39m,
  VERCEL_ENV: [32m&apos;preview&apos;[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;VERCEL_ENV&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m52[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [32m&apos;preview&apos;[39m,
  NODE_ENV: [90mundefined[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m7[39m,
  adminPasswordHashPrefix: [32m&apos;$2b$10$&apos;[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m7[39m,
  expectedLength: [33m7[39m,
  firstCharMatch: [33mtrue[39m,
  lastCharMatch: [33mtrue[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mtrue[39m

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-password.test.js" name="AuthService Password Verification &gt; Environment Detection &gt; should detect non-production when NODE_ENV is test" time="0.000313292">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m52[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [32m&apos;test&apos;[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m7[39m,
  adminPasswordHashPrefix: [32m&apos;$2b$10$&apos;[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m7[39m,
  expectedLength: [33m7[39m,
  firstCharMatch: [33mtrue[39m,
  lastCharMatch: [33mtrue[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mtrue[39m

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-password.test.js" name="AuthService Password Verification &gt; Environment Detection &gt; should detect non-production when CI is true" time="0.00019325">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [90mundefined[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m52[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [90mundefined[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m7[39m,
  adminPasswordHashPrefix: [32m&apos;$2b$10$&apos;[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m7[39m,
  expectedLength: [33m7[39m,
  firstCharMatch: [33mtrue[39m,
  lastCharMatch: [33mtrue[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mtrue[39m

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-password.test.js" name="AuthService Password Verification &gt; Environment Detection &gt; should detect non-production when E2E_TEST_MODE is true" time="0.000168">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [90mundefined[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [32m&apos;true&apos;[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m52[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [90mundefined[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m7[39m,
  adminPasswordHashPrefix: [32m&apos;$2b$10$&apos;[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m7[39m,
  expectedLength: [33m7[39m,
  firstCharMatch: [33mtrue[39m,
  lastCharMatch: [33mtrue[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mtrue[39m

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-password.test.js" name="AuthService Password Verification &gt; Environment Detection &gt; should use production only when both NODE_ENV and VERCEL_ENV are production" time="0.000227833">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;production&apos;[39m,
  VERCEL_ENV: [32m&apos;production&apos;[39m,
  CI: [90mundefined[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;VERCEL_ENV&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m52[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully
[Auth] Environment detection: {
  isProduction: [33mtrue[39m,
  isNonProd: [33mfalse[39m,
  VERCEL_ENV: [32m&apos;production&apos;[39m,
  NODE_ENV: [32m&apos;production&apos;[39m,
  hasTestPassword: [33mfalse[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [90mundefined[39m,
  adminPasswordHashPrefix: [32m&apos;$2a$10$&apos;[39m
}
[Auth] Attempting bcrypt comparison in production
[Auth] Bcrypt verification result: [33mtrue[39m

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-password.test.js" name="AuthService Password Verification &gt; TEST_ADMIN_PASSWORD in Non-Production &gt; should authenticate with TEST_ADMIN_PASSWORD" time="0.000183042">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m52[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [32m&apos;test&apos;[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mfalse[39m,
  testPasswordLength: [33m7[39m,
  adminPasswordHashPrefix: [90mundefined[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m7[39m,
  expectedLength: [33m7[39m,
  firstCharMatch: [33mtrue[39m,
  lastCharMatch: [33mtrue[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mtrue[39m

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-password.test.js" name="AuthService Password Verification &gt; TEST_ADMIN_PASSWORD in Non-Production &gt; should reject wrong TEST_ADMIN_PASSWORD without fallback" time="0.000161916">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m52[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [32m&apos;test&apos;[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m7[39m,
  adminPasswordHashPrefix: [32m&apos;$2a$10$&apos;[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m13[39m,
  expectedLength: [33m7[39m,
  firstCharMatch: [33mfalse[39m,
  lastCharMatch: [33mfalse[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mfalse[39m

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-password.test.js" name="AuthService Password Verification &gt; TEST_ADMIN_PASSWORD in Non-Production &gt; should handle TEST_ADMIN_PASSWORD with trimming" time="0.000151084">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m52[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [32m&apos;test&apos;[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m11[39m,
  adminPasswordHashPrefix: [32m&apos;$2b$10$&apos;[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m7[39m,
  expectedLength: [33m7[39m,
  firstCharMatch: [33mtrue[39m,
  lastCharMatch: [33mtrue[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mtrue[39m

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-password.test.js" name="AuthService Password Verification &gt; TEST_ADMIN_PASSWORD in Non-Production &gt; should return false when TEST_ADMIN_PASSWORD is not configured" time="0.0001585">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m52[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [32m&apos;test&apos;[39m,
  hasTestPassword: [33mfalse[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [90mundefined[39m,
  adminPasswordHashPrefix: [32m&apos;$2b$10$&apos;[39m
}

            </system-out>
            <system-err>
[Auth] Non-production environment but TEST_ADMIN_PASSWORD not configured

            </system-err>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-password.test.js" name="AuthService Password Verification &gt; TEST_ADMIN_PASSWORD in Non-Production &gt; should handle empty string TEST_ADMIN_PASSWORD" time="0.0001705">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m52[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [32m&apos;test&apos;[39m,
  hasTestPassword: [33mfalse[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m0[39m,
  adminPasswordHashPrefix: [32m&apos;$2b$10$&apos;[39m
}

            </system-out>
            <system-err>
[Auth] Non-production environment but TEST_ADMIN_PASSWORD not configured

            </system-err>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-password.test.js" name="AuthService Password Verification &gt; ADMIN_PASSWORD in Production &gt; should use bcrypt in production" time="0.000193541">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;production&apos;[39m,
  VERCEL_ENV: [32m&apos;production&apos;[39m,
  CI: [90mundefined[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;VERCEL_ENV&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m52[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully
[Auth] Environment detection: {
  isProduction: [33mtrue[39m,
  isNonProd: [33mfalse[39m,
  VERCEL_ENV: [32m&apos;production&apos;[39m,
  NODE_ENV: [32m&apos;production&apos;[39m,
  hasTestPassword: [33mfalse[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [90mundefined[39m,
  adminPasswordHashPrefix: [32m&apos;$2a$10$&apos;[39m
}
[Auth] Attempting bcrypt comparison in production
[Auth] Bcrypt verification result: [33mtrue[39m

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-password.test.js" name="AuthService Password Verification &gt; ADMIN_PASSWORD in Production &gt; should return false when bcrypt comparison fails" time="0.000159875">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;production&apos;[39m,
  VERCEL_ENV: [32m&apos;production&apos;[39m,
  CI: [90mundefined[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;VERCEL_ENV&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m52[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully
[Auth] Environment detection: {
  isProduction: [33mtrue[39m,
  isNonProd: [33mfalse[39m,
  VERCEL_ENV: [32m&apos;production&apos;[39m,
  NODE_ENV: [32m&apos;production&apos;[39m,
  hasTestPassword: [33mfalse[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [90mundefined[39m,
  adminPasswordHashPrefix: [32m&apos;$2a$10$&apos;[39m
}
[Auth] Attempting bcrypt comparison in production
[Auth] Bcrypt verification result: [33mfalse[39m

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-password.test.js" name="AuthService Password Verification &gt; ADMIN_PASSWORD in Production &gt; should validate bcrypt hash format" time="0.000148334">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;production&apos;[39m,
  VERCEL_ENV: [32m&apos;production&apos;[39m,
  CI: [90mundefined[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;VERCEL_ENV&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m52[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully
[Auth] Environment detection: {
  isProduction: [33mtrue[39m,
  isNonProd: [33mfalse[39m,
  VERCEL_ENV: [32m&apos;production&apos;[39m,
  NODE_ENV: [32m&apos;production&apos;[39m,
  hasTestPassword: [33mfalse[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [90mundefined[39m,
  adminPasswordHashPrefix: [32m&apos;not-a-b&apos;[39m
}

            </system-out>
            <system-err>
[Auth] ADMIN_PASSWORD does not appear to be a valid bcrypt hash
[Auth] Hash prefix: not-

            </system-err>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-password.test.js" name="AuthService Password Verification &gt; ADMIN_PASSWORD in Production &gt; should handle bcrypt comparison errors" time="0.000241292">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;production&apos;[39m,
  VERCEL_ENV: [32m&apos;production&apos;[39m,
  CI: [90mundefined[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;VERCEL_ENV&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m52[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully
[Auth] Environment detection: {
  isProduction: [33mtrue[39m,
  isNonProd: [33mfalse[39m,
  VERCEL_ENV: [32m&apos;production&apos;[39m,
  NODE_ENV: [32m&apos;production&apos;[39m,
  hasTestPassword: [33mfalse[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [90mundefined[39m,
  adminPasswordHashPrefix: [32m&apos;$2a$10$&apos;[39m
}
[Auth] Attempting bcrypt comparison in production

            </system-out>
            <system-err>
[Auth] Bcrypt comparison error: Bcrypt error
[Auth] This usually means ADMIN_PASSWORD is not a valid bcrypt hash

            </system-err>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-password.test.js" name="AuthService Password Verification &gt; ADMIN_PASSWORD in Production &gt; should return false when ADMIN_PASSWORD is not configured" time="0.000170375">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;production&apos;[39m,
  VERCEL_ENV: [32m&apos;production&apos;[39m,
  CI: [90mundefined[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;VERCEL_ENV&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m52[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully
[Auth] Environment detection: {
  isProduction: [33mtrue[39m,
  isNonProd: [33mfalse[39m,
  VERCEL_ENV: [32m&apos;production&apos;[39m,
  NODE_ENV: [32m&apos;production&apos;[39m,
  hasTestPassword: [33mfalse[39m,
  hasAdminPassword: [33mfalse[39m,
  testPasswordLength: [90mundefined[39m,
  adminPasswordHashPrefix: [90mundefined[39m
}

            </system-out>
            <system-err>
[Auth] Production environment but ADMIN_PASSWORD not configured

            </system-err>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-password.test.js" name="AuthService Password Verification &gt; Error Handling &gt; should return false for null password" time="0.000170042">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m52[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully
[Auth] Password verification failed: No password provided

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-password.test.js" name="AuthService Password Verification &gt; Error Handling &gt; should return false for undefined password" time="0.000157375">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m52[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully
[Auth] Password verification failed: No password provided

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-password.test.js" name="AuthService Password Verification &gt; Error Handling &gt; should return false for empty string password" time="0.000143">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m52[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully
[Auth] Password verification failed: No password provided

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-password.test.js" name="AuthService Password Verification &gt; Error Handling &gt; should throw when initialization fails" time="0.000290542">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m
]

            </system-out>
            <system-err>
[Auth] ADMIN_SECRET not found in environment variables
[Auth] All env var keys: [
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;APPLE_PASS_KEY&apos;[39m,
  [32m&apos;BASE_URL&apos;[39m,
  [32m&apos;CI&apos;[39m,
  [32m&apos;CI_ENVIRONMENT&apos;[39m,
  [32m&apos;CLAUDECODE&apos;[39m,
  [32m&apos;CLAUDE_CODE_ENTRYPOINT&apos;[39m,
  [32m&apos;CLICOLOR&apos;[39m,
  [32m&apos;COLOR&apos;[39m,
  [32m&apos;CONTEXT7_API_KEY&apos;[39m,
  [32m&apos;COREPACK_ENABLE_AUTO_PIN&apos;[39m,
  [32m&apos;DATABASE_URL&apos;[39m,
  [32m&apos;DEV&apos;[39m,
  [32m&apos;EDITOR&apos;[39m,
  [32m&apos;ELEVENLABS_API_KEY&apos;[39m,
  [32m&apos;GITHUB_TOKEN&apos;[39m,
  [32m&apos;GIT_EDITOR&apos;[39m,
  [32m&apos;HOME&apos;[39m,
  [32m&apos;HOMEBREW_CELLAR&apos;[39m,
  [32m&apos;HOMEBREW_PREFIX&apos;[39m,
  [32m&apos;HOMEBREW_REPOSITORY&apos;[39m,
  [32m&apos;INFOPATH&apos;[39m,
  [32m&apos;INIT_CWD&apos;[39m,
  [32m&apos;INTERNAL_API_KEY&apos;[39m,
  [32m&apos;LANG&apos;[39m,
  [32m&apos;LOGNAME&apos;[39m,
  [32m&apos;LSCOLORS&apos;[39m,
  [32m&apos;MODE&apos;[39m,
  [32m&apos;NODE&apos;[39m,
  [32m&apos;NODE_ENV&apos;[39m,
  [32m&apos;NODE_OPTIONS&apos;[39m,
  [32m&apos;NOTION_API_KEY&apos;[39m,
  [32m&apos;NoDefaultCurrentDirectoryInExePath&apos;[39m,
  [32m&apos;OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE&apos;[39m,
  [32m&apos;PATH&apos;[39m,
  [32m&apos;PROD&apos;[39m,
  [32m&apos;PWD&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;SHELL&apos;[39m,
  [32m&apos;SHLVL&apos;[39m,
  [32m&apos;SPOTIFY_CLIENT_ID&apos;[39m,
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;SPOTIFY_REDIRECT_URI&apos;[39m,
  [32m&apos;SSH_AUTH_SOCK&apos;[39m,
  [32m&apos;SSR&apos;[39m,
  [32m&apos;TERM&apos;[39m,
  [32m&apos;TERM_PROGRAM&apos;[39m,
  [32m&apos;TERM_PROGRAM_VERSION&apos;[39m,
  [32m&apos;TERM_SESSION_ID&apos;[39m,
  [32m&apos;TEST&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;TEST_BASE_URL&apos;[39m,
  [32m&apos;TEST_PORT&apos;[39m,
  [32m&apos;TEST_TYPE&apos;[39m,
  [32m&apos;TINYPOOL_WORKER_ID&apos;[39m,
  [32m&apos;TMPDIR&apos;[39m,
  [32m&apos;TURSO_DATABASE_URL&apos;[39m,
  [32m&apos;UNIT_ONLY_MODE&apos;[39m,
  [32m&apos;USER&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;VIPSHOME&apos;[39m,
  [32m&apos;VITEST&apos;[39m,
  [32m&apos;VITEST_CLEANUP_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_HOOK_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_MODE&apos;[39m,
  [32m&apos;VITEST_POOL_ID&apos;[39m,
  [32m&apos;VITEST_SETUP_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_TEST_TIMEOUT&apos;[39m,
  [32m&apos;VITEST_WORKER_ID&apos;[39m,
  [32m&apos;VITE_USER_NODE_ENV&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;XPC_FLAGS&apos;[39m,
  [32m&apos;XPC_SERVICE_NAME&apos;[39m,
  [32m&apos;_&apos;[39m,
  [32m&apos;__CFBundleIdentifier&apos;[39m,
  [32m&apos;__CF_USER_TEXT_ENCODING&apos;[39m,
  [32m&apos;npm_command&apos;[39m,
  [32m&apos;npm_config_cache&apos;[39m,
  [32m&apos;npm_config_global_prefix&apos;[39m,
  [32m&apos;npm_config_globalconfig&apos;[39m,
  [32m&apos;npm_config_init_module&apos;[39m,
  [32m&apos;npm_config_local_prefix&apos;[39m,
  [32m&apos;npm_config_node_gyp&apos;[39m,
  [32m&apos;npm_config_noproxy&apos;[39m,
  [32m&apos;npm_config_npm_version&apos;[39m,
  [32m&apos;npm_config_prefix&apos;[39m,
  [32m&apos;npm_config_user_agent&apos;[39m,
  [32m&apos;npm_config_userconfig&apos;[39m,
  [32m&apos;npm_execpath&apos;[39m,
  [32m&apos;npm_lifecycle_event&apos;[39m,
  [32m&apos;npm_lifecycle_script&apos;[39m,
  [32m&apos;npm_node_execpath&apos;[39m,
  [32m&apos;npm_package_engines_node&apos;[39m,
  [32m&apos;npm_package_json&apos;[39m,
  [32m&apos;npm_package_name&apos;[39m,
  [32m&apos;npm_package_version&apos;[39m
]
[Auth] Initialization failed: ❌ FATAL: ADMIN_SECRET not configured

            </system-err>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-password.test.js" name="AuthService Password Verification &gt; Security Considerations &gt; should handle passwords with special characters" time="0.000164291">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m52[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [32m&apos;test&apos;[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m12[39m,
  adminPasswordHashPrefix: [32m&apos;$2b$10$&apos;[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m12[39m,
  expectedLength: [33m12[39m,
  firstCharMatch: [33mtrue[39m,
  lastCharMatch: [33mtrue[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mtrue[39m

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-password.test.js" name="AuthService Password Verification &gt; Security Considerations &gt; should handle very long passwords" time="0.000165167">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m52[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [32m&apos;test&apos;[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m200[39m,
  adminPasswordHashPrefix: [32m&apos;$2b$10$&apos;[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m200[39m,
  expectedLength: [33m200[39m,
  firstCharMatch: [33mtrue[39m,
  lastCharMatch: [33mtrue[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mtrue[39m

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-password.test.js" name="AuthService Password Verification &gt; Security Considerations &gt; should be case-sensitive" time="0.00016925">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m52[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [32m&apos;test&apos;[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m12[39m,
  adminPasswordHashPrefix: [32m&apos;$2b$10$&apos;[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m12[39m,
  expectedLength: [33m12[39m,
  firstCharMatch: [33mfalse[39m,
  lastCharMatch: [33mtrue[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mfalse[39m
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [32m&apos;test&apos;[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m12[39m,
  adminPasswordHashPrefix: [32m&apos;$2b$10$&apos;[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m12[39m,
  expectedLength: [33m12[39m,
  firstCharMatch: [33mtrue[39m,
  lastCharMatch: [33mtrue[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mtrue[39m

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-password.test.js" name="AuthService Password Verification &gt; Security Considerations &gt; should handle whitespace-only passwords" time="0.000157208">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;test&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m52[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [32m&apos;test&apos;[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m3[39m,
  adminPasswordHashPrefix: [32m&apos;$2b$10$&apos;[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m0[39m,
  expectedLength: [33m0[39m,
  firstCharMatch: [33mtrue[39m,
  lastCharMatch: [33mtrue[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mtrue[39m

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-password.test.js" name="AuthService Password Verification &gt; Mixed Environment Scenarios &gt; should handle Vercel preview environment correctly" time="0.000173167">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;production&apos;[39m,
  VERCEL_ENV: [32m&apos;preview&apos;[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m,
  [32m&apos;VERCEL_ENV&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m52[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [32m&apos;preview&apos;[39m,
  NODE_ENV: [32m&apos;production&apos;[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m10[39m,
  adminPasswordHashPrefix: [32m&apos;$2a$10$&apos;[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m10[39m,
  expectedLength: [33m10[39m,
  firstCharMatch: [33mtrue[39m,
  lastCharMatch: [33mtrue[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mtrue[39m

            </system-out>
        </testcase>
        <testcase classname="tests/unit/services/auth-service-password.test.js" name="AuthService Password Verification &gt; Mixed Environment Scenarios &gt; should require both NODE_ENV and VERCEL_ENV for production" time="0.000164792">
            <system-out>
[Auth] Starting auth service initialization...
[Auth] Environment: {
  NODE_ENV: [32m&apos;production&apos;[39m,
  VERCEL_ENV: [90mundefined[39m,
  CI: [32m&apos;true&apos;[39m,
  E2E_TEST_MODE: [90mundefined[39m
}
[Auth] Checking for ADMIN_SECRET...
[Auth] Available env vars: [
  [32m&apos;SPOTIFY_CLIENT_SECRET&apos;[39m,
  [32m&apos;VERCEL_TOKEN&apos;[39m,
  [32m&apos;ADMIN_PASSWORD&apos;[39m,
  [32m&apos;VERCEL_PROJECT_ID&apos;[39m,
  [32m&apos;VERCEL_ORG_ID&apos;[39m,
  [32m&apos;QR_SECRET_KEY&apos;[39m,
  [32m&apos;WALLET_AUTH_SECRET&apos;[39m,
  [32m&apos;TEST_ADMIN_PASSWORD&apos;[39m,
  [32m&apos;ADMIN_SECRET&apos;[39m
]
[Auth] ADMIN_SECRET loaded, length: [33m52[39m
[Auth] Session duration set to: [33m3600000[39m ms
[Auth] Auth service initialization completed successfully
[Auth] Environment detection: {
  isProduction: [33mfalse[39m,
  isNonProd: [33mtrue[39m,
  VERCEL_ENV: [90mundefined[39m,
  NODE_ENV: [32m&apos;production&apos;[39m,
  hasTestPassword: [33mtrue[39m,
  hasAdminPassword: [33mtrue[39m,
  testPasswordLength: [33m7[39m,
  adminPasswordHashPrefix: [32m&apos;$2b$10$&apos;[39m
}
[Auth] Non-prod password check: {
  providedLength: [33m7[39m,
  expectedLength: [33m7[39m,
  firstCharMatch: [33mtrue[39m,
  lastCharMatch: [33mtrue[39m
}
[Auth] TEST_ADMIN_PASSWORD verification result: [33mtrue[39m

            </system-out>
        </testcase>
    </testsuite>
</testsuites>
