name: Simplified E2E Tests

on:
  pull_request:
    branches: [main, develop, feature/phase4-*]
    types: [opened, synchronize, reopened]
  push:
    branches: [main, feature/phase4-*]
  workflow_dispatch:
    inputs:
      browser:
        description: 'Browser to test'
        required: false
        default: 'chromium'
        type: choice
        options:
          - chromium
          - firefox
          - webkit

jobs:
  e2e-tests:
    name: E2E Tests - Simplified
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps ${{ github.event.inputs.browser || 'chromium' }}

      - name: Setup test environment
        env:
          TURSO_DATABASE_URL: ${{ secrets.TURSO_DATABASE_URL }}
          TURSO_AUTH_TOKEN: ${{ secrets.TURSO_AUTH_TOKEN }}
          STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_TEST_PUBLISHABLE_KEY }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_TEST_SECRET_KEY }}
          BREVO_API_KEY: ${{ secrets.BREVO_TEST_API_KEY }}
          BREVO_NEWSLETTER_LIST_ID: ${{ secrets.BREVO_TEST_NEWSLETTER_LIST_ID }}
          ADMIN_SECRET: ${{ secrets.TEST_ADMIN_SECRET }}
          ADMIN_PASSWORD: ${{ secrets.TEST_ADMIN_PASSWORD }}
          MIGRATION_SECRET_KEY: ${{ secrets.MIGRATION_SECRET_KEY }}
          WALLET_AUTH_SECRET: ${{ secrets.WALLET_AUTH_SECRET }}
          E2E_TEST_MODE: true
          DATABASE_URL: "file:./data/e2e-test.db"        run: |
          echo "Setting up E2E test environment..."
          echo "NODE_ENV=test" >> $GITHUB_ENV
          echo "E2E_TEST_MODE=true" >> $GITHUB_ENV
          
          # Initialize E2E database
          if [ -n "$TURSO_DATABASE_URL" ] && [ -n "$TURSO_AUTH_TOKEN" ]; then
            echo "E2E database available - setting up test data"
            npm run db:e2e:setup || echo "E2E database setup skipped"
          else
            echo "Using local SQLite for E2E tests"
            mkdir -p data
            npm run db:e2e:setup || echo "Database setup completed"
          fi

      - name: Start test server
        run: |
          echo "Starting test server..."
          npm run start:ci &
          SERVER_PID=$!
          echo "SERVER_PID=$SERVER_PID" >> $GITHUB_ENV
          
          # Wait for server to be ready
          for i in {1..60}; do
            if curl -f http://localhost:3000 >/dev/null 2>&1; then
              echo "Server is ready"
              break
            fi
            if [ $i -eq 60 ]; then
              echo "Server failed to start"
              exit 1
            fi
            sleep 1
          done

      - name: Run E2E tests
        run: |
          echo "Running E2E tests with ${{ github.event.inputs.browser || 'chromium' }}..."
          npx playwright test --config=playwright-e2e-ci.config.js --project=${{ github.event.inputs.browser || 'chromium' }} --reporter=html,line
        env:
          NODE_ENV: test
          E2E_TEST_MODE: true
          DATABASE_URL: "file:./data/e2e-test.db"
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-test-results-${{ github.event.inputs.browser || 'chromium' }}
          path: |
            playwright-report/
            test-results/
          retention-days: 7

      - name: Cleanup
        if: always()
        run: |
          if [ -n "${SERVER_PID:-}" ]; then
            echo "Stopping test server..."
            kill -TERM $SERVER_PID || true
            sleep 2
            kill -KILL $SERVER_PID 2>/dev/null || true
          fi
          
          # Clean up E2E test data
          if [ "$E2E_TEST_MODE" = "true" ]; then
            npm run db:e2e:clean || echo "E2E cleanup skipped"
          fi