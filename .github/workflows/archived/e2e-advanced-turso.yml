name: E2E Tests with Standard Environment

on:
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      database:
        description: 'Database to use for testing'
        required: false
        default: 'turso'
        type: choice
        options:
          - turso
          - sqlite

jobs:
  # Quick smoke tests with SQLite for fast feedback
  quick-smoke-tests:
    name: Quick Smoke Tests
    runs-on: ubuntu-latest
    timeout-minutes: 3
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run smoke tests with SQLite
        env:
          DATABASE_URL: "file:./test.db"
          NODE_ENV: test
        run: |
          npm run test:smoke || echo "Smoke tests provide quick feedback only"

  # Simplified E2E tests using standard environment variables
  e2e-tests:
    name: E2E Tests - Standard Environment
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: quick-smoke-tests
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps chromium
      
      - name: Setup test environment
        env:
          TURSO_DATABASE_URL: ${{ secrets.TURSO_DATABASE_URL }}
          TURSO_AUTH_TOKEN: ${{ secrets.TURSO_AUTH_TOKEN }}
        run: |
          # Use standard environment variables
          cat > .env.local << EOF
          TURSO_DATABASE_URL=$TURSO_DATABASE_URL
          TURSO_AUTH_TOKEN=$TURSO_AUTH_TOKEN
          E2E_TEST_MODE=true
          NODE_ENV=test
          EOF
          
          echo "‚úÖ Test environment configured"
      
      - name: Run migrations on test database
        run: |
          npm run migrate:up || echo "Migrations may already be applied"
      
      - name: Start test server
        run: |
          npm run start:ci &
          npx wait-on http://localhost:3000 -t 60000
      
      - name: Run E2E tests
        run: |
          echo "üß™ Running streamlined E2E tests..."
          npm run test:e2e
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-simplified
          path: |
            playwright-report/
            test-results/
          retention-days: 7

  # Test summary
  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: e2e-tests
    if: always()
    
    steps:
      - name: Generate test summary
        run: |
          echo "## üìä E2E Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.e2e-tests.result }}" == "success" ]; then
            echo "| All Tests | ‚úÖ Passed |" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Result: All E2E tests passed successfully!**" >> $GITHUB_STEP_SUMMARY
          else
            echo "| Some Tests | ‚ùå Failed |" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Result: Some tests failed. Check test results for details.**" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Configuration" >> $GITHUB_STEP_SUMMARY
          echo "- **Database**: Turso (Production-compatible)" >> $GITHUB_STEP_SUMMARY
          echo "- **Test Command**: npm run test:e2e" >> $GITHUB_STEP_SUMMARY
          echo "- **Browser**: Chromium" >> $GITHUB_STEP_SUMMARY
          echo "- **Duration**: < 10 minutes" >> $GITHUB_STEP_SUMMARY
      
      - name: Set PR status
        if: github.event_name == 'pull_request'
        run: |
          if [ "${{ needs.e2e-tests.result }}" != "success" ]; then
            echo "‚ùå E2E tests failed - review required"
            exit 1
          fi
          echo "‚úÖ All E2E tests passed"