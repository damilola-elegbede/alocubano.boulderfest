{
  "name": "alocubano-boulderfest",
  "version": "1.0.0",
  "description": "A Lo Cubano Boulder Fest - Minimalist Dance Festival Website",
  "type": "module",
  "private": true,
  "packageManager": "npm@8.0.0",
  "engines": {
    "node": ">=18.0.0"
  },
  "scripts": {
    "prebuild": "node ./scripts/generate-gallery-cache.js && node ./scripts/generate-featured-photos.js",
    "build": "npm run verify-structure && echo 'Build process completed'",
    "postbuild": "node ./scripts/verify-structure.js",
    "cache-warm": "node ./api/cache-warm.js",
    "performance:audit": "lighthouse http://localhost:8000 --output-path=./performance-audit.html --save-assets",
    "start": "./scripts/start-with-ngrok.sh",
    "start:local": "npx vercel dev --listen 3000",
    "start:ci": "node scripts/ci-server.js",
    "test:ci-server": "node scripts/ci-server.js --test-mode",
    "dev": "./scripts/start-with-ngrok.sh",
    "serve:simple": "npx http-server . -p 8000",
    "verify-structure": "node scripts/verify-structure.js",
    "create-event": "node scripts/create-new-event.js",
    "update-navigation": "node scripts/update-navigation.js",
    "update-navigation:dry-run": "node scripts/update-navigation.js --dry-run",
    "validate-events": "node scripts/verify-structure.js && node scripts/update-navigation.js --dry-run",
    "event-lifecycle": "node scripts/manage-event-lifecycle.js",
    "event-lifecycle:list": "node scripts/manage-event-lifecycle.js list",
    "event-lifecycle:archive": "node scripts/manage-event-lifecycle.js auto-archive --dry-run",
    "pre-commit": "npm run lint",
    "deploy:check": "node scripts/deployment-check.js",
    "deploy:quality-gate": "npm run lint && npm run deploy:test",
    "deploy:staging": "npm run deploy:quality-gate && vercel --target preview",
    "deploy:production": "npm run deploy:quality-gate && vercel --target production",
    "migrate:up": "DOTENV_CONFIG_PATH=.env.local node -r dotenv/config scripts/migrate.js",
    "migrate:prod": "NODE_ENV=production node scripts/migrate.js",
    "migrate:prod:deploy": "NODE_ENV=production node scripts/production-migrate.js deploy --force",
    "migrate:prod:check": "NODE_ENV=production node scripts/production-migrate.js check",
    "migrate:prod:dry-run": "NODE_ENV=production node scripts/production-migrate.js deploy --dry-run",
    "migrate:status": "node scripts/migrate.js status",
    "migrate:verify": "node scripts/migrate.js verify",
    "db:shell": "sqlite3 data/development.db",
    "monitoring:setup": "node scripts/monitoring-setup.js",
    "monitoring:validate": "node scripts/monitoring-setup.js --test-health",
    "health:check": "curl -f http://localhost:3000/api/health/check | jq '.' || echo 'Health check failed'",
    "health:database": "curl -f http://localhost:3000/api/health/database | jq '.' || echo 'Database health check failed'",
    "health:stripe": "curl -f http://localhost:3000/api/health/stripe | jq '.' || echo 'Stripe health check failed'",
    "health:brevo": "curl -f http://localhost:3000/api/health/brevo | jq '.' || echo 'Brevo health check failed'",
    "health:analytics": "curl -f http://localhost:3000/api/health/analytics | jq '.' || echo 'Analytics health check failed'",
    "monitoring:uptime": "curl -f http://localhost:3000/api/monitoring/uptime | jq '.' || echo 'Uptime check failed'",
    "monitoring:metrics": "curl -f 'http://localhost:3000/api/monitoring/metrics?api_key=${METRICS_API_KEY}' | jq '.' || echo 'Metrics fetch failed'",
    "monitoring:alerts": "curl -f http://localhost:3000/api/monitoring/alerts | jq '.' || echo 'Alerts check failed'",
    "monitoring:dashboard": "open http://localhost:3000/api/monitoring/dashboard?format=html",
    "alert:trigger": "curl -X POST http://localhost:3000/api/monitoring/alerts -H \"X-Admin-Key: ${ADMIN_API_KEY}\" -H 'Content-Type: application/json' -d '{\"action\":\"trigger\",\"severity\":\"info\",\"description\":\"Manual test alert\"}' | jq '.'",
    "performance": "node scripts/performance-test-runner.js",
    "performance:all": "node scripts/performance-test-runner.js --tests=ticket-sales,check-in,sustained,stress",
    "performance:critical": "node scripts/performance-test-runner.js --tests=ticket-sales,check-in",
    "performance:ci:full": "node scripts/performance-test-runner.js --tests=ticket-sales,check-in --duration=3m --reduced-load --skip-health-check",
    "performance:ci:critical": "node scripts/performance-test-runner.js --tests=ticket-sales --duration=2m --reduced-load --skip-health-check",
    "performance:parallel": "node scripts/performance-test-runner.js --parallel",
    "performance:baseline": "node scripts/performance-test-runner.js --update-baselines",
    "performance:staging": "cross-env LOAD_TEST_BASE_URL=https://alocubanoboulderfest-staging.vercel.app node scripts/performance-test-runner.js",
    "performance:production": "cross-env LOAD_TEST_BASE_URL=https://alocubanoboulderfest.vercel.app node scripts/performance-test-runner.js --skip-health-check",
    "performance:vercel:preview": "node scripts/performance-test-runner.js --tests=ticket-sales,check-in --vercel-optimized",
    "performance:vercel:production": "cross-env LOAD_TEST_BASE_URL=https://alocubanoboulderfest.vercel.app node scripts/performance-test-runner.js --tests=ticket-sales,check-in --vercel-optimized --skip-health-check",
    "performance:ci": "node scripts/performance-test-runner.js --tests=ticket-sales --duration=5m --reduced-load",
    "performance:warmup": "node scripts/performance-test-runner.js --warmup-only",
    "performance:checkout-bench": "vitest run tests/performance/checkout-performance.test.js",
    "performance:load-integration": "TEST_BASE_URL=http://localhost:3000 vitest run tests/performance/load-integration.test.js",
    "performance:load-integration:local": "TEST_BASE_URL=http://localhost:3000 vitest run tests/performance/load-integration.test.js",
    "performance:regression": "node scripts/check-performance-regression.js",
    "performance:regression:verbose": "node scripts/check-performance-regression.js --verbose",
    "performance:budget": "node scripts/check-performance-regression.js --analysis-window=7",
    "performance:full-suite": "npm test tests/performance && npm run performance && npm run performance:regression",
    "k6:install": "brew install k6 2>/dev/null || (echo '‚ùå Failed to install K6 via brew. Please install manually:' && echo 'üîó macOS: brew install k6' && echo 'üîó Linux: sudo gpg -k && sudo gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69 && echo \"deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main\" | sudo tee /etc/apt/sources.list.d/k6.list && sudo apt-get update && sudo apt-get install k6' && echo 'üîó Windows: winget install k6 --source winget' && echo 'üîó Docker: docker pull grafana/k6:latest' && echo 'üîó More info: https://k6.io/docs/getting-started/installation/' && exit 1)",
    "k6:check": "k6 version >/dev/null 2>&1 && echo '‚úÖ K6 is installed and ready' || (echo '‚ùå K6 not found. Install it with:' && echo '   npm run k6:install' && echo '   Or visit: https://k6.io/docs/getting-started/installation/' && exit 1)",
    "k6:vercel:ticket-sales": "k6 run --env LOAD_TEST_BASE_URL=${VERCEL_URL:-http://localhost:3000} --env TEST_ENV=vercel tests/load/k6-ticket-sales.js",
    "k6:vercel:check-in": "k6 run --env LOAD_TEST_BASE_URL=${VERCEL_URL:-http://localhost:3000} --env TEST_ENV=vercel tests/load/k6-check-in-rush.js",
    "k6:vercel:sustained": "k6 run --env LOAD_TEST_BASE_URL=${VERCEL_URL:-http://localhost:3000} --env TEST_ENV=vercel tests/load/k6-sustained-load.js",
    "k6:vercel:stress": "k6 run --env LOAD_TEST_BASE_URL=${VERCEL_URL:-http://localhost:3000} --env TEST_ENV=vercel tests/load/k6-stress-test.js",
    "test": "vitest run",
    "test:watch": "vitest watch",
    "test:coverage": "vitest run --coverage",
    "test:e2e": "playwright test",
    "lint": "npm run lint:js && npm run lint:html",
    "lint:js": "eslint .",
    "lint:html": "htmlhint pages/"
  },
  "dependencies": {
    "@libsql/client": "^0.15.10",
    "@sentry/node": "^7.84.0",
    "@stripe/stripe-js": "^7.8.0",
    "@types/node": "^24.2.0",
    "bcryptjs": "^3.0.2",
    "cookie": "^1.0.2",
    "dotenv": "^17.2.0",
    "dotenv-cli": "^10.0.0",
    "google-auth-library": "^10.2.1",
    "googleapis": "^153.0.0",
    "helmet": "^8.0.0",
    "html5-qrcode": "^2.3.8",
    "ioredis": "^5.7.0",
    "ip-range-check": "^0.2.0",
    "jsonwebtoken": "^9.0.2",
    "node-fetch": "^3.3.2",
    "passkit-generator": "^3.4.0",
    "qrcode": "^1.5.4",
    "redis": "^4.7.1",
    "sharp": "^0.34.3",
    "speakeasy": "^2.0.0",
    "sqlite": "^5.1.1",
    "sqlite3": "^5.1.7",
    "stripe": "^18.4.0",
    "thirty-two": "^1.0.2",
    "uuid": "^11.1.0"
  },
  "devDependencies": {
    "@axe-core/playwright": "^4.10.2",
    "@axe-core/puppeteer": "^4.8.0",
    "@faker-js/faker": "^9.9.0",
    "@playwright/test": "^1.54.2",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "better-sqlite3": "^12.2.0",
    "cross-env": "^7.0.3",
    "eslint": "^9.15.0",
    "express": "^5.1.0",
    "happy-dom": "^18.0.1",
    "html-validator": "^6.0.1",
    "htmlhint": "^1.6.3",
    "http-server": "^14.1.1",
    "jsdom": "^26.1.0",
    "lighthouse": "^12.8.1",
    "nock": "^14.0.9",
    "node-mocks-http": "^1.17.2",
    "puppeteer": "^23.11.0",
    "stylelint": "^16.21.1",
    "stylelint-config-standard": "^36.0.1",
    "supertest": "^7.1.4",
    "vercel": "^41.0.2",
    "vitest": "^3.2.4",
    "wait-on": "^7.2.0"
  }
}
