# Unified Performance Testing Pipeline
name: Performance Testing

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
    # Only run if PR contains performance-related changes
    paths:
      - 'api/**'
      - 'js/**'
      - 'tests/load/**'
      - '.github/workflows/performance.yml'
  push:
    branches: [main]  # Baseline updates
  workflow_dispatch:
    inputs:
      test_suite:
        description: 'Test suite'
        default: 'critical'
        type: choice
        options: [critical, full, stress]
      target_url:
        description: 'Target URL (optional)'
        required: false

env:
  NODE_VERSION: '20'

jobs:
  # Wait for Vercel deployment (PR only)
  wait-for-deployment:
    name: Wait for Vercel Deployment
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    outputs:
      deployment_url: ${{ steps.deployment.outputs.url }}
    steps:
      - name: Wait for Vercel Preview
        uses: patrickedqvist/wait-for-vercel-preview@v1.3.1
        id: deployment
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          max_timeout: 300
          check_interval: 15

  # Performance tests
  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: wait-for-deployment
    if: always() && (needs.wait-for-deployment.result == 'success' || needs.wait-for-deployment.result == 'skipped')
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Install K6
        run: |
          curl -L "https://github.com/grafana/k6/releases/download/v0.47.0/k6-v0.47.0-linux-amd64.tar.gz" | tar xvz
          sudo mv k6-v0.47.0-linux-amd64/k6 /usr/local/bin/
      - name: Run performance tests
        env:
          TARGET_URL: ${{ needs.wait-for-deployment.outputs.deployment_url || 'https://alocubanoboulderfest.vercel.app' }}
          TEST_SUITE: ${{ github.event.inputs.test_suite || 'critical' }}
        run: |
          echo "Testing: $TARGET_URL"
          # Simplified test runner - consolidate both performance scripts
          node scripts/performance-test-runner.js --url="$TARGET_URL" --tests="$TEST_SUITE"
      - name: Comment results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            // Simplified comment with key metrics only
            const comment = `## âš¡ Performance Test Results
            
            **Status**: Tests completed
            **Target**: ${{ env.TARGET_URL }}
            **Suite**: ${{ env.TEST_SUITE }}
            
            See [workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });